{
	"id": "f73bc1c0fb3f166692ccbcc9f145dcca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\";\r\n\r\ncontract GameCharacterNFT is ERC721, Ownable {\r\n    // Event triggered when a new character is minted\r\n    event CharacterMinted(address indexed owner, uint256 tokenId, string name, uint256 level, uint256 power);\r\n\r\n    // Base URI for metadata\r\n    string private baseTokenURI;\r\n\r\n    // Counter for tokenId\r\n    uint256 private tokenIdCounter;\r\n\r\n    // Mapping from character ID to whether the character has been minted\r\n    mapping(uint256 => bool) private characterMinted;\r\n\r\n    // Mapping from character ID to attributes\r\n    mapping(uint256 => CharacterAttributes) private characterAttributes;\r\n\r\n    // Struct to store character attributes\r\n    struct CharacterAttributes {\r\n        string name;\r\n        uint256 level;\r\n        uint256 power;\r\n    }\r\n\r\n    // Constructor\r\n    constructor(string memory _name, string memory _symbol, string memory _baseTokenURI) ERC721(_name, _symbol) Ownable(msg.sender) {\r\n        baseTokenURI = _baseTokenURI;\r\n    }\r\n\r\n    // Mint a new game character\r\n    function mintCharacter(string memory name, uint256 level, uint256 power) external onlyOwner {\r\n        uint256 tokenId = tokenIdCounter;\r\n        _safeMint(msg.sender, tokenId);\r\n        characterMinted[tokenId] = true;\r\n        characterAttributes[tokenId] = CharacterAttributes(name, level, power);\r\n        tokenIdCounter++;\r\n        emit CharacterMinted(msg.sender, tokenId, name, level, power);\r\n    }\r\n\r\n    // Get whether a character has been minted\r\n    function isCharacterMinted(uint256 tokenId) external view returns (bool) {\r\n        return characterMinted[tokenId];\r\n    }\r\n\r\n    // Get the attributes of a character\r\n    function getCharacterAttributes(uint256 tokenId) external view returns (string memory, uint256, uint256) {\r\n        require(characterMinted[tokenId], \"Character not minted\");\r\n        CharacterAttributes memory attributes = characterAttributes[tokenId];\r\n        return (attributes.name, attributes.level, attributes.power);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.0.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e4e78306b513f0bc36c600a419a63c1b7ed4688f5bb7c5a28d15be7ed5bddbe64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204e4e78306b513f0bc36c600a419a63c1b7ed4688f5bb7c5a28d15be7ed5bddbe64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0x4E PUSH25 0x306B513F0BC36C600A419A63C1B7ED4688F5BB7C5A28D15BE7 0xED JUMPDEST 0xDD 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204e4e78306b513f0bc36c600a419a63c1b7ed4688f5bb7c5a28d15be7ed5bddbe64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0x4E PUSH25 0x306B513F0BC36C600A419A63C1B7ED4688F5BB7C5A28D15BE7 0xED JUMPDEST 0xDD 0xBE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e4e78306b513f0bc36c600a419a63c1b7ed4688f5bb7c5a28d15be7ed5bddbe64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP6 0xE DUP5 DUP14 DIV RETURNDATACOPY MLOAD 0x26 0xA5 0xD7 SWAP3 CREATE 0xC1 0xC2 PUSH1 0xB MLOAD 0x4B PUSH14 0x947A0DCFE7AEA70CAD55262B6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SWAP6 0xE DUP5 DUP14 DIV RETURNDATACOPY MLOAD 0x26 0xA5 0xD7 SWAP3 CREATE 0xC1 0xC2 PUSH1 0xB MLOAD 0x4B PUSH14 0x947A0DCFE7AEA70CAD55262B6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8950e848d043e5126a5d792f0c1c2600b514b6d947a0dcfe7aea70cad55262b64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200525c703cd81b0b3f818584fd8f892f1e4dfe6d48048c32819c1d0e1b121d1a464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200525c703cd81b0b3f818584fd8f892f1e4dfe6d48048c32819c1d0e1b121d1a464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x25 0xC7 SUB 0xCD DUP2 0xB0 0xB3 0xF8 XOR PC 0x4F 0xD8 0xF8 SWAP3 CALL 0xE4 0xDF 0xE6 0xD4 DUP1 BASEFEE 0xC3 0x28 NOT 0xC1 0xD0 0xE1 0xB1 0x21 0xD1 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200525c703cd81b0b3f818584fd8f892f1e4dfe6d48048c32819c1d0e1b121d1a464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x25 0xC7 SUB 0xCD DUP2 0xB0 0xB3 0xF8 XOR PC 0x4F 0xD8 0xF8 SWAP3 CALL 0xE4 0xDF 0xE6 0xD4 DUP1 BASEFEE 0xC3 0x28 NOT 0xC1 0xD0 0xE1 0xB1 0x21 0xD1 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200525c703cd81b0b3f818584fd8f892f1e4dfe6d48048c32819c1d0e1b121d1a464736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft.sol": {
				"GameCharacterNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_baseTokenURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"name": "CharacterMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCharacterAttributes",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isCharacterMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"name": "mintCharacter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft.sol\":274:2247  contract GameCharacterNFT is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"nft.sol\":1061:1236  constructor(string memory _name, string memory _symbol, string memory _baseTokenURI) ERC721(_name, _symbol) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"nft.sol\":1177:1187  msg.sender */\n  caller\n    /* \"nft.sol\":1153:1158  _name */\n  dup4\n    /* \"nft.sol\":1160:1167  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"nft.sol\":1215:1228  _baseTokenURI */\n  dup1\n    /* \"nft.sol\":1200:1212  baseTokenURI */\n  0x07\n    /* \"nft.sol\":1200:1228  baseTokenURI = _baseTokenURI */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_18:\n  pop\n    /* \"nft.sol\":1061:1236  constructor(string memory _name, string memory _symbol, string memory _baseTokenURI) ERC721(_name, _symbol) Ownable(msg.sender) {... */\n  pop\n  pop\n  pop\n    /* \"nft.sol\":274:2247  contract GameCharacterNFT is ERC721, Ownable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_24:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_25:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_26:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_27:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_28:\n    /* \"#utility.yul\":957:984   */\n  tag_65\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_67\n  tag_27\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1030:1118   */\ntag_66:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_29:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_69\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_70\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_28\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_30:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_73\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1434:1490   */\ntag_72:\n    /* \"#utility.yul\":1508:1537   */\n  tag_74\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_26\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_31:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_76:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_32:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_80\n    /* \"#utility.yul\":1992:2041   */\n  tag_81\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_30\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1976:2042   */\n  tag_29\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_83\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2117:2229   */\ntag_82:\n    /* \"#utility.yul\":2238:2290   */\n  tag_84\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_33:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_87\n  tag_24\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2399:2521   */\ntag_86:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_88\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3859   */\ntag_3:\n    /* \"#utility.yul\":2795:2801   */\n  0x00\n    /* \"#utility.yul\":2803:2809   */\n  dup1\n    /* \"#utility.yul\":2811:2817   */\n  0x00\n    /* \"#utility.yul\":2860:2862   */\n  0x60\n    /* \"#utility.yul\":2848:2857   */\n  dup5\n    /* \"#utility.yul\":2839:2846   */\n  dup7\n    /* \"#utility.yul\":2835:2858   */\n  sub\n    /* \"#utility.yul\":2831:2863   */\n  slt\n    /* \"#utility.yul\":2828:2947   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2866:2945   */\n  tag_91\n  tag_22\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2828:2947   */\ntag_90:\n    /* \"#utility.yul\":3007:3008   */\n  0x00\n    /* \"#utility.yul\":2996:3005   */\n  dup5\n    /* \"#utility.yul\":2992:3009   */\n  add\n    /* \"#utility.yul\":2986:3010   */\n  mload\n    /* \"#utility.yul\":3037:3055   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3029:3035   */\n  dup2\n    /* \"#utility.yul\":3026:3056   */\n  gt\n    /* \"#utility.yul\":3023:3140   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3059:3138   */\n  tag_93\n  tag_23\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3023:3140   */\ntag_92:\n    /* \"#utility.yul\":3164:3238   */\n  tag_94\n    /* \"#utility.yul\":3230:3237   */\n  dup7\n    /* \"#utility.yul\":3221:3227   */\n  dup3\n    /* \"#utility.yul\":3210:3219   */\n  dup8\n    /* \"#utility.yul\":3206:3228   */\n  add\n    /* \"#utility.yul\":3164:3238   */\n  tag_33\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3154:3238   */\n  swap4\n  pop\n    /* \"#utility.yul\":2957:3248   */\n  pop\n    /* \"#utility.yul\":3308:3310   */\n  0x20\n    /* \"#utility.yul\":3297:3306   */\n  dup5\n    /* \"#utility.yul\":3293:3311   */\n  add\n    /* \"#utility.yul\":3287:3312   */\n  mload\n    /* \"#utility.yul\":3339:3357   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3331:3337   */\n  dup2\n    /* \"#utility.yul\":3328:3358   */\n  gt\n    /* \"#utility.yul\":3325:3442   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3361:3440   */\n  tag_96\n  tag_23\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3325:3442   */\ntag_95:\n    /* \"#utility.yul\":3466:3540   */\n  tag_97\n    /* \"#utility.yul\":3532:3539   */\n  dup7\n    /* \"#utility.yul\":3523:3529   */\n  dup3\n    /* \"#utility.yul\":3512:3521   */\n  dup8\n    /* \"#utility.yul\":3508:3530   */\n  add\n    /* \"#utility.yul\":3466:3540   */\n  tag_33\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3456:3540   */\n  swap3\n  pop\n    /* \"#utility.yul\":3258:3550   */\n  pop\n    /* \"#utility.yul\":3610:3612   */\n  0x40\n    /* \"#utility.yul\":3599:3608   */\n  dup5\n    /* \"#utility.yul\":3595:3613   */\n  add\n    /* \"#utility.yul\":3589:3614   */\n  mload\n    /* \"#utility.yul\":3641:3659   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3633:3639   */\n  dup2\n    /* \"#utility.yul\":3630:3660   */\n  gt\n    /* \"#utility.yul\":3627:3744   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3663:3742   */\n  tag_99\n  tag_23\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3627:3744   */\ntag_98:\n    /* \"#utility.yul\":3768:3842   */\n  tag_100\n    /* \"#utility.yul\":3834:3841   */\n  dup7\n    /* \"#utility.yul\":3825:3831   */\n  dup3\n    /* \"#utility.yul\":3814:3823   */\n  dup8\n    /* \"#utility.yul\":3810:3832   */\n  add\n    /* \"#utility.yul\":3768:3842   */\n  tag_33\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3758:3842   */\n  swap2\n  pop\n    /* \"#utility.yul\":3560:3852   */\n  pop\n    /* \"#utility.yul\":2677:3859   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3865:3964   */\ntag_34:\n    /* \"#utility.yul\":3917:3923   */\n  0x00\n    /* \"#utility.yul\":3951:3956   */\n  dup2\n    /* \"#utility.yul\":3945:3957   */\n  mload\n    /* \"#utility.yul\":3935:3957   */\n  swap1\n  pop\n    /* \"#utility.yul\":3865:3964   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3970:4150   */\ntag_35:\n    /* \"#utility.yul\":4018:4095   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4015:4016   */\n  0x00\n    /* \"#utility.yul\":4008:4096   */\n  mstore\n    /* \"#utility.yul\":4115:4119   */\n  0x22\n    /* \"#utility.yul\":4112:4113   */\n  0x04\n    /* \"#utility.yul\":4105:4120   */\n  mstore\n    /* \"#utility.yul\":4139:4143   */\n  0x24\n    /* \"#utility.yul\":4136:4137   */\n  0x00\n    /* \"#utility.yul\":4129:4144   */\n  revert\n    /* \"#utility.yul\":4156:4476   */\ntag_36:\n    /* \"#utility.yul\":4200:4206   */\n  0x00\n    /* \"#utility.yul\":4237:4238   */\n  0x02\n    /* \"#utility.yul\":4231:4235   */\n  dup3\n    /* \"#utility.yul\":4227:4239   */\n  div\n    /* \"#utility.yul\":4217:4239   */\n  swap1\n  pop\n    /* \"#utility.yul\":4284:4285   */\n  0x01\n    /* \"#utility.yul\":4278:4282   */\n  dup3\n    /* \"#utility.yul\":4274:4286   */\n  and\n    /* \"#utility.yul\":4305:4323   */\n  dup1\n    /* \"#utility.yul\":4295:4376   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4361:4365   */\n  0x7f\n    /* \"#utility.yul\":4353:4359   */\n  dup3\n    /* \"#utility.yul\":4349:4366   */\n  and\n    /* \"#utility.yul\":4339:4366   */\n  swap2\n  pop\n    /* \"#utility.yul\":4295:4376   */\ntag_104:\n    /* \"#utility.yul\":4423:4425   */\n  0x20\n    /* \"#utility.yul\":4415:4421   */\n  dup3\n    /* \"#utility.yul\":4412:4426   */\n  lt\n    /* \"#utility.yul\":4392:4410   */\n  dup2\n    /* \"#utility.yul\":4389:4427   */\n  sub\n    /* \"#utility.yul\":4386:4470   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4442:4460   */\n  tag_106\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4386:4470   */\ntag_105:\n    /* \"#utility.yul\":4207:4476   */\n  pop\n    /* \"#utility.yul\":4156:4476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4482:4623   */\ntag_37:\n    /* \"#utility.yul\":4531:4535   */\n  0x00\n    /* \"#utility.yul\":4554:4557   */\n  dup2\n    /* \"#utility.yul\":4546:4557   */\n  swap1\n  pop\n    /* \"#utility.yul\":4577:4580   */\n  dup2\n    /* \"#utility.yul\":4574:4575   */\n  0x00\n    /* \"#utility.yul\":4567:4581   */\n  mstore\n    /* \"#utility.yul\":4611:4615   */\n  0x20\n    /* \"#utility.yul\":4608:4609   */\n  0x00\n    /* \"#utility.yul\":4598:4616   */\n  keccak256\n    /* \"#utility.yul\":4590:4616   */\n  swap1\n  pop\n    /* \"#utility.yul\":4482:4623   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4629:4722   */\ntag_38:\n    /* \"#utility.yul\":4666:4672   */\n  0x00\n    /* \"#utility.yul\":4713:4715   */\n  0x20\n    /* \"#utility.yul\":4708:4710   */\n  0x1f\n    /* \"#utility.yul\":4701:4706   */\n  dup4\n    /* \"#utility.yul\":4697:4711   */\n  add\n    /* \"#utility.yul\":4693:4716   */\n  div\n    /* \"#utility.yul\":4683:4716   */\n  swap1\n  pop\n    /* \"#utility.yul\":4629:4722   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:4835   */\ntag_39:\n    /* \"#utility.yul\":4772:4780   */\n  0x00\n    /* \"#utility.yul\":4822:4827   */\n  dup3\n    /* \"#utility.yul\":4816:4820   */\n  dup3\n    /* \"#utility.yul\":4812:4828   */\n  shl\n    /* \"#utility.yul\":4791:4828   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:4835   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4841:5234   */\ntag_40:\n    /* \"#utility.yul\":4910:4916   */\n  0x00\n    /* \"#utility.yul\":4960:4961   */\n  0x08\n    /* \"#utility.yul\":4948:4958   */\n  dup4\n    /* \"#utility.yul\":4944:4962   */\n  mul\n    /* \"#utility.yul\":4983:5080   */\n  tag_111\n    /* \"#utility.yul\":5013:5079   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5002:5011   */\n  dup3\n    /* \"#utility.yul\":4983:5080   */\n  tag_39\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5101:5140   */\n  tag_112\n    /* \"#utility.yul\":5131:5139   */\n  dup7\n    /* \"#utility.yul\":5120:5129   */\n  dup4\n    /* \"#utility.yul\":5101:5140   */\n  tag_39\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5089:5140   */\n  swap6\n  pop\n    /* \"#utility.yul\":5173:5177   */\n  dup1\n    /* \"#utility.yul\":5169:5178   */\n  not\n    /* \"#utility.yul\":5162:5167   */\n  dup5\n    /* \"#utility.yul\":5158:5179   */\n  and\n    /* \"#utility.yul\":5149:5179   */\n  swap4\n  pop\n    /* \"#utility.yul\":5222:5226   */\n  dup1\n    /* \"#utility.yul\":5212:5220   */\n  dup7\n    /* \"#utility.yul\":5208:5227   */\n  and\n    /* \"#utility.yul\":5201:5206   */\n  dup5\n    /* \"#utility.yul\":5198:5228   */\n  or\n    /* \"#utility.yul\":5188:5228   */\n  swap3\n  pop\n    /* \"#utility.yul\":4917:5234   */\n  pop\n  pop\n    /* \"#utility.yul\":4841:5234   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5240:5317   */\ntag_41:\n    /* \"#utility.yul\":5277:5284   */\n  0x00\n    /* \"#utility.yul\":5306:5311   */\n  dup2\n    /* \"#utility.yul\":5295:5311   */\n  swap1\n  pop\n    /* \"#utility.yul\":5240:5317   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5323:5383   */\ntag_42:\n    /* \"#utility.yul\":5351:5354   */\n  0x00\n    /* \"#utility.yul\":5372:5377   */\n  dup2\n    /* \"#utility.yul\":5365:5377   */\n  swap1\n  pop\n    /* \"#utility.yul\":5323:5383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5389:5531   */\ntag_43:\n    /* \"#utility.yul\":5439:5448   */\n  0x00\n    /* \"#utility.yul\":5472:5525   */\n  tag_116\n    /* \"#utility.yul\":5490:5524   */\n  tag_117\n    /* \"#utility.yul\":5499:5523   */\n  tag_118\n    /* \"#utility.yul\":5517:5522   */\n  dup5\n    /* \"#utility.yul\":5499:5523   */\n  tag_41\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5490:5524   */\n  tag_42\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5472:5525   */\n  tag_41\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5459:5525   */\n  swap1\n  pop\n    /* \"#utility.yul\":5389:5531   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5537:5612   */\ntag_44:\n    /* \"#utility.yul\":5580:5583   */\n  0x00\n    /* \"#utility.yul\":5601:5606   */\n  dup2\n    /* \"#utility.yul\":5594:5606   */\n  swap1\n  pop\n    /* \"#utility.yul\":5537:5612   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5618:5887   */\ntag_45:\n    /* \"#utility.yul\":5728:5767   */\n  tag_121\n    /* \"#utility.yul\":5759:5766   */\n  dup4\n    /* \"#utility.yul\":5728:5767   */\n  tag_43\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5789:5880   */\n  tag_122\n    /* \"#utility.yul\":5838:5879   */\n  tag_123\n    /* \"#utility.yul\":5862:5878   */\n  dup3\n    /* \"#utility.yul\":5838:5879   */\n  tag_44\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5830:5836   */\n  dup5\n    /* \"#utility.yul\":5823:5827   */\n  dup5\n    /* \"#utility.yul\":5817:5828   */\n  sload\n    /* \"#utility.yul\":5789:5880   */\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5783:5787   */\n  dup3\n    /* \"#utility.yul\":5776:5881   */\n  sstore\n    /* \"#utility.yul\":5694:5887   */\n  pop\n    /* \"#utility.yul\":5618:5887   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5893:5966   */\ntag_46:\n    /* \"#utility.yul\":5938:5941   */\n  0x00\n    /* \"#utility.yul\":5893:5966   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5972:6161   */\ntag_47:\n    /* \"#utility.yul\":6049:6081   */\n  tag_126\n  tag_46\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6090:6155   */\n  tag_127\n    /* \"#utility.yul\":6148:6154   */\n  dup2\n    /* \"#utility.yul\":6140:6146   */\n  dup5\n    /* \"#utility.yul\":6134:6138   */\n  dup5\n    /* \"#utility.yul\":6090:6155   */\n  tag_45\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6025:6161   */\n  pop\n    /* \"#utility.yul\":5972:6161   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6167:6353   */\ntag_48:\n    /* \"#utility.yul\":6227:6347   */\ntag_129:\n    /* \"#utility.yul\":6244:6247   */\n  dup2\n    /* \"#utility.yul\":6237:6242   */\n  dup2\n    /* \"#utility.yul\":6234:6248   */\n  lt\n    /* \"#utility.yul\":6227:6347   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6298:6337   */\n  tag_132\n    /* \"#utility.yul\":6335:6336   */\n  0x00\n    /* \"#utility.yul\":6328:6333   */\n  dup3\n    /* \"#utility.yul\":6298:6337   */\n  tag_47\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6271:6272   */\n  0x01\n    /* \"#utility.yul\":6264:6269   */\n  dup2\n    /* \"#utility.yul\":6260:6273   */\n  add\n    /* \"#utility.yul\":6251:6273   */\n  swap1\n  pop\n    /* \"#utility.yul\":6227:6347   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":6167:6353   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6359:6902   */\ntag_49:\n    /* \"#utility.yul\":6460:6462   */\n  0x1f\n    /* \"#utility.yul\":6455:6458   */\n  dup3\n    /* \"#utility.yul\":6452:6463   */\n  gt\n    /* \"#utility.yul\":6449:6895   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":6494:6532   */\n  tag_135\n    /* \"#utility.yul\":6526:6531   */\n  dup2\n    /* \"#utility.yul\":6494:6532   */\n  tag_37\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6578:6607   */\n  tag_136\n    /* \"#utility.yul\":6596:6606   */\n  dup5\n    /* \"#utility.yul\":6578:6607   */\n  tag_38\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6568:6576   */\n  dup2\n    /* \"#utility.yul\":6564:6608   */\n  add\n    /* \"#utility.yul\":6761:6763   */\n  0x20\n    /* \"#utility.yul\":6749:6759   */\n  dup6\n    /* \"#utility.yul\":6746:6764   */\n  lt\n    /* \"#utility.yul\":6743:6792   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6782:6790   */\n  dup2\n    /* \"#utility.yul\":6767:6790   */\n  swap1\n  pop\n    /* \"#utility.yul\":6743:6792   */\ntag_137:\n    /* \"#utility.yul\":6805:6885   */\n  tag_138\n    /* \"#utility.yul\":6861:6883   */\n  tag_139\n    /* \"#utility.yul\":6879:6882   */\n  dup6\n    /* \"#utility.yul\":6861:6883   */\n  tag_38\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6851:6859   */\n  dup4\n    /* \"#utility.yul\":6847:6884   */\n  add\n    /* \"#utility.yul\":6834:6845   */\n  dup3\n    /* \"#utility.yul\":6805:6885   */\n  tag_48\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6464:6895   */\n  pop\n  pop\n    /* \"#utility.yul\":6449:6895   */\ntag_134:\n    /* \"#utility.yul\":6359:6902   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6908:7025   */\ntag_50:\n    /* \"#utility.yul\":6962:6970   */\n  0x00\n    /* \"#utility.yul\":7012:7017   */\n  dup3\n    /* \"#utility.yul\":7006:7010   */\n  dup3\n    /* \"#utility.yul\":7002:7018   */\n  shr\n    /* \"#utility.yul\":6981:7018   */\n  swap1\n  pop\n    /* \"#utility.yul\":6908:7025   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7031:7200   */\ntag_51:\n    /* \"#utility.yul\":7075:7081   */\n  0x00\n    /* \"#utility.yul\":7108:7159   */\n  tag_142\n    /* \"#utility.yul\":7156:7157   */\n  0x00\n    /* \"#utility.yul\":7152:7158   */\n  not\n    /* \"#utility.yul\":7144:7149   */\n  dup5\n    /* \"#utility.yul\":7141:7142   */\n  0x08\n    /* \"#utility.yul\":7137:7150   */\n  mul\n    /* \"#utility.yul\":7108:7159   */\n  tag_50\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7104:7160   */\n  not\n    /* \"#utility.yul\":7189:7193   */\n  dup1\n    /* \"#utility.yul\":7183:7187   */\n  dup4\n    /* \"#utility.yul\":7179:7194   */\n  and\n    /* \"#utility.yul\":7169:7194   */\n  swap2\n  pop\n    /* \"#utility.yul\":7082:7200   */\n  pop\n    /* \"#utility.yul\":7031:7200   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7205:7500   */\ntag_52:\n    /* \"#utility.yul\":7281:7285   */\n  0x00\n    /* \"#utility.yul\":7427:7456   */\n  tag_144\n    /* \"#utility.yul\":7452:7455   */\n  dup4\n    /* \"#utility.yul\":7446:7450   */\n  dup4\n    /* \"#utility.yul\":7427:7456   */\n  tag_51\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7419:7456   */\n  swap2\n  pop\n    /* \"#utility.yul\":7489:7492   */\n  dup3\n    /* \"#utility.yul\":7486:7487   */\n  0x02\n    /* \"#utility.yul\":7482:7493   */\n  mul\n    /* \"#utility.yul\":7476:7480   */\n  dup3\n    /* \"#utility.yul\":7473:7494   */\n  or\n    /* \"#utility.yul\":7465:7494   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7500   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7505:8900   */\ntag_9:\n    /* \"#utility.yul\":7622:7659   */\n  tag_146\n    /* \"#utility.yul\":7655:7658   */\n  dup3\n    /* \"#utility.yul\":7622:7659   */\n  tag_34\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7724:7742   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7716:7722   */\n  dup2\n    /* \"#utility.yul\":7713:7743   */\n  gt\n    /* \"#utility.yul\":7710:7766   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":7746:7764   */\n  tag_148\n  tag_27\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7710:7766   */\ntag_147:\n    /* \"#utility.yul\":7790:7828   */\n  tag_149\n    /* \"#utility.yul\":7822:7826   */\n  dup3\n    /* \"#utility.yul\":7816:7827   */\n  sload\n    /* \"#utility.yul\":7790:7828   */\n  tag_36\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7875:7942   */\n  tag_150\n    /* \"#utility.yul\":7935:7941   */\n  dup3\n    /* \"#utility.yul\":7927:7933   */\n  dup3\n    /* \"#utility.yul\":7921:7925   */\n  dup6\n    /* \"#utility.yul\":7875:7942   */\n  tag_49\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7969:7970   */\n  0x00\n    /* \"#utility.yul\":7993:7997   */\n  0x20\n    /* \"#utility.yul\":7980:7997   */\n  swap1\n  pop\n    /* \"#utility.yul\":8025:8027   */\n  0x1f\n    /* \"#utility.yul\":8017:8023   */\n  dup4\n    /* \"#utility.yul\":8014:8028   */\n  gt\n    /* \"#utility.yul\":8042:8043   */\n  0x01\n    /* \"#utility.yul\":8037:8655   */\n  dup2\n  eq\n  tag_152\n  jumpi\n    /* \"#utility.yul\":8699:8700   */\n  0x00\n    /* \"#utility.yul\":8716:8722   */\n  dup5\n    /* \"#utility.yul\":8713:8790   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8765:8774   */\n  dup3\n    /* \"#utility.yul\":8760:8763   */\n  dup8\n    /* \"#utility.yul\":8756:8775   */\n  add\n    /* \"#utility.yul\":8750:8776   */\n  mload\n    /* \"#utility.yul\":8741:8776   */\n  swap1\n  pop\n    /* \"#utility.yul\":8713:8790   */\ntag_153:\n    /* \"#utility.yul\":8816:8883   */\n  tag_154\n    /* \"#utility.yul\":8876:8882   */\n  dup6\n    /* \"#utility.yul\":8869:8874   */\n  dup3\n    /* \"#utility.yul\":8816:8883   */\n  tag_52\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8810:8814   */\n  dup7\n    /* \"#utility.yul\":8803:8884   */\n  sstore\n    /* \"#utility.yul\":8672:8894   */\n  pop\n    /* \"#utility.yul\":8007:8894   */\n  jump(tag_151)\n    /* \"#utility.yul\":8037:8655   */\ntag_152:\n    /* \"#utility.yul\":8089:8093   */\n  0x1f\n    /* \"#utility.yul\":8085:8094   */\n  not\n    /* \"#utility.yul\":8077:8083   */\n  dup5\n    /* \"#utility.yul\":8073:8095   */\n  and\n    /* \"#utility.yul\":8123:8160   */\n  tag_155\n    /* \"#utility.yul\":8155:8159   */\n  dup7\n    /* \"#utility.yul\":8123:8160   */\n  tag_37\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8182:8183   */\n  0x00\n    /* \"#utility.yul\":8196:8404   */\ntag_156:\n    /* \"#utility.yul\":8210:8217   */\n  dup3\n    /* \"#utility.yul\":8207:8208   */\n  dup2\n    /* \"#utility.yul\":8204:8218   */\n  lt\n    /* \"#utility.yul\":8196:8404   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":8289:8298   */\n  dup5\n    /* \"#utility.yul\":8284:8287   */\n  dup10\n    /* \"#utility.yul\":8280:8299   */\n  add\n    /* \"#utility.yul\":8274:8300   */\n  mload\n    /* \"#utility.yul\":8266:8272   */\n  dup3\n    /* \"#utility.yul\":8259:8301   */\n  sstore\n    /* \"#utility.yul\":8340:8341   */\n  0x01\n    /* \"#utility.yul\":8332:8338   */\n  dup3\n    /* \"#utility.yul\":8328:8342   */\n  add\n    /* \"#utility.yul\":8318:8342   */\n  swap2\n  pop\n    /* \"#utility.yul\":8387:8389   */\n  0x20\n    /* \"#utility.yul\":8376:8385   */\n  dup6\n    /* \"#utility.yul\":8372:8390   */\n  add\n    /* \"#utility.yul\":8359:8390   */\n  swap5\n  pop\n    /* \"#utility.yul\":8233:8237   */\n  0x20\n    /* \"#utility.yul\":8230:8231   */\n  dup2\n    /* \"#utility.yul\":8226:8238   */\n  add\n    /* \"#utility.yul\":8221:8238   */\n  swap1\n  pop\n    /* \"#utility.yul\":8196:8404   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":8432:8438   */\n  dup7\n    /* \"#utility.yul\":8423:8430   */\n  dup4\n    /* \"#utility.yul\":8420:8439   */\n  lt\n    /* \"#utility.yul\":8417:8596   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":8490:8499   */\n  dup5\n    /* \"#utility.yul\":8485:8488   */\n  dup10\n    /* \"#utility.yul\":8481:8500   */\n  add\n    /* \"#utility.yul\":8475:8501   */\n  mload\n    /* \"#utility.yul\":8533:8581   */\n  tag_160\n    /* \"#utility.yul\":8575:8579   */\n  0x1f\n    /* \"#utility.yul\":8567:8573   */\n  dup10\n    /* \"#utility.yul\":8563:8580   */\n  and\n    /* \"#utility.yul\":8552:8561   */\n  dup3\n    /* \"#utility.yul\":8533:8581   */\n  tag_51\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":8525:8531   */\n  dup4\n    /* \"#utility.yul\":8518:8582   */\n  sstore\n    /* \"#utility.yul\":8440:8596   */\n  pop\n    /* \"#utility.yul\":8417:8596   */\ntag_159:\n    /* \"#utility.yul\":8642:8643   */\n  0x01\n    /* \"#utility.yul\":8638:8639   */\n  0x02\n    /* \"#utility.yul\":8630:8636   */\n  dup9\n    /* \"#utility.yul\":8626:8640   */\n  mul\n    /* \"#utility.yul\":8622:8644   */\n  add\n    /* \"#utility.yul\":8616:8620   */\n  dup9\n    /* \"#utility.yul\":8609:8645   */\n  sstore\n    /* \"#utility.yul\":8044:8655   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8007:8894   */\ntag_151:\n  pop\n    /* \"#utility.yul\":7597:8900   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7505:8900   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8906:9032   */\ntag_53:\n    /* \"#utility.yul\":8943:8950   */\n  0x00\n    /* \"#utility.yul\":8983:9025   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8976:8981   */\n  dup3\n    /* \"#utility.yul\":8972:9026   */\n  and\n    /* \"#utility.yul\":8961:9026   */\n  swap1\n  pop\n    /* \"#utility.yul\":8906:9032   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9038:9134   */\ntag_54:\n    /* \"#utility.yul\":9075:9082   */\n  0x00\n    /* \"#utility.yul\":9104:9128   */\n  tag_163\n    /* \"#utility.yul\":9122:9127   */\n  dup3\n    /* \"#utility.yul\":9104:9128   */\n  tag_53\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":9093:9128   */\n  swap1\n  pop\n    /* \"#utility.yul\":9038:9134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9140:9258   */\ntag_55:\n    /* \"#utility.yul\":9227:9251   */\n  tag_165\n    /* \"#utility.yul\":9245:9250   */\n  dup2\n    /* \"#utility.yul\":9227:9251   */\n  tag_54\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":9222:9225   */\n  dup3\n    /* \"#utility.yul\":9215:9252   */\n  mstore\n    /* \"#utility.yul\":9140:9258   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9264:9486   */\ntag_14:\n    /* \"#utility.yul\":9357:9361   */\n  0x00\n    /* \"#utility.yul\":9395:9397   */\n  0x20\n    /* \"#utility.yul\":9384:9393   */\n  dup3\n    /* \"#utility.yul\":9380:9398   */\n  add\n    /* \"#utility.yul\":9372:9398   */\n  swap1\n  pop\n    /* \"#utility.yul\":9408:9479   */\n  tag_167\n    /* \"#utility.yul\":9476:9477   */\n  0x00\n    /* \"#utility.yul\":9465:9474   */\n  dup4\n    /* \"#utility.yul\":9461:9478   */\n  add\n    /* \"#utility.yul\":9452:9458   */\n  dup5\n    /* \"#utility.yul\":9408:9479   */\n  tag_55\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":9264:9486   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"nft.sol\":274:2247  contract GameCharacterNFT is ERC721, Ownable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft.sol\":274:2247  contract GameCharacterNFT is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd0e60cff\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9756aadd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5091df62\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"nft.sol\":1278:1684  function mintCharacter(string memory name, uint256 level, uint256 power) external onlyOwner {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft.sol\":1740:1863  function isCharacterMinted(uint256 tokenId) external view returns (bool) {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft.sol\":1913:2244  function getCharacterAttributes(uint256 tokenId) external view returns (string memory, uint256, uint256) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_104:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_105\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_106\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_105:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_110\n      jump\t// in\n    tag_111:\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_118\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_119\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_121\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_124\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_128\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_130\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_51:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_135\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft.sol\":1278:1684  function mintCharacter(string memory name, uint256 level, uint256 power) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"nft.sol\":1381:1396  uint256 tokenId */\n      0x00\n        /* \"nft.sol\":1399:1413  tokenIdCounter */\n      sload(0x08)\n        /* \"nft.sol\":1381:1413  uint256 tokenId = tokenIdCounter */\n      swap1\n      pop\n        /* \"nft.sol\":1424:1454  _safeMint(msg.sender, tokenId) */\n      tag_140\n        /* \"nft.sol\":1434:1444  msg.sender */\n      caller\n        /* \"nft.sol\":1446:1453  tokenId */\n      dup3\n        /* \"nft.sol\":1424:1433  _safeMint */\n      tag_141\n        /* \"nft.sol\":1424:1454  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"nft.sol\":1492:1496  true */\n      0x01\n        /* \"nft.sol\":1465:1480  characterMinted */\n      0x09\n        /* \"nft.sol\":1465:1489  characterMinted[tokenId] */\n      0x00\n        /* \"nft.sol\":1481:1488  tokenId */\n      dup4\n        /* \"nft.sol\":1465:1489  characterMinted[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft.sol\":1465:1496  characterMinted[tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft.sol\":1538:1577  CharacterAttributes(name, level, power) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nft.sol\":1558:1562  name */\n      dup6\n        /* \"nft.sol\":1538:1577  CharacterAttributes(name, level, power) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nft.sol\":1564:1569  level */\n      dup5\n        /* \"nft.sol\":1538:1577  CharacterAttributes(name, level, power) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nft.sol\":1571:1576  power */\n      dup4\n        /* \"nft.sol\":1538:1577  CharacterAttributes(name, level, power) */\n      dup2\n      mstore\n      pop\n        /* \"nft.sol\":1507:1526  characterAttributes */\n      0x0a\n        /* \"nft.sol\":1507:1535  characterAttributes[tokenId] */\n      0x00\n        /* \"nft.sol\":1527:1534  tokenId */\n      dup4\n        /* \"nft.sol\":1507:1535  characterAttributes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft.sol\":1507:1577  characterAttributes[tokenId] = CharacterAttributes(name, level, power) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"nft.sol\":1588:1602  tokenIdCounter */\n      0x08\n      0x00\n        /* \"nft.sol\":1588:1604  tokenIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft.sol\":1636:1646  msg.sender */\n      caller\n        /* \"nft.sol\":1620:1676  CharacterMinted(msg.sender, tokenId, name, level, power) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a4bb3b51994e0ca98a9a569b1b5baade9f795a768ce078dffdb422d1afeef4b\n        /* \"nft.sol\":1648:1655  tokenId */\n      dup3\n        /* \"nft.sol\":1657:1661  name */\n      dup7\n        /* \"nft.sol\":1663:1668  level */\n      dup7\n        /* \"nft.sol\":1670:1675  power */\n      dup7\n        /* \"nft.sol\":1620:1676  CharacterMinted(msg.sender, tokenId, name, level, power) */\n      mload(0x40)\n      tag_146\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft.sol\":1370:1684  {... */\n      pop\n        /* \"nft.sol\":1278:1684  function mintCharacter(string memory name, uint256 level, uint256 power) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_149\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_156\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_110\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_110\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"nft.sol\":1740:1863  function isCharacterMinted(uint256 tokenId) external view returns (bool) {... */\n    tag_76:\n        /* \"nft.sol\":1807:1811  bool */\n      0x00\n        /* \"nft.sol\":1831:1846  characterMinted */\n      0x09\n        /* \"nft.sol\":1831:1855  characterMinted[tokenId] */\n      0x00\n        /* \"nft.sol\":1847:1854  tokenId */\n      dup4\n        /* \"nft.sol\":1831:1855  characterMinted[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nft.sol\":1824:1855  return characterMinted[tokenId] */\n      swap1\n      pop\n        /* \"nft.sol\":1740:1863  function isCharacterMinted(uint256 tokenId) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_167\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_169\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_48\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_172\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_173\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_175\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_176\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_177\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_178\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_179)\n    tag_178:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_180\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_181\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_179:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft.sol\":1913:2244  function getCharacterAttributes(uint256 tokenId) external view returns (string memory, uint256, uint256) {... */\n    tag_92:\n        /* \"nft.sol\":1985:1998  string memory */\n      0x60\n        /* \"nft.sol\":2000:2007  uint256 */\n      0x00\n        /* \"nft.sol\":2009:2016  uint256 */\n      dup1\n        /* \"nft.sol\":2037:2052  characterMinted */\n      0x09\n        /* \"nft.sol\":2037:2061  characterMinted[tokenId] */\n      0x00\n        /* \"nft.sol\":2053:2060  tokenId */\n      dup6\n        /* \"nft.sol\":2037:2061  characterMinted[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nft.sol\":2029:2086  require(characterMinted[tokenId], \"Character not minted\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"nft.sol\":2097:2134  CharacterAttributes memory attributes */\n      0x00\n        /* \"nft.sol\":2137:2156  characterAttributes */\n      0x0a\n        /* \"nft.sol\":2137:2165  characterAttributes[tokenId] */\n      0x00\n        /* \"nft.sol\":2157:2164  tokenId */\n      dup7\n        /* \"nft.sol\":2137:2165  characterAttributes[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft.sol\":2097:2165  CharacterAttributes memory attributes = characterAttributes[tokenId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_110\n      jump\t// in\n    tag_188:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_110\n      jump\t// in\n    tag_189:\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nft.sol\":2184:2194  attributes */\n      dup1\n        /* \"nft.sol\":2184:2199  attributes.name */\n      0x00\n      add\n      mload\n        /* \"nft.sol\":2201:2211  attributes */\n      dup2\n        /* \"nft.sol\":2201:2217  attributes.level */\n      0x20\n      add\n      mload\n        /* \"nft.sol\":2219:2229  attributes */\n      dup3\n        /* \"nft.sol\":2219:2235  attributes.power */\n      0x40\n      add\n      mload\n        /* \"nft.sol\":2176:2236  return (attributes.name, attributes.level, attributes.power) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"nft.sol\":1913:2244  function getCharacterAttributes(uint256 tokenId) external view returns (string memory, uint256, uint256) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_202\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_203\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_209\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_210\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_212\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_203\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_214\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_215\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_217\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_210\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_220\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1862  owner() */\n      tag_221\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_226\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_227\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_173:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      0x01\n    tag_238:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_241\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_246\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_245)\n    tag_246:\n      0x60\n      swap2\n      pop\n    tag_245:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_255\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:769  Math.log10 */\n      tag_256\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n    tag_257:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_263\n      jumpi\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n    tag_263:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_261\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_269\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_269:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_271\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_272\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_272:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_274\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_98\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_273:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_279\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_280\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_288\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_289\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_290\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_173\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_293\n      jumpi\n      tag_294\n      tag_265\n      jump\t// in\n    tag_294:\n    tag_293:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_296\n      jumpi\n      tag_297\n      tag_265\n      jump\t// in\n    tag_297:\n    tag_296:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_299\n      jumpi\n      tag_300\n      tag_265\n      jump\t// in\n    tag_300:\n    tag_299:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_302\n      jumpi\n      tag_303\n      tag_265\n      jump\t// in\n    tag_303:\n    tag_302:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_305\n      jumpi\n      tag_306\n      tag_265\n      jump\t// in\n    tag_306:\n    tag_305:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_308\n      jumpi\n      tag_309\n      tag_265\n      jump\t// in\n    tag_309:\n    tag_308:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_312\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_313\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_314\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_98\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_313:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_316\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_119\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_315:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_312:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_289:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_320\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_130\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_323:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_324:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_325:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_326:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_327:\n        /* \"#utility.yul\":561:584   */\n      tag_389\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_326\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_390:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_328:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_392\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_327\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_395\n      tag_324\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":833:952   */\n    tag_394:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_396\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_328\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_329:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_330:\n        /* \"#utility.yul\":1268:1289   */\n      tag_399\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_329\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_401\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_330\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_331:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_332:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_333:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_405:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_405)\n    tag_407:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_334:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_335:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_410\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_331\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2329:2400   */\n      tag_411\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_332\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_412\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_333\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2499:2528   */\n      tag_413\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_334\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_34:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_415\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_335\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_336:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_337:\n        /* \"#utility.yul\":3016:3040   */\n      tag_418\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_336\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_419:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_338:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_421\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_337\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_37:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_424\n      tag_324\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3292:3411   */\n    tag_423:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_425\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_338\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_339:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_340:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_428\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_339\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_341:\n        /* \"#utility.yul\":3872:3896   */\n      tag_430\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_340\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_40:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_432\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_341\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_342:\n        /* \"#utility.yul\":4210:4234   */\n      tag_434\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_340\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_435:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_343:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_437\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_342\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_43:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_440\n      tag_324\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4503:4622   */\n    tag_439:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_441\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_343\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_442\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_338\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_47:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_445\n      tag_324\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5000:5119   */\n    tag_444:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_446\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_343\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_447\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_343\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_448\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_338\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5632   */\n    tag_344:\n        /* \"#utility.yul\":5624:5625   */\n      0x00\n        /* \"#utility.yul\":5621:5622   */\n      dup1\n        /* \"#utility.yul\":5614:5626   */\n      revert\n        /* \"#utility.yul\":5638:5755   */\n    tag_345:\n        /* \"#utility.yul\":5747:5748   */\n      0x00\n        /* \"#utility.yul\":5744:5745   */\n      dup1\n        /* \"#utility.yul\":5737:5749   */\n      revert\n        /* \"#utility.yul\":5761:5941   */\n    tag_259:\n        /* \"#utility.yul\":5809:5886   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5806:5807   */\n      0x00\n        /* \"#utility.yul\":5799:5887   */\n      mstore\n        /* \"#utility.yul\":5906:5910   */\n      0x41\n        /* \"#utility.yul\":5903:5904   */\n      0x04\n        /* \"#utility.yul\":5896:5911   */\n      mstore\n        /* \"#utility.yul\":5930:5934   */\n      0x24\n        /* \"#utility.yul\":5927:5928   */\n      0x00\n        /* \"#utility.yul\":5920:5935   */\n      revert\n        /* \"#utility.yul\":5947:6228   */\n    tag_346:\n        /* \"#utility.yul\":6030:6057   */\n      tag_453\n        /* \"#utility.yul\":6052:6056   */\n      dup3\n        /* \"#utility.yul\":6030:6057   */\n      tag_334\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6022:6028   */\n      dup2\n        /* \"#utility.yul\":6018:6058   */\n      add\n        /* \"#utility.yul\":6160:6166   */\n      dup2\n        /* \"#utility.yul\":6148:6158   */\n      dup2\n        /* \"#utility.yul\":6145:6167   */\n      lt\n        /* \"#utility.yul\":6124:6142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6112:6122   */\n      dup3\n        /* \"#utility.yul\":6109:6143   */\n      gt\n        /* \"#utility.yul\":6106:6168   */\n      or\n        /* \"#utility.yul\":6103:6191   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":6171:6189   */\n      tag_455\n      tag_259\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6103:6191   */\n    tag_454:\n        /* \"#utility.yul\":6211:6221   */\n      dup1\n        /* \"#utility.yul\":6207:6209   */\n      0x40\n        /* \"#utility.yul\":6200:6222   */\n      mstore\n        /* \"#utility.yul\":5990:6228   */\n      pop\n        /* \"#utility.yul\":5947:6228   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6363   */\n    tag_347:\n        /* \"#utility.yul\":6268:6274   */\n      0x00\n        /* \"#utility.yul\":6295:6315   */\n      tag_457\n      tag_323\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6285:6315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6324:6357   */\n      tag_458\n        /* \"#utility.yul\":6352:6356   */\n      dup3\n        /* \"#utility.yul\":6344:6350   */\n      dup3\n        /* \"#utility.yul\":6324:6357   */\n      tag_346\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6234:6363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6369:6677   */\n    tag_348:\n        /* \"#utility.yul\":6431:6435   */\n      0x00\n        /* \"#utility.yul\":6521:6539   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6513:6519   */\n      dup3\n        /* \"#utility.yul\":6510:6540   */\n      gt\n        /* \"#utility.yul\":6507:6563   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6543:6561   */\n      tag_461\n      tag_259\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6507:6563   */\n    tag_460:\n        /* \"#utility.yul\":6581:6610   */\n      tag_462\n        /* \"#utility.yul\":6603:6609   */\n      dup3\n        /* \"#utility.yul\":6581:6610   */\n      tag_334\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6573:6610   */\n      swap1\n      pop\n        /* \"#utility.yul\":6665:6669   */\n      0x20\n        /* \"#utility.yul\":6659:6663   */\n      dup2\n        /* \"#utility.yul\":6655:6670   */\n      add\n        /* \"#utility.yul\":6647:6670   */\n      swap1\n      pop\n        /* \"#utility.yul\":6369:6677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6683:6829   */\n    tag_349:\n        /* \"#utility.yul\":6780:6786   */\n      dup3\n        /* \"#utility.yul\":6775:6778   */\n      dup2\n        /* \"#utility.yul\":6770:6773   */\n      dup4\n        /* \"#utility.yul\":6757:6787   */\n      calldatacopy\n        /* \"#utility.yul\":6821:6822   */\n      0x00\n        /* \"#utility.yul\":6812:6818   */\n      dup4\n        /* \"#utility.yul\":6807:6810   */\n      dup4\n        /* \"#utility.yul\":6803:6819   */\n      add\n        /* \"#utility.yul\":6796:6823   */\n      mstore\n        /* \"#utility.yul\":6683:6829   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7260   */\n    tag_350:\n        /* \"#utility.yul\":6913:6918   */\n      0x00\n        /* \"#utility.yul\":6938:7004   */\n      tag_465\n        /* \"#utility.yul\":6954:7003   */\n      tag_466\n        /* \"#utility.yul\":6996:7002   */\n      dup5\n        /* \"#utility.yul\":6954:7003   */\n      tag_348\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6938:7004   */\n      tag_347\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6929:7004   */\n      swap1\n      pop\n        /* \"#utility.yul\":7027:7033   */\n      dup3\n        /* \"#utility.yul\":7020:7025   */\n      dup2\n        /* \"#utility.yul\":7013:7034   */\n      mstore\n        /* \"#utility.yul\":7065:7069   */\n      0x20\n        /* \"#utility.yul\":7058:7063   */\n      dup2\n        /* \"#utility.yul\":7054:7070   */\n      add\n        /* \"#utility.yul\":7103:7106   */\n      dup5\n        /* \"#utility.yul\":7094:7100   */\n      dup5\n        /* \"#utility.yul\":7089:7092   */\n      dup5\n        /* \"#utility.yul\":7085:7101   */\n      add\n        /* \"#utility.yul\":7082:7107   */\n      gt\n        /* \"#utility.yul\":7079:7191   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7110:7189   */\n      tag_468\n      tag_345\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7079:7191   */\n    tag_467:\n        /* \"#utility.yul\":7200:7254   */\n      tag_469\n        /* \"#utility.yul\":7247:7253   */\n      dup5\n        /* \"#utility.yul\":7242:7245   */\n      dup3\n        /* \"#utility.yul\":7237:7240   */\n      dup6\n        /* \"#utility.yul\":7200:7254   */\n      tag_349\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6919:7260   */\n      pop\n        /* \"#utility.yul\":6835:7260   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7280:7620   */\n    tag_351:\n        /* \"#utility.yul\":7336:7341   */\n      0x00\n        /* \"#utility.yul\":7385:7388   */\n      dup3\n        /* \"#utility.yul\":7378:7382   */\n      0x1f\n        /* \"#utility.yul\":7370:7376   */\n      dup4\n        /* \"#utility.yul\":7366:7383   */\n      add\n        /* \"#utility.yul\":7362:7389   */\n      slt\n        /* \"#utility.yul\":7352:7474   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7393:7472   */\n      tag_472\n      tag_344\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7352:7474   */\n    tag_471:\n        /* \"#utility.yul\":7510:7516   */\n      dup2\n        /* \"#utility.yul\":7497:7517   */\n      calldataload\n        /* \"#utility.yul\":7535:7614   */\n      tag_473\n        /* \"#utility.yul\":7610:7613   */\n      dup5\n        /* \"#utility.yul\":7602:7608   */\n      dup3\n        /* \"#utility.yul\":7595:7599   */\n      0x20\n        /* \"#utility.yul\":7587:7593   */\n      dup7\n        /* \"#utility.yul\":7583:7600   */\n      add\n        /* \"#utility.yul\":7535:7614   */\n      tag_350\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7526:7614   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7620   */\n      pop\n        /* \"#utility.yul\":7280:7620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7626:8425   */\n    tag_54:\n        /* \"#utility.yul\":7713:7719   */\n      0x00\n        /* \"#utility.yul\":7721:7727   */\n      dup1\n        /* \"#utility.yul\":7729:7735   */\n      0x00\n        /* \"#utility.yul\":7778:7780   */\n      0x60\n        /* \"#utility.yul\":7766:7775   */\n      dup5\n        /* \"#utility.yul\":7757:7764   */\n      dup7\n        /* \"#utility.yul\":7753:7776   */\n      sub\n        /* \"#utility.yul\":7749:7781   */\n      slt\n        /* \"#utility.yul\":7746:7865   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":7784:7863   */\n      tag_476\n      tag_324\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7746:7865   */\n    tag_475:\n        /* \"#utility.yul\":7932:7933   */\n      0x00\n        /* \"#utility.yul\":7921:7930   */\n      dup5\n        /* \"#utility.yul\":7917:7934   */\n      add\n        /* \"#utility.yul\":7904:7935   */\n      calldataload\n        /* \"#utility.yul\":7962:7980   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7954:7960   */\n      dup2\n        /* \"#utility.yul\":7951:7981   */\n      gt\n        /* \"#utility.yul\":7948:8065   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7984:8063   */\n      tag_478\n      tag_325\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7948:8065   */\n    tag_477:\n        /* \"#utility.yul\":8089:8152   */\n      tag_479\n        /* \"#utility.yul\":8144:8151   */\n      dup7\n        /* \"#utility.yul\":8135:8141   */\n      dup3\n        /* \"#utility.yul\":8124:8133   */\n      dup8\n        /* \"#utility.yul\":8120:8142   */\n      add\n        /* \"#utility.yul\":8089:8152   */\n      tag_351\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8079:8152   */\n      swap4\n      pop\n        /* \"#utility.yul\":7875:8162   */\n      pop\n        /* \"#utility.yul\":8201:8203   */\n      0x20\n        /* \"#utility.yul\":8227:8280   */\n      tag_480\n        /* \"#utility.yul\":8272:8279   */\n      dup7\n        /* \"#utility.yul\":8263:8269   */\n      dup3\n        /* \"#utility.yul\":8252:8261   */\n      dup8\n        /* \"#utility.yul\":8248:8270   */\n      add\n        /* \"#utility.yul\":8227:8280   */\n      tag_338\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8217:8280   */\n      swap3\n      pop\n        /* \"#utility.yul\":8172:8290   */\n      pop\n        /* \"#utility.yul\":8329:8331   */\n      0x40\n        /* \"#utility.yul\":8355:8408   */\n      tag_481\n        /* \"#utility.yul\":8400:8407   */\n      dup7\n        /* \"#utility.yul\":8391:8397   */\n      dup3\n        /* \"#utility.yul\":8380:8389   */\n      dup8\n        /* \"#utility.yul\":8376:8398   */\n      add\n        /* \"#utility.yul\":8355:8408   */\n      tag_338\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8345:8408   */\n      swap2\n      pop\n        /* \"#utility.yul\":8300:8418   */\n      pop\n        /* \"#utility.yul\":7626:8425   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8431:8760   */\n    tag_62:\n        /* \"#utility.yul\":8490:8496   */\n      0x00\n        /* \"#utility.yul\":8539:8541   */\n      0x20\n        /* \"#utility.yul\":8527:8536   */\n      dup3\n        /* \"#utility.yul\":8518:8525   */\n      dup5\n        /* \"#utility.yul\":8514:8537   */\n      sub\n        /* \"#utility.yul\":8510:8542   */\n      slt\n        /* \"#utility.yul\":8507:8626   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":8545:8624   */\n      tag_484\n      tag_324\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8507:8626   */\n    tag_483:\n        /* \"#utility.yul\":8665:8666   */\n      0x00\n        /* \"#utility.yul\":8690:8743   */\n      tag_485\n        /* \"#utility.yul\":8735:8742   */\n      dup5\n        /* \"#utility.yul\":8726:8732   */\n      dup3\n        /* \"#utility.yul\":8715:8724   */\n      dup6\n        /* \"#utility.yul\":8711:8733   */\n      add\n        /* \"#utility.yul\":8690:8743   */\n      tag_343\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8680:8743   */\n      swap2\n      pop\n        /* \"#utility.yul\":8636:8753   */\n      pop\n        /* \"#utility.yul\":8431:8760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8766:8884   */\n    tag_352:\n        /* \"#utility.yul\":8853:8877   */\n      tag_487\n        /* \"#utility.yul\":8871:8876   */\n      dup2\n        /* \"#utility.yul\":8853:8877   */\n      tag_336\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8848:8851   */\n      dup3\n        /* \"#utility.yul\":8841:8878   */\n      mstore\n        /* \"#utility.yul\":8766:8884   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8890:9112   */\n    tag_65:\n        /* \"#utility.yul\":8983:8987   */\n      0x00\n        /* \"#utility.yul\":9021:9023   */\n      0x20\n        /* \"#utility.yul\":9010:9019   */\n      dup3\n        /* \"#utility.yul\":9006:9024   */\n      add\n        /* \"#utility.yul\":8998:9024   */\n      swap1\n      pop\n        /* \"#utility.yul\":9034:9105   */\n      tag_489\n        /* \"#utility.yul\":9102:9103   */\n      0x00\n        /* \"#utility.yul\":9091:9100   */\n      dup4\n        /* \"#utility.yul\":9087:9104   */\n      add\n        /* \"#utility.yul\":9078:9084   */\n      dup5\n        /* \"#utility.yul\":9034:9105   */\n      tag_352\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8890:9112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9118:9234   */\n    tag_353:\n        /* \"#utility.yul\":9188:9209   */\n      tag_491\n        /* \"#utility.yul\":9203:9208   */\n      dup2\n        /* \"#utility.yul\":9188:9209   */\n      tag_329\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9181:9186   */\n      dup2\n        /* \"#utility.yul\":9178:9210   */\n      eq\n        /* \"#utility.yul\":9168:9228   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9221:9222   */\n      dup1\n        /* \"#utility.yul\":9214:9226   */\n      revert\n        /* \"#utility.yul\":9168:9228   */\n    tag_492:\n        /* \"#utility.yul\":9118:9234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9240:9373   */\n    tag_354:\n        /* \"#utility.yul\":9283:9288   */\n      0x00\n        /* \"#utility.yul\":9321:9327   */\n      dup2\n        /* \"#utility.yul\":9308:9328   */\n      calldataload\n        /* \"#utility.yul\":9299:9328   */\n      swap1\n      pop\n        /* \"#utility.yul\":9337:9367   */\n      tag_494\n        /* \"#utility.yul\":9361:9366   */\n      dup2\n        /* \"#utility.yul\":9337:9367   */\n      tag_353\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9240:9373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9847   */\n    tag_80:\n        /* \"#utility.yul\":9444:9450   */\n      0x00\n        /* \"#utility.yul\":9452:9458   */\n      dup1\n        /* \"#utility.yul\":9501:9503   */\n      0x40\n        /* \"#utility.yul\":9489:9498   */\n      dup4\n        /* \"#utility.yul\":9480:9487   */\n      dup6\n        /* \"#utility.yul\":9476:9499   */\n      sub\n        /* \"#utility.yul\":9472:9504   */\n      slt\n        /* \"#utility.yul\":9469:9588   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9507:9586   */\n      tag_497\n      tag_324\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9469:9588   */\n    tag_496:\n        /* \"#utility.yul\":9627:9628   */\n      0x00\n        /* \"#utility.yul\":9652:9705   */\n      tag_498\n        /* \"#utility.yul\":9697:9704   */\n      dup6\n        /* \"#utility.yul\":9688:9694   */\n      dup3\n        /* \"#utility.yul\":9677:9686   */\n      dup7\n        /* \"#utility.yul\":9673:9695   */\n      add\n        /* \"#utility.yul\":9652:9705   */\n      tag_343\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9642:9705   */\n      swap3\n      pop\n        /* \"#utility.yul\":9598:9715   */\n      pop\n        /* \"#utility.yul\":9754:9756   */\n      0x20\n        /* \"#utility.yul\":9780:9830   */\n      tag_499\n        /* \"#utility.yul\":9822:9829   */\n      dup6\n        /* \"#utility.yul\":9813:9819   */\n      dup3\n        /* \"#utility.yul\":9802:9811   */\n      dup7\n        /* \"#utility.yul\":9798:9820   */\n      add\n        /* \"#utility.yul\":9780:9830   */\n      tag_354\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9770:9830   */\n      swap2\n      pop\n        /* \"#utility.yul\":9725:9840   */\n      pop\n        /* \"#utility.yul\":9379:9847   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9853:10160   */\n    tag_355:\n        /* \"#utility.yul\":9914:9918   */\n      0x00\n        /* \"#utility.yul\":10004:10022   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9996:10002   */\n      dup3\n        /* \"#utility.yul\":9993:10023   */\n      gt\n        /* \"#utility.yul\":9990:10046   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_502\n      tag_259\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9990:10046   */\n    tag_501:\n        /* \"#utility.yul\":10064:10093   */\n      tag_503\n        /* \"#utility.yul\":10086:10092   */\n      dup3\n        /* \"#utility.yul\":10064:10093   */\n      tag_334\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10056:10093   */\n      swap1\n      pop\n        /* \"#utility.yul\":10148:10152   */\n      0x20\n        /* \"#utility.yul\":10142:10146   */\n      dup2\n        /* \"#utility.yul\":10138:10153   */\n      add\n        /* \"#utility.yul\":10130:10153   */\n      swap1\n      pop\n        /* \"#utility.yul\":9853:10160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10166:10589   */\n    tag_356:\n        /* \"#utility.yul\":10243:10248   */\n      0x00\n        /* \"#utility.yul\":10268:10333   */\n      tag_505\n        /* \"#utility.yul\":10284:10332   */\n      tag_506\n        /* \"#utility.yul\":10325:10331   */\n      dup5\n        /* \"#utility.yul\":10284:10332   */\n      tag_355\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10268:10333   */\n      tag_347\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10259:10333   */\n      swap1\n      pop\n        /* \"#utility.yul\":10356:10362   */\n      dup3\n        /* \"#utility.yul\":10349:10354   */\n      dup2\n        /* \"#utility.yul\":10342:10363   */\n      mstore\n        /* \"#utility.yul\":10394:10398   */\n      0x20\n        /* \"#utility.yul\":10387:10392   */\n      dup2\n        /* \"#utility.yul\":10383:10399   */\n      add\n        /* \"#utility.yul\":10432:10435   */\n      dup5\n        /* \"#utility.yul\":10423:10429   */\n      dup5\n        /* \"#utility.yul\":10418:10421   */\n      dup5\n        /* \"#utility.yul\":10414:10430   */\n      add\n        /* \"#utility.yul\":10411:10436   */\n      gt\n        /* \"#utility.yul\":10408:10520   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10439:10518   */\n      tag_508\n      tag_345\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10408:10520   */\n    tag_507:\n        /* \"#utility.yul\":10529:10583   */\n      tag_509\n        /* \"#utility.yul\":10576:10582   */\n      dup5\n        /* \"#utility.yul\":10571:10574   */\n      dup3\n        /* \"#utility.yul\":10566:10569   */\n      dup6\n        /* \"#utility.yul\":10529:10583   */\n      tag_349\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10249:10589   */\n      pop\n        /* \"#utility.yul\":10166:10589   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10608:10946   */\n    tag_357:\n        /* \"#utility.yul\":10663:10668   */\n      0x00\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10705:10709   */\n      0x1f\n        /* \"#utility.yul\":10697:10703   */\n      dup4\n        /* \"#utility.yul\":10693:10710   */\n      add\n        /* \"#utility.yul\":10689:10716   */\n      slt\n        /* \"#utility.yul\":10679:10801   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10720:10799   */\n      tag_512\n      tag_344\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10679:10801   */\n    tag_511:\n        /* \"#utility.yul\":10837:10843   */\n      dup2\n        /* \"#utility.yul\":10824:10844   */\n      calldataload\n        /* \"#utility.yul\":10862:10940   */\n      tag_513\n        /* \"#utility.yul\":10936:10939   */\n      dup5\n        /* \"#utility.yul\":10928:10934   */\n      dup3\n        /* \"#utility.yul\":10921:10925   */\n      0x20\n        /* \"#utility.yul\":10913:10919   */\n      dup7\n        /* \"#utility.yul\":10909:10926   */\n      add\n        /* \"#utility.yul\":10862:10940   */\n      tag_356\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10853:10940   */\n      swap2\n      pop\n        /* \"#utility.yul\":10669:10946   */\n      pop\n        /* \"#utility.yul\":10608:10946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11895   */\n    tag_84:\n        /* \"#utility.yul\":11047:11053   */\n      0x00\n        /* \"#utility.yul\":11055:11061   */\n      dup1\n        /* \"#utility.yul\":11063:11069   */\n      0x00\n        /* \"#utility.yul\":11071:11077   */\n      dup1\n        /* \"#utility.yul\":11120:11123   */\n      0x80\n        /* \"#utility.yul\":11108:11117   */\n      dup6\n        /* \"#utility.yul\":11099:11106   */\n      dup8\n        /* \"#utility.yul\":11095:11118   */\n      sub\n        /* \"#utility.yul\":11091:11124   */\n      slt\n        /* \"#utility.yul\":11088:11208   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":11127:11206   */\n      tag_516\n      tag_324\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11088:11208   */\n    tag_515:\n        /* \"#utility.yul\":11247:11248   */\n      0x00\n        /* \"#utility.yul\":11272:11325   */\n      tag_517\n        /* \"#utility.yul\":11317:11324   */\n      dup8\n        /* \"#utility.yul\":11308:11314   */\n      dup3\n        /* \"#utility.yul\":11297:11306   */\n      dup9\n        /* \"#utility.yul\":11293:11315   */\n      add\n        /* \"#utility.yul\":11272:11325   */\n      tag_343\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11262:11325   */\n      swap5\n      pop\n        /* \"#utility.yul\":11218:11335   */\n      pop\n        /* \"#utility.yul\":11374:11376   */\n      0x20\n        /* \"#utility.yul\":11400:11453   */\n      tag_518\n        /* \"#utility.yul\":11445:11452   */\n      dup8\n        /* \"#utility.yul\":11436:11442   */\n      dup3\n        /* \"#utility.yul\":11425:11434   */\n      dup9\n        /* \"#utility.yul\":11421:11443   */\n      add\n        /* \"#utility.yul\":11400:11453   */\n      tag_343\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11390:11453   */\n      swap4\n      pop\n        /* \"#utility.yul\":11345:11463   */\n      pop\n        /* \"#utility.yul\":11502:11504   */\n      0x40\n        /* \"#utility.yul\":11528:11581   */\n      tag_519\n        /* \"#utility.yul\":11573:11580   */\n      dup8\n        /* \"#utility.yul\":11564:11570   */\n      dup3\n        /* \"#utility.yul\":11553:11562   */\n      dup9\n        /* \"#utility.yul\":11549:11571   */\n      add\n        /* \"#utility.yul\":11528:11581   */\n      tag_338\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11518:11581   */\n      swap3\n      pop\n        /* \"#utility.yul\":11473:11591   */\n      pop\n        /* \"#utility.yul\":11658:11660   */\n      0x60\n        /* \"#utility.yul\":11647:11656   */\n      dup6\n        /* \"#utility.yul\":11643:11661   */\n      add\n        /* \"#utility.yul\":11630:11662   */\n      calldataload\n        /* \"#utility.yul\":11689:11707   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11681:11687   */\n      dup2\n        /* \"#utility.yul\":11678:11708   */\n      gt\n        /* \"#utility.yul\":11675:11792   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":11711:11790   */\n      tag_521\n      tag_325\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11675:11792   */\n    tag_520:\n        /* \"#utility.yul\":11816:11878   */\n      tag_522\n        /* \"#utility.yul\":11870:11877   */\n      dup8\n        /* \"#utility.yul\":11861:11867   */\n      dup3\n        /* \"#utility.yul\":11850:11859   */\n      dup9\n        /* \"#utility.yul\":11846:11868   */\n      add\n        /* \"#utility.yul\":11816:11878   */\n      tag_357\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11806:11878   */\n      swap2\n      pop\n        /* \"#utility.yul\":11601:11888   */\n      pop\n        /* \"#utility.yul\":10952:11895   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11901:12434   */\n    tag_94:\n        /* \"#utility.yul\":12070:12074   */\n      0x00\n        /* \"#utility.yul\":12108:12110   */\n      0x60\n        /* \"#utility.yul\":12097:12106   */\n      dup3\n        /* \"#utility.yul\":12093:12111   */\n      add\n        /* \"#utility.yul\":12085:12111   */\n      swap1\n      pop\n        /* \"#utility.yul\":12157:12166   */\n      dup2\n        /* \"#utility.yul\":12151:12155   */\n      dup2\n        /* \"#utility.yul\":12147:12167   */\n      sub\n        /* \"#utility.yul\":12143:12144   */\n      0x00\n        /* \"#utility.yul\":12132:12141   */\n      dup4\n        /* \"#utility.yul\":12128:12145   */\n      add\n        /* \"#utility.yul\":12121:12168   */\n      mstore\n        /* \"#utility.yul\":12185:12263   */\n      tag_524\n        /* \"#utility.yul\":12258:12262   */\n      dup2\n        /* \"#utility.yul\":12249:12255   */\n      dup7\n        /* \"#utility.yul\":12185:12263   */\n      tag_335\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12177:12263   */\n      swap1\n      pop\n        /* \"#utility.yul\":12273:12345   */\n      tag_525\n        /* \"#utility.yul\":12341:12343   */\n      0x20\n        /* \"#utility.yul\":12330:12339   */\n      dup4\n        /* \"#utility.yul\":12326:12344   */\n      add\n        /* \"#utility.yul\":12317:12323   */\n      dup6\n        /* \"#utility.yul\":12273:12345   */\n      tag_352\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12355:12427   */\n      tag_526\n        /* \"#utility.yul\":12423:12425   */\n      0x40\n        /* \"#utility.yul\":12412:12421   */\n      dup4\n        /* \"#utility.yul\":12408:12426   */\n      add\n        /* \"#utility.yul\":12399:12405   */\n      dup5\n        /* \"#utility.yul\":12355:12427   */\n      tag_352\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11901:12434   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12440:12914   */\n    tag_97:\n        /* \"#utility.yul\":12508:12514   */\n      0x00\n        /* \"#utility.yul\":12516:12522   */\n      dup1\n        /* \"#utility.yul\":12565:12567   */\n      0x40\n        /* \"#utility.yul\":12553:12562   */\n      dup4\n        /* \"#utility.yul\":12544:12551   */\n      dup6\n        /* \"#utility.yul\":12540:12563   */\n      sub\n        /* \"#utility.yul\":12536:12568   */\n      slt\n        /* \"#utility.yul\":12533:12652   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":12571:12650   */\n      tag_529\n      tag_324\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12533:12652   */\n    tag_528:\n        /* \"#utility.yul\":12691:12692   */\n      0x00\n        /* \"#utility.yul\":12716:12769   */\n      tag_530\n        /* \"#utility.yul\":12761:12768   */\n      dup6\n        /* \"#utility.yul\":12752:12758   */\n      dup3\n        /* \"#utility.yul\":12741:12750   */\n      dup7\n        /* \"#utility.yul\":12737:12759   */\n      add\n        /* \"#utility.yul\":12716:12769   */\n      tag_343\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12706:12769   */\n      swap3\n      pop\n        /* \"#utility.yul\":12662:12779   */\n      pop\n        /* \"#utility.yul\":12818:12820   */\n      0x20\n        /* \"#utility.yul\":12844:12897   */\n      tag_531\n        /* \"#utility.yul\":12889:12896   */\n      dup6\n        /* \"#utility.yul\":12880:12886   */\n      dup3\n        /* \"#utility.yul\":12869:12878   */\n      dup7\n        /* \"#utility.yul\":12865:12887   */\n      add\n        /* \"#utility.yul\":12844:12897   */\n      tag_343\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12834:12897   */\n      swap2\n      pop\n        /* \"#utility.yul\":12789:12907   */\n      pop\n        /* \"#utility.yul\":12440:12914   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12920:13100   */\n    tag_358:\n        /* \"#utility.yul\":12968:13045   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12965:12966   */\n      0x00\n        /* \"#utility.yul\":12958:13046   */\n      mstore\n        /* \"#utility.yul\":13065:13069   */\n      0x22\n        /* \"#utility.yul\":13062:13063   */\n      0x04\n        /* \"#utility.yul\":13055:13070   */\n      mstore\n        /* \"#utility.yul\":13089:13093   */\n      0x24\n        /* \"#utility.yul\":13086:13087   */\n      0x00\n        /* \"#utility.yul\":13079:13094   */\n      revert\n        /* \"#utility.yul\":13106:13426   */\n    tag_110:\n        /* \"#utility.yul\":13150:13156   */\n      0x00\n        /* \"#utility.yul\":13187:13188   */\n      0x02\n        /* \"#utility.yul\":13181:13185   */\n      dup3\n        /* \"#utility.yul\":13177:13189   */\n      div\n        /* \"#utility.yul\":13167:13189   */\n      swap1\n      pop\n        /* \"#utility.yul\":13234:13235   */\n      0x01\n        /* \"#utility.yul\":13228:13232   */\n      dup3\n        /* \"#utility.yul\":13224:13236   */\n      and\n        /* \"#utility.yul\":13255:13273   */\n      dup1\n        /* \"#utility.yul\":13245:13326   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":13311:13315   */\n      0x7f\n        /* \"#utility.yul\":13303:13309   */\n      dup3\n        /* \"#utility.yul\":13299:13316   */\n      and\n        /* \"#utility.yul\":13289:13316   */\n      swap2\n      pop\n        /* \"#utility.yul\":13245:13326   */\n    tag_534:\n        /* \"#utility.yul\":13373:13375   */\n      0x20\n        /* \"#utility.yul\":13365:13371   */\n      dup3\n        /* \"#utility.yul\":13362:13376   */\n      lt\n        /* \"#utility.yul\":13342:13360   */\n      dup2\n        /* \"#utility.yul\":13339:13377   */\n      sub\n        /* \"#utility.yul\":13336:13420   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":13392:13410   */\n      tag_536\n      tag_358\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13336:13420   */\n    tag_535:\n        /* \"#utility.yul\":13157:13426   */\n      pop\n        /* \"#utility.yul\":13106:13426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13432:13874   */\n    tag_133:\n        /* \"#utility.yul\":13581:13585   */\n      0x00\n        /* \"#utility.yul\":13619:13621   */\n      0x60\n        /* \"#utility.yul\":13608:13617   */\n      dup3\n        /* \"#utility.yul\":13604:13622   */\n      add\n        /* \"#utility.yul\":13596:13622   */\n      swap1\n      pop\n        /* \"#utility.yul\":13632:13703   */\n      tag_538\n        /* \"#utility.yul\":13700:13701   */\n      0x00\n        /* \"#utility.yul\":13689:13698   */\n      dup4\n        /* \"#utility.yul\":13685:13702   */\n      add\n        /* \"#utility.yul\":13676:13682   */\n      dup7\n        /* \"#utility.yul\":13632:13703   */\n      tag_341\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":13713:13785   */\n      tag_539\n        /* \"#utility.yul\":13781:13783   */\n      0x20\n        /* \"#utility.yul\":13770:13779   */\n      dup4\n        /* \"#utility.yul\":13766:13784   */\n      add\n        /* \"#utility.yul\":13757:13763   */\n      dup6\n        /* \"#utility.yul\":13713:13785   */\n      tag_352\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13795:13867   */\n      tag_540\n        /* \"#utility.yul\":13863:13865   */\n      0x40\n        /* \"#utility.yul\":13852:13861   */\n      dup4\n        /* \"#utility.yul\":13848:13866   */\n      add\n        /* \"#utility.yul\":13839:13845   */\n      dup5\n        /* \"#utility.yul\":13795:13867   */\n      tag_341\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13432:13874   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13880:14021   */\n    tag_359:\n        /* \"#utility.yul\":13929:13933   */\n      0x00\n        /* \"#utility.yul\":13952:13955   */\n      dup2\n        /* \"#utility.yul\":13944:13955   */\n      swap1\n      pop\n        /* \"#utility.yul\":13975:13978   */\n      dup2\n        /* \"#utility.yul\":13972:13973   */\n      0x00\n        /* \"#utility.yul\":13965:13979   */\n      mstore\n        /* \"#utility.yul\":14009:14013   */\n      0x20\n        /* \"#utility.yul\":14006:14007   */\n      0x00\n        /* \"#utility.yul\":13996:14014   */\n      keccak256\n        /* \"#utility.yul\":13988:14014   */\n      swap1\n      pop\n        /* \"#utility.yul\":13880:14021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14027:14120   */\n    tag_360:\n        /* \"#utility.yul\":14064:14070   */\n      0x00\n        /* \"#utility.yul\":14111:14113   */\n      0x20\n        /* \"#utility.yul\":14106:14108   */\n      0x1f\n        /* \"#utility.yul\":14099:14104   */\n      dup4\n        /* \"#utility.yul\":14095:14109   */\n      add\n        /* \"#utility.yul\":14091:14114   */\n      div\n        /* \"#utility.yul\":14081:14114   */\n      swap1\n      pop\n        /* \"#utility.yul\":14027:14120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14126:14233   */\n    tag_361:\n        /* \"#utility.yul\":14170:14178   */\n      0x00\n        /* \"#utility.yul\":14220:14225   */\n      dup3\n        /* \"#utility.yul\":14214:14218   */\n      dup3\n        /* \"#utility.yul\":14210:14226   */\n      shl\n        /* \"#utility.yul\":14189:14226   */\n      swap1\n      pop\n        /* \"#utility.yul\":14126:14233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14239:14632   */\n    tag_362:\n        /* \"#utility.yul\":14308:14314   */\n      0x00\n        /* \"#utility.yul\":14358:14359   */\n      0x08\n        /* \"#utility.yul\":14346:14356   */\n      dup4\n        /* \"#utility.yul\":14342:14360   */\n      mul\n        /* \"#utility.yul\":14381:14478   */\n      tag_545\n        /* \"#utility.yul\":14411:14477   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14400:14409   */\n      dup3\n        /* \"#utility.yul\":14381:14478   */\n      tag_361\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14499:14538   */\n      tag_546\n        /* \"#utility.yul\":14529:14537   */\n      dup7\n        /* \"#utility.yul\":14518:14527   */\n      dup4\n        /* \"#utility.yul\":14499:14538   */\n      tag_361\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14487:14538   */\n      swap6\n      pop\n        /* \"#utility.yul\":14571:14575   */\n      dup1\n        /* \"#utility.yul\":14567:14576   */\n      not\n        /* \"#utility.yul\":14560:14565   */\n      dup5\n        /* \"#utility.yul\":14556:14577   */\n      and\n        /* \"#utility.yul\":14547:14577   */\n      swap4\n      pop\n        /* \"#utility.yul\":14620:14624   */\n      dup1\n        /* \"#utility.yul\":14610:14618   */\n      dup7\n        /* \"#utility.yul\":14606:14625   */\n      and\n        /* \"#utility.yul\":14599:14604   */\n      dup5\n        /* \"#utility.yul\":14596:14626   */\n      or\n        /* \"#utility.yul\":14586:14626   */\n      swap3\n      pop\n        /* \"#utility.yul\":14315:14632   */\n      pop\n      pop\n        /* \"#utility.yul\":14239:14632   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14638:14698   */\n    tag_363:\n        /* \"#utility.yul\":14666:14669   */\n      0x00\n        /* \"#utility.yul\":14687:14692   */\n      dup2\n        /* \"#utility.yul\":14680:14692   */\n      swap1\n      pop\n        /* \"#utility.yul\":14638:14698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14704:14846   */\n    tag_364:\n        /* \"#utility.yul\":14754:14763   */\n      0x00\n        /* \"#utility.yul\":14787:14840   */\n      tag_549\n        /* \"#utility.yul\":14805:14839   */\n      tag_550\n        /* \"#utility.yul\":14814:14838   */\n      tag_551\n        /* \"#utility.yul\":14832:14837   */\n      dup5\n        /* \"#utility.yul\":14814:14838   */\n      tag_336\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14805:14839   */\n      tag_363\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14787:14840   */\n      tag_336\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14774:14840   */\n      swap1\n      pop\n        /* \"#utility.yul\":14704:14846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14852:14927   */\n    tag_365:\n        /* \"#utility.yul\":14895:14898   */\n      0x00\n        /* \"#utility.yul\":14916:14921   */\n      dup2\n        /* \"#utility.yul\":14909:14921   */\n      swap1\n      pop\n        /* \"#utility.yul\":14852:14927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14933:15202   */\n    tag_366:\n        /* \"#utility.yul\":15043:15082   */\n      tag_554\n        /* \"#utility.yul\":15074:15081   */\n      dup4\n        /* \"#utility.yul\":15043:15082   */\n      tag_364\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15104:15195   */\n      tag_555\n        /* \"#utility.yul\":15153:15194   */\n      tag_556\n        /* \"#utility.yul\":15177:15193   */\n      dup3\n        /* \"#utility.yul\":15153:15194   */\n      tag_365\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15145:15151   */\n      dup5\n        /* \"#utility.yul\":15138:15142   */\n      dup5\n        /* \"#utility.yul\":15132:15143   */\n      sload\n        /* \"#utility.yul\":15104:15195   */\n      tag_362\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15098:15102   */\n      dup3\n        /* \"#utility.yul\":15091:15196   */\n      sstore\n        /* \"#utility.yul\":15009:15202   */\n      pop\n        /* \"#utility.yul\":14933:15202   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15208:15281   */\n    tag_367:\n        /* \"#utility.yul\":15253:15256   */\n      0x00\n        /* \"#utility.yul\":15208:15281   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15287:15476   */\n    tag_368:\n        /* \"#utility.yul\":15364:15396   */\n      tag_559\n      tag_367\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15405:15470   */\n      tag_560\n        /* \"#utility.yul\":15463:15469   */\n      dup2\n        /* \"#utility.yul\":15455:15461   */\n      dup5\n        /* \"#utility.yul\":15449:15453   */\n      dup5\n        /* \"#utility.yul\":15405:15470   */\n      tag_366\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15340:15476   */\n      pop\n        /* \"#utility.yul\":15287:15476   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15482:15668   */\n    tag_369:\n        /* \"#utility.yul\":15542:15662   */\n    tag_562:\n        /* \"#utility.yul\":15559:15562   */\n      dup2\n        /* \"#utility.yul\":15552:15557   */\n      dup2\n        /* \"#utility.yul\":15549:15563   */\n      lt\n        /* \"#utility.yul\":15542:15662   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":15613:15652   */\n      tag_565\n        /* \"#utility.yul\":15650:15651   */\n      0x00\n        /* \"#utility.yul\":15643:15648   */\n      dup3\n        /* \"#utility.yul\":15613:15652   */\n      tag_368\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15586:15587   */\n      0x01\n        /* \"#utility.yul\":15579:15584   */\n      dup2\n        /* \"#utility.yul\":15575:15588   */\n      add\n        /* \"#utility.yul\":15566:15588   */\n      swap1\n      pop\n        /* \"#utility.yul\":15542:15662   */\n      jump(tag_562)\n    tag_564:\n        /* \"#utility.yul\":15482:15668   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15674:16217   */\n    tag_370:\n        /* \"#utility.yul\":15775:15777   */\n      0x1f\n        /* \"#utility.yul\":15770:15773   */\n      dup3\n        /* \"#utility.yul\":15767:15778   */\n      gt\n        /* \"#utility.yul\":15764:16210   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":15809:15847   */\n      tag_568\n        /* \"#utility.yul\":15841:15846   */\n      dup2\n        /* \"#utility.yul\":15809:15847   */\n      tag_359\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15893:15922   */\n      tag_569\n        /* \"#utility.yul\":15911:15921   */\n      dup5\n        /* \"#utility.yul\":15893:15922   */\n      tag_360\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15883:15891   */\n      dup2\n        /* \"#utility.yul\":15879:15923   */\n      add\n        /* \"#utility.yul\":16076:16078   */\n      0x20\n        /* \"#utility.yul\":16064:16074   */\n      dup6\n        /* \"#utility.yul\":16061:16079   */\n      lt\n        /* \"#utility.yul\":16058:16107   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":16097:16105   */\n      dup2\n        /* \"#utility.yul\":16082:16105   */\n      swap1\n      pop\n        /* \"#utility.yul\":16058:16107   */\n    tag_570:\n        /* \"#utility.yul\":16120:16200   */\n      tag_571\n        /* \"#utility.yul\":16176:16198   */\n      tag_572\n        /* \"#utility.yul\":16194:16197   */\n      dup6\n        /* \"#utility.yul\":16176:16198   */\n      tag_360\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16166:16174   */\n      dup4\n        /* \"#utility.yul\":16162:16199   */\n      add\n        /* \"#utility.yul\":16149:16160   */\n      dup3\n        /* \"#utility.yul\":16120:16200   */\n      tag_369\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15779:16210   */\n      pop\n      pop\n        /* \"#utility.yul\":15764:16210   */\n    tag_567:\n        /* \"#utility.yul\":15674:16217   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16223:16340   */\n    tag_371:\n        /* \"#utility.yul\":16277:16285   */\n      0x00\n        /* \"#utility.yul\":16327:16332   */\n      dup3\n        /* \"#utility.yul\":16321:16325   */\n      dup3\n        /* \"#utility.yul\":16317:16333   */\n      shr\n        /* \"#utility.yul\":16296:16333   */\n      swap1\n      pop\n        /* \"#utility.yul\":16223:16340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16346:16515   */\n    tag_372:\n        /* \"#utility.yul\":16390:16396   */\n      0x00\n        /* \"#utility.yul\":16423:16474   */\n      tag_575\n        /* \"#utility.yul\":16471:16472   */\n      0x00\n        /* \"#utility.yul\":16467:16473   */\n      not\n        /* \"#utility.yul\":16459:16464   */\n      dup5\n        /* \"#utility.yul\":16456:16457   */\n      0x08\n        /* \"#utility.yul\":16452:16465   */\n      mul\n        /* \"#utility.yul\":16423:16474   */\n      tag_371\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16419:16475   */\n      not\n        /* \"#utility.yul\":16504:16508   */\n      dup1\n        /* \"#utility.yul\":16498:16502   */\n      dup4\n        /* \"#utility.yul\":16494:16509   */\n      and\n        /* \"#utility.yul\":16484:16509   */\n      swap2\n      pop\n        /* \"#utility.yul\":16397:16515   */\n      pop\n        /* \"#utility.yul\":16346:16515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16520:16815   */\n    tag_373:\n        /* \"#utility.yul\":16596:16600   */\n      0x00\n        /* \"#utility.yul\":16742:16771   */\n      tag_577\n        /* \"#utility.yul\":16767:16770   */\n      dup4\n        /* \"#utility.yul\":16761:16765   */\n      dup4\n        /* \"#utility.yul\":16742:16771   */\n      tag_372\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16734:16771   */\n      swap2\n      pop\n        /* \"#utility.yul\":16804:16807   */\n      dup3\n        /* \"#utility.yul\":16801:16802   */\n      0x02\n        /* \"#utility.yul\":16797:16808   */\n      mul\n        /* \"#utility.yul\":16791:16795   */\n      dup3\n        /* \"#utility.yul\":16788:16809   */\n      or\n        /* \"#utility.yul\":16780:16809   */\n      swap1\n      pop\n        /* \"#utility.yul\":16520:16815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16820:18215   */\n    tag_143:\n        /* \"#utility.yul\":16937:16974   */\n      tag_579\n        /* \"#utility.yul\":16970:16973   */\n      dup3\n        /* \"#utility.yul\":16937:16974   */\n      tag_331\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17039:17057   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17031:17037   */\n      dup2\n        /* \"#utility.yul\":17028:17058   */\n      gt\n        /* \"#utility.yul\":17025:17081   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":17061:17079   */\n      tag_581\n      tag_259\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17025:17081   */\n    tag_580:\n        /* \"#utility.yul\":17105:17143   */\n      tag_582\n        /* \"#utility.yul\":17137:17141   */\n      dup3\n        /* \"#utility.yul\":17131:17142   */\n      sload\n        /* \"#utility.yul\":17105:17143   */\n      tag_110\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17190:17257   */\n      tag_583\n        /* \"#utility.yul\":17250:17256   */\n      dup3\n        /* \"#utility.yul\":17242:17248   */\n      dup3\n        /* \"#utility.yul\":17236:17240   */\n      dup6\n        /* \"#utility.yul\":17190:17257   */\n      tag_370\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17284:17285   */\n      0x00\n        /* \"#utility.yul\":17308:17312   */\n      0x20\n        /* \"#utility.yul\":17295:17312   */\n      swap1\n      pop\n        /* \"#utility.yul\":17340:17342   */\n      0x1f\n        /* \"#utility.yul\":17332:17338   */\n      dup4\n        /* \"#utility.yul\":17329:17343   */\n      gt\n        /* \"#utility.yul\":17357:17358   */\n      0x01\n        /* \"#utility.yul\":17352:17970   */\n      dup2\n      eq\n      tag_585\n      jumpi\n        /* \"#utility.yul\":18014:18015   */\n      0x00\n        /* \"#utility.yul\":18031:18037   */\n      dup5\n        /* \"#utility.yul\":18028:18105   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":18080:18089   */\n      dup3\n        /* \"#utility.yul\":18075:18078   */\n      dup8\n        /* \"#utility.yul\":18071:18090   */\n      add\n        /* \"#utility.yul\":18065:18091   */\n      mload\n        /* \"#utility.yul\":18056:18091   */\n      swap1\n      pop\n        /* \"#utility.yul\":18028:18105   */\n    tag_586:\n        /* \"#utility.yul\":18131:18198   */\n      tag_587\n        /* \"#utility.yul\":18191:18197   */\n      dup6\n        /* \"#utility.yul\":18184:18189   */\n      dup3\n        /* \"#utility.yul\":18131:18198   */\n      tag_373\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18125:18129   */\n      dup7\n        /* \"#utility.yul\":18118:18199   */\n      sstore\n        /* \"#utility.yul\":17987:18209   */\n      pop\n        /* \"#utility.yul\":17322:18209   */\n      jump(tag_584)\n        /* \"#utility.yul\":17352:17970   */\n    tag_585:\n        /* \"#utility.yul\":17404:17408   */\n      0x1f\n        /* \"#utility.yul\":17400:17409   */\n      not\n        /* \"#utility.yul\":17392:17398   */\n      dup5\n        /* \"#utility.yul\":17388:17410   */\n      and\n        /* \"#utility.yul\":17438:17475   */\n      tag_588\n        /* \"#utility.yul\":17470:17474   */\n      dup7\n        /* \"#utility.yul\":17438:17475   */\n      tag_359\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17497:17498   */\n      0x00\n        /* \"#utility.yul\":17511:17719   */\n    tag_589:\n        /* \"#utility.yul\":17525:17532   */\n      dup3\n        /* \"#utility.yul\":17522:17523   */\n      dup2\n        /* \"#utility.yul\":17519:17533   */\n      lt\n        /* \"#utility.yul\":17511:17719   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":17604:17613   */\n      dup5\n        /* \"#utility.yul\":17599:17602   */\n      dup10\n        /* \"#utility.yul\":17595:17614   */\n      add\n        /* \"#utility.yul\":17589:17615   */\n      mload\n        /* \"#utility.yul\":17581:17587   */\n      dup3\n        /* \"#utility.yul\":17574:17616   */\n      sstore\n        /* \"#utility.yul\":17655:17656   */\n      0x01\n        /* \"#utility.yul\":17647:17653   */\n      dup3\n        /* \"#utility.yul\":17643:17657   */\n      add\n        /* \"#utility.yul\":17633:17657   */\n      swap2\n      pop\n        /* \"#utility.yul\":17702:17704   */\n      0x20\n        /* \"#utility.yul\":17691:17700   */\n      dup6\n        /* \"#utility.yul\":17687:17705   */\n      add\n        /* \"#utility.yul\":17674:17705   */\n      swap5\n      pop\n        /* \"#utility.yul\":17548:17552   */\n      0x20\n        /* \"#utility.yul\":17545:17546   */\n      dup2\n        /* \"#utility.yul\":17541:17553   */\n      add\n        /* \"#utility.yul\":17536:17553   */\n      swap1\n      pop\n        /* \"#utility.yul\":17511:17719   */\n      jump(tag_589)\n    tag_591:\n        /* \"#utility.yul\":17747:17753   */\n      dup7\n        /* \"#utility.yul\":17738:17745   */\n      dup4\n        /* \"#utility.yul\":17735:17754   */\n      lt\n        /* \"#utility.yul\":17732:17911   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":17805:17814   */\n      dup5\n        /* \"#utility.yul\":17800:17803   */\n      dup10\n        /* \"#utility.yul\":17796:17815   */\n      add\n        /* \"#utility.yul\":17790:17816   */\n      mload\n        /* \"#utility.yul\":17848:17896   */\n      tag_593\n        /* \"#utility.yul\":17890:17894   */\n      0x1f\n        /* \"#utility.yul\":17882:17888   */\n      dup10\n        /* \"#utility.yul\":17878:17895   */\n      and\n        /* \"#utility.yul\":17867:17876   */\n      dup3\n        /* \"#utility.yul\":17848:17896   */\n      tag_372\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17840:17846   */\n      dup4\n        /* \"#utility.yul\":17833:17897   */\n      sstore\n        /* \"#utility.yul\":17755:17911   */\n      pop\n        /* \"#utility.yul\":17732:17911   */\n    tag_592:\n        /* \"#utility.yul\":17957:17958   */\n      0x01\n        /* \"#utility.yul\":17953:17954   */\n      0x02\n        /* \"#utility.yul\":17945:17951   */\n      dup9\n        /* \"#utility.yul\":17941:17955   */\n      mul\n        /* \"#utility.yul\":17937:17959   */\n      add\n        /* \"#utility.yul\":17931:17935   */\n      dup9\n        /* \"#utility.yul\":17924:17960   */\n      sstore\n        /* \"#utility.yul\":17359:17970   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17322:18209   */\n    tag_584:\n      pop\n        /* \"#utility.yul\":16912:18215   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16820:18215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18221:18401   */\n    tag_374:\n        /* \"#utility.yul\":18269:18346   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18266:18267   */\n      0x00\n        /* \"#utility.yul\":18259:18347   */\n      mstore\n        /* \"#utility.yul\":18366:18370   */\n      0x11\n        /* \"#utility.yul\":18363:18364   */\n      0x04\n        /* \"#utility.yul\":18356:18371   */\n      mstore\n        /* \"#utility.yul\":18390:18394   */\n      0x24\n        /* \"#utility.yul\":18387:18388   */\n      0x00\n        /* \"#utility.yul\":18380:18395   */\n      revert\n        /* \"#utility.yul\":18407:18640   */\n    tag_145:\n        /* \"#utility.yul\":18446:18449   */\n      0x00\n        /* \"#utility.yul\":18469:18493   */\n      tag_596\n        /* \"#utility.yul\":18487:18492   */\n      dup3\n        /* \"#utility.yul\":18469:18493   */\n      tag_336\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18460:18493   */\n      swap2\n      pop\n        /* \"#utility.yul\":18515:18581   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18508:18513   */\n      dup3\n        /* \"#utility.yul\":18505:18582   */\n      sub\n        /* \"#utility.yul\":18502:18605   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":18585:18603   */\n      tag_598\n      tag_374\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18502:18605   */\n    tag_597:\n        /* \"#utility.yul\":18632:18633   */\n      0x01\n        /* \"#utility.yul\":18625:18630   */\n      dup3\n        /* \"#utility.yul\":18621:18634   */\n      add\n        /* \"#utility.yul\":18614:18634   */\n      swap1\n      pop\n        /* \"#utility.yul\":18407:18640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18646:19290   */\n    tag_147:\n        /* \"#utility.yul\":18843:18847   */\n      0x00\n        /* \"#utility.yul\":18881:18884   */\n      0x80\n        /* \"#utility.yul\":18870:18879   */\n      dup3\n        /* \"#utility.yul\":18866:18885   */\n      add\n        /* \"#utility.yul\":18858:18885   */\n      swap1\n      pop\n        /* \"#utility.yul\":18895:18966   */\n      tag_600\n        /* \"#utility.yul\":18963:18964   */\n      0x00\n        /* \"#utility.yul\":18952:18961   */\n      dup4\n        /* \"#utility.yul\":18948:18965   */\n      add\n        /* \"#utility.yul\":18939:18945   */\n      dup8\n        /* \"#utility.yul\":18895:18966   */\n      tag_352\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19013:19022   */\n      dup2\n        /* \"#utility.yul\":19007:19011   */\n      dup2\n        /* \"#utility.yul\":19003:19023   */\n      sub\n        /* \"#utility.yul\":18998:19000   */\n      0x20\n        /* \"#utility.yul\":18987:18996   */\n      dup4\n        /* \"#utility.yul\":18983:19001   */\n      add\n        /* \"#utility.yul\":18976:19024   */\n      mstore\n        /* \"#utility.yul\":19041:19119   */\n      tag_601\n        /* \"#utility.yul\":19114:19118   */\n      dup2\n        /* \"#utility.yul\":19105:19111   */\n      dup7\n        /* \"#utility.yul\":19041:19119   */\n      tag_335\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":19033:19119   */\n      swap1\n      pop\n        /* \"#utility.yul\":19129:19201   */\n      tag_602\n        /* \"#utility.yul\":19197:19199   */\n      0x40\n        /* \"#utility.yul\":19186:19195   */\n      dup4\n        /* \"#utility.yul\":19182:19200   */\n      add\n        /* \"#utility.yul\":19173:19179   */\n      dup6\n        /* \"#utility.yul\":19129:19201   */\n      tag_352\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19211:19283   */\n      tag_603\n        /* \"#utility.yul\":19279:19281   */\n      0x60\n        /* \"#utility.yul\":19268:19277   */\n      dup4\n        /* \"#utility.yul\":19264:19282   */\n      add\n        /* \"#utility.yul\":19255:19261   */\n      dup5\n        /* \"#utility.yul\":19211:19283   */\n      tag_352\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18646:19290   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19296:19444   */\n    tag_375:\n        /* \"#utility.yul\":19398:19409   */\n      0x00\n        /* \"#utility.yul\":19435:19438   */\n      dup2\n        /* \"#utility.yul\":19420:19438   */\n      swap1\n      pop\n        /* \"#utility.yul\":19296:19444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19450:19840   */\n    tag_376:\n        /* \"#utility.yul\":19556:19559   */\n      0x00\n        /* \"#utility.yul\":19584:19623   */\n      tag_606\n        /* \"#utility.yul\":19617:19622   */\n      dup3\n        /* \"#utility.yul\":19584:19623   */\n      tag_331\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":19639:19728   */\n      tag_607\n        /* \"#utility.yul\":19721:19727   */\n      dup2\n        /* \"#utility.yul\":19716:19719   */\n      dup6\n        /* \"#utility.yul\":19639:19728   */\n      tag_375\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":19632:19728   */\n      swap4\n      pop\n        /* \"#utility.yul\":19737:19802   */\n      tag_608\n        /* \"#utility.yul\":19795:19801   */\n      dup2\n        /* \"#utility.yul\":19790:19793   */\n      dup6\n        /* \"#utility.yul\":19783:19787   */\n      0x20\n        /* \"#utility.yul\":19776:19781   */\n      dup7\n        /* \"#utility.yul\":19772:19788   */\n      add\n        /* \"#utility.yul\":19737:19802   */\n      tag_333\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":19827:19833   */\n      dup1\n        /* \"#utility.yul\":19822:19825   */\n      dup5\n        /* \"#utility.yul\":19818:19834   */\n      add\n        /* \"#utility.yul\":19811:19834   */\n      swap2\n      pop\n        /* \"#utility.yul\":19560:19840   */\n      pop\n        /* \"#utility.yul\":19450:19840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19846:20281   */\n    tag_183:\n        /* \"#utility.yul\":20026:20029   */\n      0x00\n        /* \"#utility.yul\":20048:20143   */\n      tag_610\n        /* \"#utility.yul\":20139:20142   */\n      dup3\n        /* \"#utility.yul\":20130:20136   */\n      dup6\n        /* \"#utility.yul\":20048:20143   */\n      tag_376\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":20041:20143   */\n      swap2\n      pop\n        /* \"#utility.yul\":20160:20255   */\n      tag_611\n        /* \"#utility.yul\":20251:20254   */\n      dup3\n        /* \"#utility.yul\":20242:20248   */\n      dup5\n        /* \"#utility.yul\":20160:20255   */\n      tag_376\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20153:20255   */\n      swap2\n      pop\n        /* \"#utility.yul\":20272:20275   */\n      dup2\n        /* \"#utility.yul\":20265:20275   */\n      swap1\n      pop\n        /* \"#utility.yul\":19846:20281   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20287:20457   */\n    tag_377:\n        /* \"#utility.yul\":20427:20449   */\n      0x436861726163746572206e6f74206d696e746564000000000000000000000000\n        /* \"#utility.yul\":20423:20424   */\n      0x00\n        /* \"#utility.yul\":20415:20421   */\n      dup3\n        /* \"#utility.yul\":20411:20425   */\n      add\n        /* \"#utility.yul\":20404:20450   */\n      mstore\n        /* \"#utility.yul\":20287:20457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20463:20829   */\n    tag_378:\n        /* \"#utility.yul\":20605:20608   */\n      0x00\n        /* \"#utility.yul\":20626:20693   */\n      tag_614\n        /* \"#utility.yul\":20690:20692   */\n      0x14\n        /* \"#utility.yul\":20685:20688   */\n      dup4\n        /* \"#utility.yul\":20626:20693   */\n      tag_332\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20619:20693   */\n      swap2\n      pop\n        /* \"#utility.yul\":20702:20795   */\n      tag_615\n        /* \"#utility.yul\":20791:20794   */\n      dup3\n        /* \"#utility.yul\":20702:20795   */\n      tag_377\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20820:20822   */\n      0x20\n        /* \"#utility.yul\":20815:20818   */\n      dup3\n        /* \"#utility.yul\":20811:20823   */\n      add\n        /* \"#utility.yul\":20804:20823   */\n      swap1\n      pop\n        /* \"#utility.yul\":20463:20829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20835:21254   */\n    tag_187:\n        /* \"#utility.yul\":21001:21005   */\n      0x00\n        /* \"#utility.yul\":21039:21041   */\n      0x20\n        /* \"#utility.yul\":21028:21037   */\n      dup3\n        /* \"#utility.yul\":21024:21042   */\n      add\n        /* \"#utility.yul\":21016:21042   */\n      swap1\n      pop\n        /* \"#utility.yul\":21088:21097   */\n      dup2\n        /* \"#utility.yul\":21082:21086   */\n      dup2\n        /* \"#utility.yul\":21078:21098   */\n      sub\n        /* \"#utility.yul\":21074:21075   */\n      0x00\n        /* \"#utility.yul\":21063:21072   */\n      dup4\n        /* \"#utility.yul\":21059:21076   */\n      add\n        /* \"#utility.yul\":21052:21099   */\n      mstore\n        /* \"#utility.yul\":21116:21247   */\n      tag_617\n        /* \"#utility.yul\":21242:21246   */\n      dup2\n        /* \"#utility.yul\":21116:21247   */\n      tag_378\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21108:21247   */\n      swap1\n      pop\n        /* \"#utility.yul\":20835:21254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21260:21358   */\n    tag_379:\n        /* \"#utility.yul\":21311:21317   */\n      0x00\n        /* \"#utility.yul\":21345:21350   */\n      dup2\n        /* \"#utility.yul\":21339:21351   */\n      mload\n        /* \"#utility.yul\":21329:21351   */\n      swap1\n      pop\n        /* \"#utility.yul\":21260:21358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21364:21532   */\n    tag_380:\n        /* \"#utility.yul\":21447:21458   */\n      0x00\n        /* \"#utility.yul\":21481:21487   */\n      dup3\n        /* \"#utility.yul\":21476:21479   */\n      dup3\n        /* \"#utility.yul\":21469:21488   */\n      mstore\n        /* \"#utility.yul\":21521:21525   */\n      0x20\n        /* \"#utility.yul\":21516:21519   */\n      dup3\n        /* \"#utility.yul\":21512:21526   */\n      add\n        /* \"#utility.yul\":21497:21526   */\n      swap1\n      pop\n        /* \"#utility.yul\":21364:21532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21538:21911   */\n    tag_381:\n        /* \"#utility.yul\":21624:21627   */\n      0x00\n        /* \"#utility.yul\":21652:21690   */\n      tag_621\n        /* \"#utility.yul\":21684:21689   */\n      dup3\n        /* \"#utility.yul\":21652:21690   */\n      tag_379\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":21706:21776   */\n      tag_622\n        /* \"#utility.yul\":21769:21775   */\n      dup2\n        /* \"#utility.yul\":21764:21767   */\n      dup6\n        /* \"#utility.yul\":21706:21776   */\n      tag_380\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":21699:21776   */\n      swap4\n      pop\n        /* \"#utility.yul\":21785:21850   */\n      tag_623\n        /* \"#utility.yul\":21843:21849   */\n      dup2\n        /* \"#utility.yul\":21838:21841   */\n      dup6\n        /* \"#utility.yul\":21831:21835   */\n      0x20\n        /* \"#utility.yul\":21824:21829   */\n      dup7\n        /* \"#utility.yul\":21820:21836   */\n      add\n        /* \"#utility.yul\":21785:21850   */\n      tag_333\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":21875:21904   */\n      tag_624\n        /* \"#utility.yul\":21897:21903   */\n      dup2\n        /* \"#utility.yul\":21875:21904   */\n      tag_334\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":21870:21873   */\n      dup5\n        /* \"#utility.yul\":21866:21905   */\n      add\n        /* \"#utility.yul\":21859:21905   */\n      swap2\n      pop\n        /* \"#utility.yul\":21628:21911   */\n      pop\n        /* \"#utility.yul\":21538:21911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21917:22557   */\n    tag_237:\n        /* \"#utility.yul\":22112:22116   */\n      0x00\n        /* \"#utility.yul\":22150:22153   */\n      0x80\n        /* \"#utility.yul\":22139:22148   */\n      dup3\n        /* \"#utility.yul\":22135:22154   */\n      add\n        /* \"#utility.yul\":22127:22154   */\n      swap1\n      pop\n        /* \"#utility.yul\":22164:22235   */\n      tag_626\n        /* \"#utility.yul\":22232:22233   */\n      0x00\n        /* \"#utility.yul\":22221:22230   */\n      dup4\n        /* \"#utility.yul\":22217:22234   */\n      add\n        /* \"#utility.yul\":22208:22214   */\n      dup8\n        /* \"#utility.yul\":22164:22235   */\n      tag_341\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":22245:22317   */\n      tag_627\n        /* \"#utility.yul\":22313:22315   */\n      0x20\n        /* \"#utility.yul\":22302:22311   */\n      dup4\n        /* \"#utility.yul\":22298:22316   */\n      add\n        /* \"#utility.yul\":22289:22295   */\n      dup7\n        /* \"#utility.yul\":22245:22317   */\n      tag_341\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":22327:22399   */\n      tag_628\n        /* \"#utility.yul\":22395:22397   */\n      0x40\n        /* \"#utility.yul\":22384:22393   */\n      dup4\n        /* \"#utility.yul\":22380:22398   */\n      add\n        /* \"#utility.yul\":22371:22377   */\n      dup6\n        /* \"#utility.yul\":22327:22399   */\n      tag_352\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":22446:22455   */\n      dup2\n        /* \"#utility.yul\":22440:22444   */\n      dup2\n        /* \"#utility.yul\":22436:22456   */\n      sub\n        /* \"#utility.yul\":22431:22433   */\n      0x60\n        /* \"#utility.yul\":22420:22429   */\n      dup4\n        /* \"#utility.yul\":22416:22434   */\n      add\n        /* \"#utility.yul\":22409:22457   */\n      mstore\n        /* \"#utility.yul\":22474:22550   */\n      tag_629\n        /* \"#utility.yul\":22545:22549   */\n      dup2\n        /* \"#utility.yul\":22536:22542   */\n      dup5\n        /* \"#utility.yul\":22474:22550   */\n      tag_381\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":22466:22550   */\n      swap1\n      pop\n        /* \"#utility.yul\":21917:22557   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22563:22704   */\n    tag_382:\n        /* \"#utility.yul\":22619:22624   */\n      0x00\n        /* \"#utility.yul\":22650:22656   */\n      dup2\n        /* \"#utility.yul\":22644:22657   */\n      mload\n        /* \"#utility.yul\":22635:22657   */\n      swap1\n      pop\n        /* \"#utility.yul\":22666:22698   */\n      tag_631\n        /* \"#utility.yul\":22692:22697   */\n      dup2\n        /* \"#utility.yul\":22666:22698   */\n      tag_327\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":22563:22704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22710:23059   */\n    tag_240:\n        /* \"#utility.yul\":22779:22785   */\n      0x00\n        /* \"#utility.yul\":22828:22830   */\n      0x20\n        /* \"#utility.yul\":22816:22825   */\n      dup3\n        /* \"#utility.yul\":22807:22814   */\n      dup5\n        /* \"#utility.yul\":22803:22826   */\n      sub\n        /* \"#utility.yul\":22799:22831   */\n      slt\n        /* \"#utility.yul\":22796:22915   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":22834:22913   */\n      tag_634\n      tag_324\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":22796:22915   */\n    tag_633:\n        /* \"#utility.yul\":22954:22955   */\n      0x00\n        /* \"#utility.yul\":22979:23042   */\n      tag_635\n        /* \"#utility.yul\":23034:23041   */\n      dup5\n        /* \"#utility.yul\":23025:23031   */\n      dup3\n        /* \"#utility.yul\":23014:23023   */\n      dup6\n        /* \"#utility.yul\":23010:23032   */\n      add\n        /* \"#utility.yul\":22979:23042   */\n      tag_382\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":22969:23042   */\n      swap2\n      pop\n        /* \"#utility.yul\":22925:23052   */\n      pop\n        /* \"#utility.yul\":22710:23059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23065:23245   */\n    tag_265:\n        /* \"#utility.yul\":23113:23190   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23110:23111   */\n      0x00\n        /* \"#utility.yul\":23103:23191   */\n      mstore\n        /* \"#utility.yul\":23210:23214   */\n      0x12\n        /* \"#utility.yul\":23207:23208   */\n      0x04\n        /* \"#utility.yul\":23200:23215   */\n      mstore\n        /* \"#utility.yul\":23234:23238   */\n      0x24\n        /* \"#utility.yul\":23231:23232   */\n      0x00\n        /* \"#utility.yul\":23224:23239   */\n      revert\n        /* \"#utility.yul\":23251:23583   */\n    tag_286:\n        /* \"#utility.yul\":23372:23376   */\n      0x00\n        /* \"#utility.yul\":23410:23412   */\n      0x40\n        /* \"#utility.yul\":23399:23408   */\n      dup3\n        /* \"#utility.yul\":23395:23413   */\n      add\n        /* \"#utility.yul\":23387:23413   */\n      swap1\n      pop\n        /* \"#utility.yul\":23423:23494   */\n      tag_638\n        /* \"#utility.yul\":23491:23492   */\n      0x00\n        /* \"#utility.yul\":23480:23489   */\n      dup4\n        /* \"#utility.yul\":23476:23493   */\n      add\n        /* \"#utility.yul\":23467:23473   */\n      dup6\n        /* \"#utility.yul\":23423:23494   */\n      tag_341\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":23504:23576   */\n      tag_639\n        /* \"#utility.yul\":23572:23574   */\n      0x20\n        /* \"#utility.yul\":23561:23570   */\n      dup4\n        /* \"#utility.yul\":23557:23575   */\n      add\n        /* \"#utility.yul\":23548:23554   */\n      dup5\n        /* \"#utility.yul\":23504:23576   */\n      tag_352\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":23251:23583   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eaeb912180ee25bf0a037fde46a6ce9f407382743e3bd66d3bba6920fabb136364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3149": {
									"entryPoint": null,
									"id": 3149,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 254,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9489:17",
										"nodeType": "YulBlock",
										"src": "0:9489:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "423:28:17",
													"nodeType": "YulBlock",
													"src": "423:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:17",
																		"nodeType": "YulLiteral",
																		"src": "440:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:17",
																		"nodeType": "YulLiteral",
																		"src": "443:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:17"
																},
																"nativeSrc": "433:12:17",
																"nodeType": "YulFunctionCall",
																"src": "433:12:17"
															},
															"nativeSrc": "433:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:17"
											},
											{
												"body": {
													"nativeSrc": "546:28:17",
													"nodeType": "YulBlock",
													"src": "546:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:17",
																		"nodeType": "YulLiteral",
																		"src": "563:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:17",
																		"nodeType": "YulLiteral",
																		"src": "566:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:17"
																},
																"nativeSrc": "556:12:17",
																"nodeType": "YulFunctionCall",
																"src": "556:12:17"
															},
															"nativeSrc": "556:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:17"
											},
											{
												"body": {
													"nativeSrc": "628:54:17",
													"nodeType": "YulBlock",
													"src": "628:54:17",
													"statements": [
														{
															"nativeSrc": "638:38:17",
															"nodeType": "YulAssignment",
															"src": "638:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:17",
																				"nodeType": "YulLiteral",
																				"src": "663:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:17"
																		},
																		"nativeSrc": "652:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:17",
																				"nodeType": "YulLiteral",
																				"src": "672:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:17"
																		},
																		"nativeSrc": "668:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:17"
																},
																"nativeSrc": "648:28:17",
																"nodeType": "YulFunctionCall",
																"src": "648:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:17",
														"nodeType": "YulTypedName",
														"src": "611:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:17",
														"nodeType": "YulTypedName",
														"src": "621:6:17",
														"type": ""
													}
												],
												"src": "580:102:17"
											},
											{
												"body": {
													"nativeSrc": "716:152:17",
													"nodeType": "YulBlock",
													"src": "716:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:17",
																		"nodeType": "YulLiteral",
																		"src": "733:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:17",
																		"nodeType": "YulLiteral",
																		"src": "736:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:17"
																},
																"nativeSrc": "726:88:17",
																"nodeType": "YulFunctionCall",
																"src": "726:88:17"
															},
															"nativeSrc": "726:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:17",
																		"nodeType": "YulLiteral",
																		"src": "830:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:17",
																		"nodeType": "YulLiteral",
																		"src": "833:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:17"
																},
																"nativeSrc": "823:15:17",
																"nodeType": "YulFunctionCall",
																"src": "823:15:17"
															},
															"nativeSrc": "823:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:17",
																		"nodeType": "YulLiteral",
																		"src": "854:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:17",
																		"nodeType": "YulLiteral",
																		"src": "857:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:17"
																},
																"nativeSrc": "847:15:17",
																"nodeType": "YulFunctionCall",
																"src": "847:15:17"
															},
															"nativeSrc": "847:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:17"
											},
											{
												"body": {
													"nativeSrc": "917:238:17",
													"nodeType": "YulBlock",
													"src": "917:238:17",
													"statements": [
														{
															"nativeSrc": "927:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:17"
																		},
																		"nativeSrc": "957:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:17"
																},
																"nativeSrc": "945:40:17",
																"nodeType": "YulFunctionCall",
																"src": "945:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:17",
																	"nodeType": "YulTypedName",
																	"src": "931:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:17",
																"nodeType": "YulBlock",
																"src": "1096:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:17"
																			},
																			"nativeSrc": "1098:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:17"
																		},
																		"nativeSrc": "1098:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:17",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:17"
																		},
																		"nativeSrc": "1036:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:17"
																		},
																		"nativeSrc": "1072:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:17"
																},
																"nativeSrc": "1033:62:17",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:17"
															},
															"nativeSrc": "1030:88:17",
															"nodeType": "YulIf",
															"src": "1030:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:17"
																},
																"nativeSrc": "1127:22:17",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:17"
															},
															"nativeSrc": "1127:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:17",
														"nodeType": "YulTypedName",
														"src": "903:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:17",
														"nodeType": "YulTypedName",
														"src": "911:4:17",
														"type": ""
													}
												],
												"src": "874:281:17"
											},
											{
												"body": {
													"nativeSrc": "1202:88:17",
													"nodeType": "YulBlock",
													"src": "1202:88:17",
													"statements": [
														{
															"nativeSrc": "1212:30:17",
															"nodeType": "YulAssignment",
															"src": "1212:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:17"
																},
																"nativeSrc": "1222:20:17",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:17"
																},
																"nativeSrc": "1251:33:17",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:17"
															},
															"nativeSrc": "1251:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:17",
														"nodeType": "YulTypedName",
														"src": "1186:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:17",
														"nodeType": "YulTypedName",
														"src": "1195:6:17",
														"type": ""
													}
												],
												"src": "1161:129:17"
											},
											{
												"body": {
													"nativeSrc": "1363:241:17",
													"nodeType": "YulBlock",
													"src": "1363:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:17",
																"nodeType": "YulBlock",
																"src": "1468:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:17"
																			},
																			"nativeSrc": "1470:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:17"
																		},
																		"nativeSrc": "1470:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:17",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:17"
																},
																"nativeSrc": "1437:30:17",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:17"
															},
															"nativeSrc": "1434:56:17",
															"nodeType": "YulIf",
															"src": "1434:56:17"
														},
														{
															"nativeSrc": "1500:37:17",
															"nodeType": "YulAssignment",
															"src": "1500:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:17"
																},
																"nativeSrc": "1508:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:17"
																}
															]
														},
														{
															"nativeSrc": "1574:23:17",
															"nodeType": "YulAssignment",
															"src": "1574:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:17"
																},
																"nativeSrc": "1582:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:17",
														"nodeType": "YulTypedName",
														"src": "1347:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:17",
														"nodeType": "YulTypedName",
														"src": "1358:4:17",
														"type": ""
													}
												],
												"src": "1296:308:17"
											},
											{
												"body": {
													"nativeSrc": "1672:184:17",
													"nodeType": "YulBlock",
													"src": "1672:184:17",
													"statements": [
														{
															"nativeSrc": "1682:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:17",
																"nodeType": "YulLiteral",
																"src": "1691:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:17",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:17",
																"nodeType": "YulBlock",
																"src": "1751:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:17"
																					},
																					"nativeSrc": "1772:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:17"
																							},
																							"nativeSrc": "1791:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:17"
																					},
																					"nativeSrc": "1785:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:17"
																			},
																			"nativeSrc": "1765:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:17"
																		},
																		"nativeSrc": "1765:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:17"
																},
																"nativeSrc": "1709:13:17",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:17"
															},
															"nativeSrc": "1701:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:17",
																"nodeType": "YulBlock",
																"src": "1723:19:17",
																"statements": [
																	{
																		"nativeSrc": "1725:15:17",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:17",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:17"
																			},
																			"nativeSrc": "1730:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:17",
																"nodeType": "YulBlock",
																"src": "1705:3:17",
																"statements": []
															},
															"src": "1701:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:17"
																		},
																		"nativeSrc": "1830:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:17"
																},
																"nativeSrc": "1823:27:17",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:17"
															},
															"nativeSrc": "1823:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:17",
														"nodeType": "YulTypedName",
														"src": "1654:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:17",
														"nodeType": "YulTypedName",
														"src": "1659:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:17",
														"nodeType": "YulTypedName",
														"src": "1664:6:17",
														"type": ""
													}
												],
												"src": "1610:246:17"
											},
											{
												"body": {
													"nativeSrc": "1957:339:17",
													"nodeType": "YulBlock",
													"src": "1957:339:17",
													"statements": [
														{
															"nativeSrc": "1967:75:17",
															"nodeType": "YulAssignment",
															"src": "1967:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:17"
																		},
																		"nativeSrc": "1992:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:17"
																},
																"nativeSrc": "1976:66:17",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:17"
																},
																"nativeSrc": "2051:21:17",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:17"
															},
															"nativeSrc": "2051:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:17"
														},
														{
															"nativeSrc": "2081:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:17"
																},
																"nativeSrc": "2092:16:17",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:17",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:17",
																"nodeType": "YulBlock",
																"src": "2146:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:17"
																			},
																			"nativeSrc": "2148:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:17"
																		},
																		"nativeSrc": "2148:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:17"
																		},
																		"nativeSrc": "2123:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:17"
																},
																"nativeSrc": "2120:25:17",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:17"
															},
															"nativeSrc": "2117:112:17",
															"nodeType": "YulIf",
															"src": "2117:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:17"
																},
																"nativeSrc": "2238:52:17",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:17"
															},
															"nativeSrc": "2238:52:17",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:17",
														"nodeType": "YulTypedName",
														"src": "1930:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:17",
														"nodeType": "YulTypedName",
														"src": "1935:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:17",
														"nodeType": "YulTypedName",
														"src": "1943:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:17",
														"nodeType": "YulTypedName",
														"src": "1951:5:17",
														"type": ""
													}
												],
												"src": "1862:434:17"
											},
											{
												"body": {
													"nativeSrc": "2389:282:17",
													"nodeType": "YulBlock",
													"src": "2389:282:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:17",
																"nodeType": "YulBlock",
																"src": "2438:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:17"
																			},
																			"nativeSrc": "2440:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:17"
																		},
																		"nativeSrc": "2440:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:17",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:17"
																				},
																				"nativeSrc": "2413:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:17"
																		},
																		"nativeSrc": "2409:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:17"
																},
																"nativeSrc": "2402:35:17",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:17"
															},
															"nativeSrc": "2399:122:17",
															"nodeType": "YulIf",
															"src": "2399:122:17"
														},
														{
															"nativeSrc": "2530:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:17"
																},
																"nativeSrc": "2544:13:17",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:17",
															"nodeType": "YulAssignment",
															"src": "2566:99:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:17"
																		},
																		"nativeSrc": "2634:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:17"
																},
																"nativeSrc": "2575:90:17",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:17",
														"nodeType": "YulTypedName",
														"src": "2367:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:17",
														"nodeType": "YulTypedName",
														"src": "2375:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:17",
														"nodeType": "YulTypedName",
														"src": "2383:5:17",
														"type": ""
													}
												],
												"src": "2316:355:17"
											},
											{
												"body": {
													"nativeSrc": "2818:1041:17",
													"nodeType": "YulBlock",
													"src": "2818:1041:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2864:83:17",
																"nodeType": "YulBlock",
																"src": "2864:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2866:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2866:77:17"
																			},
																			"nativeSrc": "2866:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:79:17"
																		},
																		"nativeSrc": "2866:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2839:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2839:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2848:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2848:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2835:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2835:3:17"
																		},
																		"nativeSrc": "2835:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2835:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2831:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:17"
																},
																"nativeSrc": "2831:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2831:32:17"
															},
															"nativeSrc": "2828:119:17",
															"nodeType": "YulIf",
															"src": "2828:119:17"
														},
														{
															"nativeSrc": "2957:291:17",
															"nodeType": "YulBlock",
															"src": "2957:291:17",
															"statements": [
																{
																	"nativeSrc": "2972:38:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2972:38:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2996:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "2996:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3007:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3007:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2992:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:17"
																				},
																				"nativeSrc": "2992:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2992:17:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2986:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "2986:5:17"
																		},
																		"nativeSrc": "2986:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:24:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2976:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2976:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3057:83:17",
																		"nodeType": "YulBlock",
																		"src": "3057:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3059:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "3059:77:17"
																					},
																					"nativeSrc": "3059:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3059:79:17"
																				},
																				"nativeSrc": "3059:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3059:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3029:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3029:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3037:18:17",
																				"nodeType": "YulLiteral",
																				"src": "3037:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3026:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3026:2:17"
																		},
																		"nativeSrc": "3026:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3026:30:17"
																	},
																	"nativeSrc": "3023:117:17",
																	"nodeType": "YulIf",
																	"src": "3023:117:17"
																},
																{
																	"nativeSrc": "3154:84:17",
																	"nodeType": "YulAssignment",
																	"src": "3154:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3210:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3210:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3221:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3221:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3206:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3206:3:17"
																				},
																				"nativeSrc": "3206:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3206:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3230:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3230:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3164:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "3164:41:17"
																		},
																		"nativeSrc": "3164:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3164:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3154:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3154:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3258:292:17",
															"nodeType": "YulBlock",
															"src": "3258:292:17",
															"statements": [
																{
																	"nativeSrc": "3273:39:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3273:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3297:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3297:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3308:2:17",
																						"nodeType": "YulLiteral",
																						"src": "3308:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3293:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3293:3:17"
																				},
																				"nativeSrc": "3293:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3293:18:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3287:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3287:5:17"
																		},
																		"nativeSrc": "3287:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:25:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3277:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3277:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3359:83:17",
																		"nodeType": "YulBlock",
																		"src": "3359:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3361:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "3361:77:17"
																					},
																					"nativeSrc": "3361:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3361:79:17"
																				},
																				"nativeSrc": "3361:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3361:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3331:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3331:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3339:18:17",
																				"nodeType": "YulLiteral",
																				"src": "3339:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3328:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3328:2:17"
																		},
																		"nativeSrc": "3328:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3328:30:17"
																	},
																	"nativeSrc": "3325:117:17",
																	"nodeType": "YulIf",
																	"src": "3325:117:17"
																},
																{
																	"nativeSrc": "3456:84:17",
																	"nodeType": "YulAssignment",
																	"src": "3456:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3512:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3512:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3523:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3523:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3508:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3508:3:17"
																				},
																				"nativeSrc": "3508:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3508:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3532:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3532:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3466:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "3466:41:17"
																		},
																		"nativeSrc": "3466:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3466:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3456:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3456:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3560:292:17",
															"nodeType": "YulBlock",
															"src": "3560:292:17",
															"statements": [
																{
																	"nativeSrc": "3575:39:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3575:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3599:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3599:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3610:2:17",
																						"nodeType": "YulLiteral",
																						"src": "3610:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3595:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3595:3:17"
																				},
																				"nativeSrc": "3595:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3595:18:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3589:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3589:5:17"
																		},
																		"nativeSrc": "3589:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:25:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3579:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3579:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3661:83:17",
																		"nodeType": "YulBlock",
																		"src": "3661:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3663:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "3663:77:17"
																					},
																					"nativeSrc": "3663:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3663:79:17"
																				},
																				"nativeSrc": "3663:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3663:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3633:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3633:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3641:18:17",
																				"nodeType": "YulLiteral",
																				"src": "3641:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3630:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3630:2:17"
																		},
																		"nativeSrc": "3630:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:30:17"
																	},
																	"nativeSrc": "3627:117:17",
																	"nodeType": "YulIf",
																	"src": "3627:117:17"
																},
																{
																	"nativeSrc": "3758:84:17",
																	"nodeType": "YulAssignment",
																	"src": "3758:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3814:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3814:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3825:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3825:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3810:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3810:3:17"
																				},
																				"nativeSrc": "3810:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3810:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3834:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3834:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3768:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "3768:41:17"
																		},
																		"nativeSrc": "3768:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3768:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3758:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3758:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:1182:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2772:9:17",
														"nodeType": "YulTypedName",
														"src": "2772:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2783:7:17",
														"nodeType": "YulTypedName",
														"src": "2783:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2795:6:17",
														"nodeType": "YulTypedName",
														"src": "2795:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2803:6:17",
														"nodeType": "YulTypedName",
														"src": "2803:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2811:6:17",
														"nodeType": "YulTypedName",
														"src": "2811:6:17",
														"type": ""
													}
												],
												"src": "2677:1182:17"
											},
											{
												"body": {
													"nativeSrc": "3924:40:17",
													"nodeType": "YulBlock",
													"src": "3924:40:17",
													"statements": [
														{
															"nativeSrc": "3935:22:17",
															"nodeType": "YulAssignment",
															"src": "3935:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3951:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3951:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3945:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3945:5:17"
																},
																"nativeSrc": "3945:12:17",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3935:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3865:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3907:5:17",
														"nodeType": "YulTypedName",
														"src": "3907:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3917:6:17",
														"nodeType": "YulTypedName",
														"src": "3917:6:17",
														"type": ""
													}
												],
												"src": "3865:99:17"
											},
											{
												"body": {
													"nativeSrc": "3998:152:17",
													"nodeType": "YulBlock",
													"src": "3998:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4015:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4015:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4018:77:17",
																		"nodeType": "YulLiteral",
																		"src": "4018:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4008:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4008:6:17"
																},
																"nativeSrc": "4008:88:17",
																"nodeType": "YulFunctionCall",
																"src": "4008:88:17"
															},
															"nativeSrc": "4008:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "4008:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4112:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4112:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4115:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4115:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4105:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:17"
																},
																"nativeSrc": "4105:15:17",
																"nodeType": "YulFunctionCall",
																"src": "4105:15:17"
															},
															"nativeSrc": "4105:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "4105:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4136:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4139:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4129:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:17"
																},
																"nativeSrc": "4129:15:17",
																"nodeType": "YulFunctionCall",
																"src": "4129:15:17"
															},
															"nativeSrc": "4129:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "4129:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3970:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "3970:180:17"
											},
											{
												"body": {
													"nativeSrc": "4207:269:17",
													"nodeType": "YulBlock",
													"src": "4207:269:17",
													"statements": [
														{
															"nativeSrc": "4217:22:17",
															"nodeType": "YulAssignment",
															"src": "4217:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4231:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4231:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4237:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4227:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4227:3:17"
																},
																"nativeSrc": "4227:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4227:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4217:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:17"
																}
															]
														},
														{
															"nativeSrc": "4248:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4248:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4278:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4278:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4284:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4284:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4274:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4274:3:17"
																},
																"nativeSrc": "4274:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4274:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4252:18:17",
																	"nodeType": "YulTypedName",
																	"src": "4252:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4325:51:17",
																"nodeType": "YulBlock",
																"src": "4325:51:17",
																"statements": [
																	{
																		"nativeSrc": "4339:27:17",
																		"nodeType": "YulAssignment",
																		"src": "4339:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4353:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "4353:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4361:4:17",
																					"nodeType": "YulLiteral",
																					"src": "4361:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4349:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4349:3:17"
																			},
																			"nativeSrc": "4349:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4349:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4339:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4339:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4305:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4305:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4298:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:17"
																},
																"nativeSrc": "4298:26:17",
																"nodeType": "YulFunctionCall",
																"src": "4298:26:17"
															},
															"nativeSrc": "4295:81:17",
															"nodeType": "YulIf",
															"src": "4295:81:17"
														},
														{
															"body": {
																"nativeSrc": "4428:42:17",
																"nodeType": "YulBlock",
																"src": "4428:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4442:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4442:16:17"
																			},
																			"nativeSrc": "4442:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4442:18:17"
																		},
																		"nativeSrc": "4442:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4442:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4392:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4392:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4415:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4415:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4412:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4412:2:17"
																		},
																		"nativeSrc": "4412:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4389:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4389:2:17"
																},
																"nativeSrc": "4389:38:17",
																"nodeType": "YulFunctionCall",
																"src": "4389:38:17"
															},
															"nativeSrc": "4386:84:17",
															"nodeType": "YulIf",
															"src": "4386:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4156:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4191:4:17",
														"nodeType": "YulTypedName",
														"src": "4191:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4200:6:17",
														"nodeType": "YulTypedName",
														"src": "4200:6:17",
														"type": ""
													}
												],
												"src": "4156:320:17"
											},
											{
												"body": {
													"nativeSrc": "4536:87:17",
													"nodeType": "YulBlock",
													"src": "4536:87:17",
													"statements": [
														{
															"nativeSrc": "4546:11:17",
															"nodeType": "YulAssignment",
															"src": "4546:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "4554:3:17",
																"nodeType": "YulIdentifier",
																"src": "4554:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4546:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4546:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4574:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4574:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4577:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4567:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4567:6:17"
																},
																"nativeSrc": "4567:14:17",
																"nodeType": "YulFunctionCall",
																"src": "4567:14:17"
															},
															"nativeSrc": "4567:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "4567:14:17"
														},
														{
															"nativeSrc": "4590:26:17",
															"nodeType": "YulAssignment",
															"src": "4590:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4608:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4608:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4611:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4611:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4598:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4598:9:17"
																},
																"nativeSrc": "4598:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4598:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4590:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4590:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4482:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4523:3:17",
														"nodeType": "YulTypedName",
														"src": "4523:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4531:4:17",
														"nodeType": "YulTypedName",
														"src": "4531:4:17",
														"type": ""
													}
												],
												"src": "4482:141:17"
											},
											{
												"body": {
													"nativeSrc": "4673:49:17",
													"nodeType": "YulBlock",
													"src": "4673:49:17",
													"statements": [
														{
															"nativeSrc": "4683:33:17",
															"nodeType": "YulAssignment",
															"src": "4683:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4701:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4701:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4708:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4708:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4697:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:17"
																		},
																		"nativeSrc": "4697:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4693:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4693:3:17"
																},
																"nativeSrc": "4693:23:17",
																"nodeType": "YulFunctionCall",
																"src": "4693:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4683:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4629:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4656:5:17",
														"nodeType": "YulTypedName",
														"src": "4656:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4666:6:17",
														"nodeType": "YulTypedName",
														"src": "4666:6:17",
														"type": ""
													}
												],
												"src": "4629:93:17"
											},
											{
												"body": {
													"nativeSrc": "4781:54:17",
													"nodeType": "YulBlock",
													"src": "4781:54:17",
													"statements": [
														{
															"nativeSrc": "4791:37:17",
															"nodeType": "YulAssignment",
															"src": "4791:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4816:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4816:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4822:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4822:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4812:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:17"
																},
																"nativeSrc": "4812:16:17",
																"nodeType": "YulFunctionCall",
																"src": "4812:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4791:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "4791:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4728:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4756:4:17",
														"nodeType": "YulTypedName",
														"src": "4756:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4762:5:17",
														"nodeType": "YulTypedName",
														"src": "4762:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4772:8:17",
														"nodeType": "YulTypedName",
														"src": "4772:8:17",
														"type": ""
													}
												],
												"src": "4728:107:17"
											},
											{
												"body": {
													"nativeSrc": "4917:317:17",
													"nodeType": "YulBlock",
													"src": "4917:317:17",
													"statements": [
														{
															"nativeSrc": "4927:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4948:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "4948:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4960:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4960:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4944:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:17"
																},
																"nativeSrc": "4944:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4944:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4931:9:17",
																	"nodeType": "YulTypedName",
																	"src": "4931:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4971:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4971:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5002:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:66:17",
																		"nodeType": "YulLiteral",
																		"src": "5013:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4983:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "4983:18:17"
																},
																"nativeSrc": "4983:97:17",
																"nodeType": "YulFunctionCall",
																"src": "4983:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4975:4:17",
																	"nodeType": "YulTypedName",
																	"src": "4975:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5089:51:17",
															"nodeType": "YulAssignment",
															"src": "5089:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5120:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5120:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5131:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "5131:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5101:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5101:18:17"
																},
																"nativeSrc": "5101:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5101:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5089:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "5089:8:17"
																}
															]
														},
														{
															"nativeSrc": "5149:30:17",
															"nodeType": "YulAssignment",
															"src": "5149:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5162:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5162:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5173:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "5173:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5169:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5169:3:17"
																		},
																		"nativeSrc": "5169:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5169:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5158:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:17"
																},
																"nativeSrc": "5158:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5158:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5149:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5149:5:17"
																}
															]
														},
														{
															"nativeSrc": "5188:40:17",
															"nodeType": "YulAssignment",
															"src": "5188:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5201:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5201:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5212:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "5212:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5222:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "5222:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5208:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:17"
																		},
																		"nativeSrc": "5208:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5208:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5198:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5198:2:17"
																},
																"nativeSrc": "5198:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5198:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5188:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4841:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4878:5:17",
														"nodeType": "YulTypedName",
														"src": "4878:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4885:10:17",
														"nodeType": "YulTypedName",
														"src": "4885:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4897:8:17",
														"nodeType": "YulTypedName",
														"src": "4897:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4910:6:17",
														"nodeType": "YulTypedName",
														"src": "4910:6:17",
														"type": ""
													}
												],
												"src": "4841:393:17"
											},
											{
												"body": {
													"nativeSrc": "5285:32:17",
													"nodeType": "YulBlock",
													"src": "5285:32:17",
													"statements": [
														{
															"nativeSrc": "5295:16:17",
															"nodeType": "YulAssignment",
															"src": "5295:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "5306:5:17",
																"nodeType": "YulIdentifier",
																"src": "5306:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5295:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5295:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5240:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5267:5:17",
														"nodeType": "YulTypedName",
														"src": "5267:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5277:7:17",
														"nodeType": "YulTypedName",
														"src": "5277:7:17",
														"type": ""
													}
												],
												"src": "5240:77:17"
											},
											{
												"body": {
													"nativeSrc": "5355:28:17",
													"nodeType": "YulBlock",
													"src": "5355:28:17",
													"statements": [
														{
															"nativeSrc": "5365:12:17",
															"nodeType": "YulAssignment",
															"src": "5365:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "5372:5:17",
																"nodeType": "YulIdentifier",
																"src": "5372:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5365:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5365:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5323:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5341:5:17",
														"nodeType": "YulTypedName",
														"src": "5341:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5351:3:17",
														"nodeType": "YulTypedName",
														"src": "5351:3:17",
														"type": ""
													}
												],
												"src": "5323:60:17"
											},
											{
												"body": {
													"nativeSrc": "5449:82:17",
													"nodeType": "YulBlock",
													"src": "5449:82:17",
													"statements": [
														{
															"nativeSrc": "5459:66:17",
															"nodeType": "YulAssignment",
															"src": "5459:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5517:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5517:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5499:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "5499:17:17"
																				},
																				"nativeSrc": "5499:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5499:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5490:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "5490:8:17"
																		},
																		"nativeSrc": "5490:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5472:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "5472:17:17"
																},
																"nativeSrc": "5472:53:17",
																"nodeType": "YulFunctionCall",
																"src": "5472:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5459:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "5459:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5389:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5429:5:17",
														"nodeType": "YulTypedName",
														"src": "5429:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5439:9:17",
														"nodeType": "YulTypedName",
														"src": "5439:9:17",
														"type": ""
													}
												],
												"src": "5389:142:17"
											},
											{
												"body": {
													"nativeSrc": "5584:28:17",
													"nodeType": "YulBlock",
													"src": "5584:28:17",
													"statements": [
														{
															"nativeSrc": "5594:12:17",
															"nodeType": "YulAssignment",
															"src": "5594:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "5601:5:17",
																"nodeType": "YulIdentifier",
																"src": "5601:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5594:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5537:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5570:5:17",
														"nodeType": "YulTypedName",
														"src": "5570:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5580:3:17",
														"nodeType": "YulTypedName",
														"src": "5580:3:17",
														"type": ""
													}
												],
												"src": "5537:75:17"
											},
											{
												"body": {
													"nativeSrc": "5694:193:17",
													"nodeType": "YulBlock",
													"src": "5694:193:17",
													"statements": [
														{
															"nativeSrc": "5704:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5704:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5759:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "5759:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5728:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "5728:30:17"
																},
																"nativeSrc": "5728:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5728:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5708:16:17",
																	"nodeType": "YulTypedName",
																	"src": "5708:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5783:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "5783:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5823:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "5823:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5817:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "5817:5:17"
																				},
																				"nativeSrc": "5817:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5817:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5830:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5830:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5862:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "5862:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5838:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "5838:23:17"
																				},
																				"nativeSrc": "5838:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5838:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5789:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "5789:27:17"
																		},
																		"nativeSrc": "5789:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5776:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:17"
																},
																"nativeSrc": "5776:105:17",
																"nodeType": "YulFunctionCall",
																"src": "5776:105:17"
															},
															"nativeSrc": "5776:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "5776:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5618:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5671:4:17",
														"nodeType": "YulTypedName",
														"src": "5671:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5677:6:17",
														"nodeType": "YulTypedName",
														"src": "5677:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5685:7:17",
														"nodeType": "YulTypedName",
														"src": "5685:7:17",
														"type": ""
													}
												],
												"src": "5618:269:17"
											},
											{
												"body": {
													"nativeSrc": "5942:24:17",
													"nodeType": "YulBlock",
													"src": "5942:24:17",
													"statements": [
														{
															"nativeSrc": "5952:8:17",
															"nodeType": "YulAssignment",
															"src": "5952:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "5959:1:17",
																"nodeType": "YulLiteral",
																"src": "5959:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5952:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5952:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5893:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5938:3:17",
														"nodeType": "YulTypedName",
														"src": "5938:3:17",
														"type": ""
													}
												],
												"src": "5893:73:17"
											},
											{
												"body": {
													"nativeSrc": "6025:136:17",
													"nodeType": "YulBlock",
													"src": "6025:136:17",
													"statements": [
														{
															"nativeSrc": "6035:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6035:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6049:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "6049:30:17"
																},
																"nativeSrc": "6049:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6049:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6039:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6039:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6134:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6134:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6140:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6140:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6148:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6148:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6090:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6090:43:17"
																},
																"nativeSrc": "6090:65:17",
																"nodeType": "YulFunctionCall",
																"src": "6090:65:17"
															},
															"nativeSrc": "6090:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "6090:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5972:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6011:4:17",
														"nodeType": "YulTypedName",
														"src": "6011:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6017:6:17",
														"nodeType": "YulTypedName",
														"src": "6017:6:17",
														"type": ""
													}
												],
												"src": "5972:189:17"
											},
											{
												"body": {
													"nativeSrc": "6217:136:17",
													"nodeType": "YulBlock",
													"src": "6217:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6284:63:17",
																"nodeType": "YulBlock",
																"src": "6284:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6328:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6328:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6335:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6335:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6298:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "6298:29:17"
																			},
																			"nativeSrc": "6298:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:39:17"
																		},
																		"nativeSrc": "6298:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6237:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6237:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6244:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6244:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6234:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6234:2:17"
																},
																"nativeSrc": "6234:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6234:14:17"
															},
															"nativeSrc": "6227:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6249:26:17",
																"nodeType": "YulBlock",
																"src": "6249:26:17",
																"statements": [
																	{
																		"nativeSrc": "6251:22:17",
																		"nodeType": "YulAssignment",
																		"src": "6251:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6264:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6264:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6271:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6271:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6260:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6260:3:17"
																			},
																			"nativeSrc": "6260:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6260:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6251:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6251:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6231:2:17",
																"nodeType": "YulBlock",
																"src": "6231:2:17",
																"statements": []
															},
															"src": "6227:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6167:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6205:5:17",
														"nodeType": "YulTypedName",
														"src": "6205:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6212:3:17",
														"nodeType": "YulTypedName",
														"src": "6212:3:17",
														"type": ""
													}
												],
												"src": "6167:186:17"
											},
											{
												"body": {
													"nativeSrc": "6438:464:17",
													"nodeType": "YulBlock",
													"src": "6438:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6464:431:17",
																"nodeType": "YulBlock",
																"src": "6464:431:17",
																"statements": [
																	{
																		"nativeSrc": "6478:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6478:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6526:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6526:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6494:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "6494:31:17"
																			},
																			"nativeSrc": "6494:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6494:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6482:8:17",
																				"nodeType": "YulTypedName",
																				"src": "6482:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6545:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6545:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6568:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "6568:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6596:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "6596:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6578:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "6578:17:17"
																					},
																					"nativeSrc": "6578:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "6578:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6564:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6564:3:17"
																			},
																			"nativeSrc": "6564:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6564:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6549:11:17",
																				"nodeType": "YulTypedName",
																				"src": "6549:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6765:27:17",
																			"nodeType": "YulBlock",
																			"src": "6765:27:17",
																			"statements": [
																				{
																					"nativeSrc": "6767:23:17",
																					"nodeType": "YulAssignment",
																					"src": "6767:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6782:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "6782:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6767:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "6767:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6749:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "6749:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6761:2:17",
																					"nodeType": "YulLiteral",
																					"src": "6761:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6746:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "6746:2:17"
																			},
																			"nativeSrc": "6746:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6746:18:17"
																		},
																		"nativeSrc": "6743:49:17",
																		"nodeType": "YulIf",
																		"src": "6743:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6834:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "6834:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6851:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "6851:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6879:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "6879:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6861:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "6861:17:17"
																							},
																							"nativeSrc": "6861:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "6861:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6847:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "6847:3:17"
																					},
																					"nativeSrc": "6847:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "6847:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6805:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "6805:28:17"
																			},
																			"nativeSrc": "6805:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6805:80:17"
																		},
																		"nativeSrc": "6805:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6805:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6455:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6455:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6460:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6460:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6452:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6452:2:17"
																},
																"nativeSrc": "6452:11:17",
																"nodeType": "YulFunctionCall",
																"src": "6452:11:17"
															},
															"nativeSrc": "6449:446:17",
															"nodeType": "YulIf",
															"src": "6449:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6359:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6414:5:17",
														"nodeType": "YulTypedName",
														"src": "6414:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6421:3:17",
														"nodeType": "YulTypedName",
														"src": "6421:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6426:10:17",
														"nodeType": "YulTypedName",
														"src": "6426:10:17",
														"type": ""
													}
												],
												"src": "6359:543:17"
											},
											{
												"body": {
													"nativeSrc": "6971:54:17",
													"nodeType": "YulBlock",
													"src": "6971:54:17",
													"statements": [
														{
															"nativeSrc": "6981:37:17",
															"nodeType": "YulAssignment",
															"src": "6981:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7006:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7006:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7012:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7012:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7002:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7002:3:17"
																},
																"nativeSrc": "7002:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7002:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6981:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "6981:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6908:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6946:4:17",
														"nodeType": "YulTypedName",
														"src": "6946:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6952:5:17",
														"nodeType": "YulTypedName",
														"src": "6952:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6962:8:17",
														"nodeType": "YulTypedName",
														"src": "6962:8:17",
														"type": ""
													}
												],
												"src": "6908:117:17"
											},
											{
												"body": {
													"nativeSrc": "7082:118:17",
													"nodeType": "YulBlock",
													"src": "7082:118:17",
													"statements": [
														{
															"nativeSrc": "7092:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7092:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7141:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7141:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7144:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "7144:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7137:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7137:3:17"
																				},
																				"nativeSrc": "7137:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7137:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7156:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7156:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7152:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7152:3:17"
																				},
																				"nativeSrc": "7152:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7152:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7108:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "7108:28:17"
																		},
																		"nativeSrc": "7108:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7108:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7104:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:17"
																},
																"nativeSrc": "7104:56:17",
																"nodeType": "YulFunctionCall",
																"src": "7104:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7096:4:17",
																	"nodeType": "YulTypedName",
																	"src": "7096:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7169:25:17",
															"nodeType": "YulAssignment",
															"src": "7169:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7183:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7183:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7189:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7189:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7179:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7179:3:17"
																},
																"nativeSrc": "7179:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7179:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7169:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7169:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7031:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7059:4:17",
														"nodeType": "YulTypedName",
														"src": "7059:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7065:5:17",
														"nodeType": "YulTypedName",
														"src": "7065:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7075:6:17",
														"nodeType": "YulTypedName",
														"src": "7075:6:17",
														"type": ""
													}
												],
												"src": "7031:169:17"
											},
											{
												"body": {
													"nativeSrc": "7286:214:17",
													"nodeType": "YulBlock",
													"src": "7286:214:17",
													"statements": [
														{
															"nativeSrc": "7419:37:17",
															"nodeType": "YulAssignment",
															"src": "7419:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7446:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7446:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7452:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7452:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7427:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "7427:18:17"
																},
																"nativeSrc": "7427:29:17",
																"nodeType": "YulFunctionCall",
																"src": "7427:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7419:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7419:4:17"
																}
															]
														},
														{
															"nativeSrc": "7465:29:17",
															"nodeType": "YulAssignment",
															"src": "7465:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7476:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7476:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7486:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7486:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7489:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7489:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7482:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:17"
																		},
																		"nativeSrc": "7482:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7482:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7473:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7473:2:17"
																},
																"nativeSrc": "7473:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7473:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7465:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7465:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7205:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7267:4:17",
														"nodeType": "YulTypedName",
														"src": "7267:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7273:3:17",
														"nodeType": "YulTypedName",
														"src": "7273:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7281:4:17",
														"nodeType": "YulTypedName",
														"src": "7281:4:17",
														"type": ""
													}
												],
												"src": "7205:295:17"
											},
											{
												"body": {
													"nativeSrc": "7597:1303:17",
													"nodeType": "YulBlock",
													"src": "7597:1303:17",
													"statements": [
														{
															"nativeSrc": "7608:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7608:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7655:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7622:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "7622:32:17"
																},
																"nativeSrc": "7622:37:17",
																"nodeType": "YulFunctionCall",
																"src": "7622:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7612:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7612:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7744:22:17",
																"nodeType": "YulBlock",
																"src": "7744:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7746:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7746:16:17"
																			},
																			"nativeSrc": "7746:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7746:18:17"
																		},
																		"nativeSrc": "7746:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7746:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7716:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7716:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7724:18:17",
																		"nodeType": "YulLiteral",
																		"src": "7724:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7713:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:17"
																},
																"nativeSrc": "7713:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7713:30:17"
															},
															"nativeSrc": "7710:56:17",
															"nodeType": "YulIf",
															"src": "7710:56:17"
														},
														{
															"nativeSrc": "7776:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7776:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7822:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "7822:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7816:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "7816:5:17"
																		},
																		"nativeSrc": "7816:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7816:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7790:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "7790:25:17"
																},
																"nativeSrc": "7790:38:17",
																"nodeType": "YulFunctionCall",
																"src": "7790:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7780:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7780:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7921:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7921:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7927:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7927:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7935:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7935:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7875:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "7875:45:17"
																},
																"nativeSrc": "7875:67:17",
																"nodeType": "YulFunctionCall",
																"src": "7875:67:17"
															},
															"nativeSrc": "7875:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "7875:67:17"
														},
														{
															"nativeSrc": "7952:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7952:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "7969:1:17",
																"nodeType": "YulLiteral",
																"src": "7969:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7956:9:17",
																	"nodeType": "YulTypedName",
																	"src": "7956:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7980:17:17",
															"nodeType": "YulAssignment",
															"src": "7980:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "7993:4:17",
																"nodeType": "YulLiteral",
																"src": "7993:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7980:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "7980:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8044:611:17",
																		"nodeType": "YulBlock",
																		"src": "8044:611:17",
																		"statements": [
																			{
																				"nativeSrc": "8058:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8058:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8077:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "8077:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8089:4:17",
																									"nodeType": "YulLiteral",
																									"src": "8089:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8085:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8085:3:17"
																							},
																							"nativeSrc": "8085:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8085:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8073:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "8073:3:17"
																					},
																					"nativeSrc": "8073:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8073:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8062:7:17",
																						"nodeType": "YulTypedName",
																						"src": "8062:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8109:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8109:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8155:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "8155:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8123:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "8123:31:17"
																					},
																					"nativeSrc": "8123:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8123:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8113:6:17",
																						"nodeType": "YulTypedName",
																						"src": "8113:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8173:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8173:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8182:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8182:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8177:1:17",
																						"nodeType": "YulTypedName",
																						"src": "8177:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8241:163:17",
																					"nodeType": "YulBlock",
																					"src": "8241:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8266:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8266:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8284:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "8284:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8289:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "8289:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8280:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "8280:3:17"
																												},
																												"nativeSrc": "8280:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "8280:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8274:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "8274:5:17"
																										},
																										"nativeSrc": "8274:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8274:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8259:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8259:6:17"
																								},
																								"nativeSrc": "8259:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8259:42:17"
																							},
																							"nativeSrc": "8259:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "8259:42:17"
																						},
																						{
																							"nativeSrc": "8318:24:17",
																							"nodeType": "YulAssignment",
																							"src": "8318:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8332:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8332:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8340:1:17",
																										"nodeType": "YulLiteral",
																										"src": "8340:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8328:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8328:3:17"
																								},
																								"nativeSrc": "8328:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8328:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8318:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8318:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8359:31:17",
																							"nodeType": "YulAssignment",
																							"src": "8359:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8376:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "8376:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8387:2:17",
																										"nodeType": "YulLiteral",
																										"src": "8387:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8372:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8372:3:17"
																								},
																								"nativeSrc": "8372:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8372:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8359:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "8359:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8207:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "8207:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8210:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "8210:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8204:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "8204:2:17"
																					},
																					"nativeSrc": "8204:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8204:14:17"
																				},
																				"nativeSrc": "8196:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8219:21:17",
																					"nodeType": "YulBlock",
																					"src": "8219:21:17",
																					"statements": [
																						{
																							"nativeSrc": "8221:17:17",
																							"nodeType": "YulAssignment",
																							"src": "8221:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8230:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "8230:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8233:4:17",
																										"nodeType": "YulLiteral",
																										"src": "8233:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8226:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8226:3:17"
																								},
																								"nativeSrc": "8226:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8226:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8221:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "8221:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8200:3:17",
																					"nodeType": "YulBlock",
																					"src": "8200:3:17",
																					"statements": []
																				},
																				"src": "8196:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "8440:156:17",
																					"nodeType": "YulBlock",
																					"src": "8440:156:17",
																					"statements": [
																						{
																							"nativeSrc": "8458:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8458:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8485:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "8485:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8490:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8490:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8481:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "8481:3:17"
																										},
																										"nativeSrc": "8481:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8481:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8475:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8475:5:17"
																								},
																								"nativeSrc": "8475:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8475:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8462:9:17",
																									"nodeType": "YulTypedName",
																									"src": "8462:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8525:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8525:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8552:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8552:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8567:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "8567:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8575:4:17",
																														"nodeType": "YulLiteral",
																														"src": "8575:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8563:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "8563:3:17"
																												},
																												"nativeSrc": "8563:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "8563:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8533:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "8533:18:17"
																										},
																										"nativeSrc": "8533:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8533:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8518:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8518:6:17"
																								},
																								"nativeSrc": "8518:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8518:64:17"
																							},
																							"nativeSrc": "8518:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "8518:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8423:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "8423:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8432:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "8432:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8420:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:17"
																					},
																					"nativeSrc": "8420:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:19:17"
																				},
																				"nativeSrc": "8417:179:17",
																				"nodeType": "YulIf",
																				"src": "8417:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8616:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "8616:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8630:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "8630:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8638:1:17",
																											"nodeType": "YulLiteral",
																											"src": "8638:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8626:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "8626:3:17"
																									},
																									"nativeSrc": "8626:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "8626:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8642:1:17",
																									"nodeType": "YulLiteral",
																									"src": "8642:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8622:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8622:3:17"
																							},
																							"nativeSrc": "8622:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8622:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8609:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8609:6:17"
																					},
																					"nativeSrc": "8609:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8609:36:17"
																				},
																				"nativeSrc": "8609:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "8609:36:17"
																			}
																		]
																	},
																	"nativeSrc": "8037:618:17",
																	"nodeType": "YulCase",
																	"src": "8037:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8042:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8042:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8672:222:17",
																		"nodeType": "YulBlock",
																		"src": "8672:222:17",
																		"statements": [
																			{
																				"nativeSrc": "8686:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8686:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8699:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8699:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8690:5:17",
																						"nodeType": "YulTypedName",
																						"src": "8690:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8723:67:17",
																					"nodeType": "YulBlock",
																					"src": "8723:67:17",
																					"statements": [
																						{
																							"nativeSrc": "8741:35:17",
																							"nodeType": "YulAssignment",
																							"src": "8741:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8760:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "8760:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8765:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8765:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8756:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "8756:3:17"
																										},
																										"nativeSrc": "8756:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8756:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8750:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8750:5:17"
																								},
																								"nativeSrc": "8750:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8750:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8741:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8741:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8716:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "8716:6:17"
																				},
																				"nativeSrc": "8713:77:17",
																				"nodeType": "YulIf",
																				"src": "8713:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8810:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "8810:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8869:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8869:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8876:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8876:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8816:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "8816:52:17"
																							},
																							"nativeSrc": "8816:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8816:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8803:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8803:6:17"
																					},
																					"nativeSrc": "8803:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8803:81:17"
																				},
																				"nativeSrc": "8803:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "8803:81:17"
																			}
																		]
																	},
																	"nativeSrc": "8664:230:17",
																	"nodeType": "YulCase",
																	"src": "8664:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8017:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8017:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8025:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8025:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8014:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8014:2:17"
																},
																"nativeSrc": "8014:14:17",
																"nodeType": "YulFunctionCall",
																"src": "8014:14:17"
															},
															"nativeSrc": "8007:887:17",
															"nodeType": "YulSwitch",
															"src": "8007:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7505:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7586:4:17",
														"nodeType": "YulTypedName",
														"src": "7586:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7592:3:17",
														"nodeType": "YulTypedName",
														"src": "7592:3:17",
														"type": ""
													}
												],
												"src": "7505:1395:17"
											},
											{
												"body": {
													"nativeSrc": "8951:81:17",
													"nodeType": "YulBlock",
													"src": "8951:81:17",
													"statements": [
														{
															"nativeSrc": "8961:65:17",
															"nodeType": "YulAssignment",
															"src": "8961:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8976:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8976:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8983:42:17",
																		"nodeType": "YulLiteral",
																		"src": "8983:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8972:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:17"
																},
																"nativeSrc": "8972:54:17",
																"nodeType": "YulFunctionCall",
																"src": "8972:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8961:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "8961:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8906:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8933:5:17",
														"nodeType": "YulTypedName",
														"src": "8933:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8943:7:17",
														"nodeType": "YulTypedName",
														"src": "8943:7:17",
														"type": ""
													}
												],
												"src": "8906:126:17"
											},
											{
												"body": {
													"nativeSrc": "9083:51:17",
													"nodeType": "YulBlock",
													"src": "9083:51:17",
													"statements": [
														{
															"nativeSrc": "9093:35:17",
															"nodeType": "YulAssignment",
															"src": "9093:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9122:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9122:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9104:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "9104:17:17"
																},
																"nativeSrc": "9104:24:17",
																"nodeType": "YulFunctionCall",
																"src": "9104:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9093:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "9093:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9038:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9065:5:17",
														"nodeType": "YulTypedName",
														"src": "9065:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9075:7:17",
														"nodeType": "YulTypedName",
														"src": "9075:7:17",
														"type": ""
													}
												],
												"src": "9038:96:17"
											},
											{
												"body": {
													"nativeSrc": "9205:53:17",
													"nodeType": "YulBlock",
													"src": "9205:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9222:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9222:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9245:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9245:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9227:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9227:17:17"
																		},
																		"nativeSrc": "9227:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9215:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9215:6:17"
																},
																"nativeSrc": "9215:37:17",
																"nodeType": "YulFunctionCall",
																"src": "9215:37:17"
															},
															"nativeSrc": "9215:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "9215:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9140:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9193:5:17",
														"nodeType": "YulTypedName",
														"src": "9193:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9200:3:17",
														"nodeType": "YulTypedName",
														"src": "9200:3:17",
														"type": ""
													}
												],
												"src": "9140:118:17"
											},
											{
												"body": {
													"nativeSrc": "9362:124:17",
													"nodeType": "YulBlock",
													"src": "9362:124:17",
													"statements": [
														{
															"nativeSrc": "9372:26:17",
															"nodeType": "YulAssignment",
															"src": "9372:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9384:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9384:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9395:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9395:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9380:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9380:3:17"
																},
																"nativeSrc": "9380:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9380:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9372:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9372:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9452:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9452:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9465:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9465:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9476:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9476:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9461:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9461:3:17"
																		},
																		"nativeSrc": "9461:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9461:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9408:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9408:43:17"
																},
																"nativeSrc": "9408:71:17",
																"nodeType": "YulFunctionCall",
																"src": "9408:71:17"
															},
															"nativeSrc": "9408:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "9408:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9264:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9334:9:17",
														"nodeType": "YulTypedName",
														"src": "9334:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9346:6:17",
														"nodeType": "YulTypedName",
														"src": "9346:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9357:4:17",
														"nodeType": "YulTypedName",
														"src": "9357:4:17",
														"type": ""
													}
												],
												"src": "9264:222:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002eef38038062002eef833981810160405281019062000036919062000346565b338383815f908162000049919062000633565b5080600190816200005b919062000633565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c891906200075a565b60405180910390fd5b620000e281620000fe60201b60201c565b508060079081620000f4919062000633565b5050505062000775565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200022282620001da565b810181811067ffffffffffffffff82111715620002445762000243620001ea565b5b80604052505050565b5f62000258620001c1565b905062000266828262000217565b919050565b5f67ffffffffffffffff821115620002885762000287620001ea565b5b6200029382620001da565b9050602081019050919050565b5f5b83811015620002bf578082015181840152602081019050620002a2565b5f8484015250505050565b5f620002e0620002da846200026b565b6200024d565b905082815260208101848484011115620002ff57620002fe620001d6565b5b6200030c848285620002a0565b509392505050565b5f82601f8301126200032b576200032a620001d2565b5b81516200033d848260208601620002ca565b91505092915050565b5f805f6060848603121562000360576200035f620001ca565b5b5f84015167ffffffffffffffff81111562000380576200037f620001ce565b5b6200038e8682870162000314565b935050602084015167ffffffffffffffff811115620003b257620003b1620001ce565b5b620003c08682870162000314565b925050604084015167ffffffffffffffff811115620003e457620003e3620001ce565b5b620003f28682870162000314565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200044b57607f821691505b60208210810362000461576200046062000406565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000488565b620004d1868362000488565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200051b620005156200050f84620004e9565b620004f2565b620004e9565b9050919050565b5f819050919050565b6200053683620004fb565b6200054e620005458262000522565b84845462000494565b825550505050565b5f90565b6200056462000556565b620005718184846200052b565b505050565b5b8181101562000598576200058c5f826200055a565b60018101905062000577565b5050565b601f821115620005e757620005b18162000467565b620005bc8462000479565b81016020851015620005cc578190505b620005e4620005db8562000479565b83018262000576565b50505b505050565b5f82821c905092915050565b5f620006095f1984600802620005ec565b1980831691505092915050565b5f620006238383620005f8565b9150826002028217905092915050565b6200063e82620003fc565b67ffffffffffffffff8111156200065a5762000659620001ea565b5b62000666825462000433565b620006738282856200059c565b5f60209050601f831160018114620006a9575f841562000694578287015190505b620006a0858262000616565b8655506200070f565b601f198416620006b98662000467565b5f5b82811015620006e257848901518255600182019150602085019450602081019050620006bb565b86831015620007025784890151620006fe601f891682620005f8565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620007428262000717565b9050919050565b620007548162000736565b82525050565b5f6020820190506200076f5f83018462000749565b92915050565b61276c80620007835f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c8063715018a6116100ab578063b88d4fde1161006f578063b88d4fde14610303578063c87b56dd1461031f578063d0e60cff1461034f578063e985e9c514610381578063f2fde38b146103b15761011f565b8063715018a6146102715780638da5cb5b1461027b57806395d89b41146102995780639756aadd146102b7578063a22cb465146102e75761011f565b806323b872dd116100f257806323b872dd146101bd57806342842e0e146101d95780635091df62146101f55780636352211e1461021157806370a08231146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611b25565b6103cd565b60405161014a9190611b6a565b60405180910390f35b61015b6104ae565b6040516101689190611c0d565b60405180910390f35b61018b60048036038101906101869190611c60565b61053d565b6040516101989190611cca565b60405180910390f35b6101bb60048036038101906101b69190611d0d565b610558565b005b6101d760048036038101906101d29190611d4b565b61056e565b005b6101f360048036038101906101ee9190611d4b565b61066d565b005b61020f600480360381019061020a9190611ec7565b61068c565b005b61022b60048036038101906102269190611c60565b610795565b6040516102389190611cca565b60405180910390f35b61025b60048036038101906102569190611f33565b6107a6565b6040516102689190611f6d565b60405180910390f35b61027961085c565b005b61028361086f565b6040516102909190611cca565b60405180910390f35b6102a1610897565b6040516102ae9190611c0d565b60405180910390f35b6102d160048036038101906102cc9190611c60565b610927565b6040516102de9190611b6a565b60405180910390f35b61030160048036038101906102fc9190611fb0565b61094d565b005b61031d6004803603810190610318919061208c565b610963565b005b61033960048036038101906103349190611c60565b610980565b6040516103469190611c0d565b60405180910390f35b61036960048036038101906103649190611c60565b6109e6565b6040516103789392919061210c565b60405180910390f35b61039b60048036038101906103969190612148565b610b25565b6040516103a89190611b6a565b60405180910390f35b6103cb60048036038101906103c69190611f33565b610bb3565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a757506104a682610c37565b5b9050919050565b60605f80546104bc906121b3565b80601f01602080910402602001604051908101604052809291908181526020018280546104e8906121b3565b80156105335780601f1061050a57610100808354040283529160200191610533565b820191905f5260205f20905b81548152906001019060200180831161051657829003601f168201915b5050505050905090565b5f61054782610ca0565b5061055182610d26565b9050919050565b61056a8282610565610d5f565b610d66565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105de575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d59190611cca565b60405180910390fd5b5f6105f183836105ec610d5f565b610d78565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610667578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065e939291906121e3565b60405180910390fd5b50505050565b61068783838360405180602001604052805f815250610963565b505050565b610694610f83565b5f60085490506106a4338261100a565b600160095f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550604051806060016040528085815260200184815260200183815250600a5f8381526020019081526020015f205f820151815f01908161070c91906123b5565b50602082015181600101556040820151816002015590505060085f815480929190610736906124b1565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f7a4bb3b51994e0ca98a9a569b1b5baade9f795a768ce078dffdb422d1afeef4b8286868660405161078794939291906124f8565b60405180910390a250505050565b5f61079f82610ca0565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610817575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161080e9190611cca565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610864610f83565b61086d5f611027565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108a6906121b3565b80601f01602080910402602001604051908101604052809291908181526020018280546108d2906121b3565b801561091d5780601f106108f45761010080835404028352916020019161091d565b820191905f5260205f20905b81548152906001019060200180831161090057829003601f168201915b5050505050905090565b5f60095f8381526020019081526020015f205f9054906101000a900460ff169050919050565b61095f610958610d5f565b83836110ea565b5050565b61096e84848461056e565b61097a84848484611253565b50505050565b606061098b82610ca0565b505f610995611405565b90505f8151116109b35760405180602001604052805f8152506109de565b806109bd8461141b565b6040516020016109ce92919061257c565b6040516020818303038152906040525b915050919050565b60605f8060095f8581526020019081526020015f205f9054906101000a900460ff16610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e906125e9565b60405180910390fd5b5f600a5f8681526020019081526020015f206040518060600160405290815f82018054610a73906121b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9f906121b3565b8015610aea5780601f10610ac157610100808354040283529160200191610aea565b820191905f5260205f20905b815481529060010190602001808311610acd57829003601f168201915b50505050508152602001600182015481526020016002820154815250509050805f015181602001518260400151935093509350509193909250565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610bbb610f83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c2b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c229190611cca565b60405180910390fd5b610c3481611027565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610cab836114e5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1d57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d149190611f6d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d73838383600161151e565b505050565b5f80610d83846114e5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610dc457610dc38184866116dd565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e4f57610e035f855f8061151e565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ece57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f8b610d5f565b73ffffffffffffffffffffffffffffffffffffffff16610fa961086f565b73ffffffffffffffffffffffffffffffffffffffff161461100857610fcc610d5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fff9190611cca565b60405180910390fd5b565b611023828260405180602001604052805f8152506117a0565b5050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115a57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111519190611cca565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112469190611b6a565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156113ff578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611296610d5f565b8685856040518563ffffffff1660e01b81526004016112b89493929190612659565b6020604051808303815f875af19250505080156112f357506040513d601f19601f820116820180604052508101906112f091906126b7565b60015b611374573d805f8114611321576040519150601f19603f3d011682016040523d82523d5f602084013e611326565b606091505b505f81510361136c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113639190611cca565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113fd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113f49190611cca565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611429846117bb565b0190505f8167ffffffffffffffff81111561144757611446611da3565b5b6040519080825280601f01601f1916602001820160405280156114795781602001600182028036833780820191505090505b5090505f82602001820190505b6001156114da578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114cf576114ce6126e2565b5b0494505f8503611486575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061155657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611688575f61156584610ca0565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115cf57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115e257506115e08184610b25565b155b1561162457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161161b9190611cca565b60405180910390fd5b811561168657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116e883838361190c565b61179b575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361175c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117539190611f6d565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161179292919061270f565b60405180910390fd5b505050565b6117aa83836119cc565b6117b65f848484611253565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611817577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161180d5761180c6126e2565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611854576d04ee2d6d415b85acef8100000000838161184a576118496126e2565b5b0492506020810190505b662386f26fc10000831061188357662386f26fc100008381611879576118786126e2565b5b0492506010810190505b6305f5e10083106118ac576305f5e10083816118a2576118a16126e2565b5b0492506008810190505b61271083106118d15761271083816118c7576118c66126e2565b5b0492506004810190505b606483106118f457606483816118ea576118e96126e2565b5b0492506002810190505b600a8310611903576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119c357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061198457506119838484610b25565b5b806119c257508273ffffffffffffffffffffffffffffffffffffffff166119aa83610d26565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a3c575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a339190611cca565b60405180910390fd5b5f611a4883835f610d78565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aba575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ab19190611cca565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b0481611ad0565b8114611b0e575f80fd5b50565b5f81359050611b1f81611afb565b92915050565b5f60208284031215611b3a57611b39611ac8565b5b5f611b4784828501611b11565b91505092915050565b5f8115159050919050565b611b6481611b50565b82525050565b5f602082019050611b7d5f830184611b5b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611bba578082015181840152602081019050611b9f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611bdf82611b83565b611be98185611b8d565b9350611bf9818560208601611b9d565b611c0281611bc5565b840191505092915050565b5f6020820190508181035f830152611c258184611bd5565b905092915050565b5f819050919050565b611c3f81611c2d565b8114611c49575f80fd5b50565b5f81359050611c5a81611c36565b92915050565b5f60208284031215611c7557611c74611ac8565b5b5f611c8284828501611c4c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611cb482611c8b565b9050919050565b611cc481611caa565b82525050565b5f602082019050611cdd5f830184611cbb565b92915050565b611cec81611caa565b8114611cf6575f80fd5b50565b5f81359050611d0781611ce3565b92915050565b5f8060408385031215611d2357611d22611ac8565b5b5f611d3085828601611cf9565b9250506020611d4185828601611c4c565b9150509250929050565b5f805f60608486031215611d6257611d61611ac8565b5b5f611d6f86828701611cf9565b9350506020611d8086828701611cf9565b9250506040611d9186828701611c4c565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dd982611bc5565b810181811067ffffffffffffffff82111715611df857611df7611da3565b5b80604052505050565b5f611e0a611abf565b9050611e168282611dd0565b919050565b5f67ffffffffffffffff821115611e3557611e34611da3565b5b611e3e82611bc5565b9050602081019050919050565b828183375f83830152505050565b5f611e6b611e6684611e1b565b611e01565b905082815260208101848484011115611e8757611e86611d9f565b5b611e92848285611e4b565b509392505050565b5f82601f830112611eae57611ead611d9b565b5b8135611ebe848260208601611e59565b91505092915050565b5f805f60608486031215611ede57611edd611ac8565b5b5f84013567ffffffffffffffff811115611efb57611efa611acc565b5b611f0786828701611e9a565b9350506020611f1886828701611c4c565b9250506040611f2986828701611c4c565b9150509250925092565b5f60208284031215611f4857611f47611ac8565b5b5f611f5584828501611cf9565b91505092915050565b611f6781611c2d565b82525050565b5f602082019050611f805f830184611f5e565b92915050565b611f8f81611b50565b8114611f99575f80fd5b50565b5f81359050611faa81611f86565b92915050565b5f8060408385031215611fc657611fc5611ac8565b5b5f611fd385828601611cf9565b9250506020611fe485828601611f9c565b9150509250929050565b5f67ffffffffffffffff82111561200857612007611da3565b5b61201182611bc5565b9050602081019050919050565b5f61203061202b84611fee565b611e01565b90508281526020810184848401111561204c5761204b611d9f565b5b612057848285611e4b565b509392505050565b5f82601f83011261207357612072611d9b565b5b813561208384826020860161201e565b91505092915050565b5f805f80608085870312156120a4576120a3611ac8565b5b5f6120b187828801611cf9565b94505060206120c287828801611cf9565b93505060406120d387828801611c4c565b925050606085013567ffffffffffffffff8111156120f4576120f3611acc565b5b6121008782880161205f565b91505092959194509250565b5f6060820190508181035f8301526121248186611bd5565b90506121336020830185611f5e565b6121406040830184611f5e565b949350505050565b5f806040838503121561215e5761215d611ac8565b5b5f61216b85828601611cf9565b925050602061217c85828601611cf9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121ca57607f821691505b6020821081036121dd576121dc612186565b5b50919050565b5f6060820190506121f65f830186611cbb565b6122036020830185611f5e565b6122106040830184611cbb565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612239565b61227e8683612239565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6122b96122b46122af84611c2d565b612296565b611c2d565b9050919050565b5f819050919050565b6122d28361229f565b6122e66122de826122c0565b848454612245565b825550505050565b5f90565b6122fa6122ee565b6123058184846122c9565b505050565b5b818110156123285761231d5f826122f2565b60018101905061230b565b5050565b601f82111561236d5761233e81612218565b6123478461222a565b81016020851015612356578190505b61236a6123628561222a565b83018261230a565b50505b505050565b5f82821c905092915050565b5f61238d5f1984600802612372565b1980831691505092915050565b5f6123a5838361237e565b9150826002028217905092915050565b6123be82611b83565b67ffffffffffffffff8111156123d7576123d6611da3565b5b6123e182546121b3565b6123ec82828561232c565b5f60209050601f83116001811461241d575f841561240b578287015190505b612415858261239a565b86555061247c565b601f19841661242b86612218565b5f5b828110156124525784890151825560018201915060208501945060208101905061242d565b8683101561246f578489015161246b601f89168261237e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6124bb82611c2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124ed576124ec612484565b5b600182019050919050565b5f60808201905061250b5f830187611f5e565b818103602083015261251d8186611bd5565b905061252c6040830185611f5e565b6125396060830184611f5e565b95945050505050565b5f81905092915050565b5f61255682611b83565b6125608185612542565b9350612570818560208601611b9d565b80840191505092915050565b5f612587828561254c565b9150612593828461254c565b91508190509392505050565b7f436861726163746572206e6f74206d696e7465640000000000000000000000005f82015250565b5f6125d3601483611b8d565b91506125de8261259f565b602082019050919050565b5f6020820190508181035f830152612600816125c7565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61262b82612607565b6126358185612611565b9350612645818560208601611b9d565b61264e81611bc5565b840191505092915050565b5f60808201905061266c5f830187611cbb565b6126796020830186611cbb565b6126866040830185611f5e565b81810360608301526126988184612621565b905095945050505050565b5f815190506126b181611afb565b92915050565b5f602082840312156126cc576126cb611ac8565b5b5f6126d9848285016126a3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506127225f830185611cbb565b61272f6020830184611f5e565b939250505056fea2646970667358221220eaeb912180ee25bf0a037fde46a6ce9f407382743e3bd66d3bba6920fabb136364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EEF CODESIZE SUB DUP1 PUSH3 0x2EEF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE2 DUP2 PUSH3 0xFE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST POP POP POP POP PUSH3 0x775 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x222 DUP3 PUSH3 0x1DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x244 JUMPI PUSH3 0x243 PUSH3 0x1EA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x258 PUSH3 0x1C1 JUMP JUMPDEST SWAP1 POP PUSH3 0x266 DUP3 DUP3 PUSH3 0x217 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x288 JUMPI PUSH3 0x287 PUSH3 0x1EA JUMP JUMPDEST JUMPDEST PUSH3 0x293 DUP3 PUSH3 0x1DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E0 PUSH3 0x2DA DUP5 PUSH3 0x26B JUMP JUMPDEST PUSH3 0x24D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2FF JUMPI PUSH3 0x2FE PUSH3 0x1D6 JUMP JUMPDEST JUMPDEST PUSH3 0x30C DUP5 DUP3 DUP6 PUSH3 0x2A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x1D2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x33D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x360 JUMPI PUSH3 0x35F PUSH3 0x1CA JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x380 JUMPI PUSH3 0x37F PUSH3 0x1CE JUMP JUMPDEST JUMPDEST PUSH3 0x38E DUP7 DUP3 DUP8 ADD PUSH3 0x314 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B2 JUMPI PUSH3 0x3B1 PUSH3 0x1CE JUMP JUMPDEST JUMPDEST PUSH3 0x3C0 DUP7 DUP3 DUP8 ADD PUSH3 0x314 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3E4 JUMPI PUSH3 0x3E3 PUSH3 0x1CE JUMP JUMPDEST JUMPDEST PUSH3 0x3F2 DUP7 DUP3 DUP8 ADD PUSH3 0x314 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x44B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x461 JUMPI PUSH3 0x460 PUSH3 0x406 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x4C5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x488 JUMP JUMPDEST PUSH3 0x4D1 DUP7 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x51B PUSH3 0x515 PUSH3 0x50F DUP5 PUSH3 0x4E9 JUMP JUMPDEST PUSH3 0x4F2 JUMP JUMPDEST PUSH3 0x4E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x536 DUP4 PUSH3 0x4FB JUMP JUMPDEST PUSH3 0x54E PUSH3 0x545 DUP3 PUSH3 0x522 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x494 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x564 PUSH3 0x556 JUMP JUMPDEST PUSH3 0x571 DUP2 DUP5 DUP5 PUSH3 0x52B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x598 JUMPI PUSH3 0x58C PUSH0 DUP3 PUSH3 0x55A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x577 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5E7 JUMPI PUSH3 0x5B1 DUP2 PUSH3 0x467 JUMP JUMPDEST PUSH3 0x5BC DUP5 PUSH3 0x479 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5CC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5E4 PUSH3 0x5DB DUP6 PUSH3 0x479 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x576 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x609 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5EC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x623 DUP4 DUP4 PUSH3 0x5F8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x63E DUP3 PUSH3 0x3FC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x65A JUMPI PUSH3 0x659 PUSH3 0x1EA JUMP JUMPDEST JUMPDEST PUSH3 0x666 DUP3 SLOAD PUSH3 0x433 JUMP JUMPDEST PUSH3 0x673 DUP3 DUP3 DUP6 PUSH3 0x59C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6A9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x694 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6A0 DUP6 DUP3 PUSH3 0x616 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x70F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6B9 DUP7 PUSH3 0x467 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6E2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6BB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x702 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6FE PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5F8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x742 DUP3 PUSH3 0x717 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x754 DUP2 PUSH3 0x736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x76F PUSH0 DUP4 ADD DUP5 PUSH3 0x749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x276C DUP1 PUSH3 0x783 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD0E60CFF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x9756AADD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x5091DF62 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x497 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4A7 JUMPI POP PUSH2 0x4A6 DUP3 PUSH2 0xC37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x533 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x533 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x516 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x547 DUP3 PUSH2 0xCA0 JUMP JUMPDEST POP PUSH2 0x551 DUP3 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP3 DUP3 PUSH2 0x565 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xD66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F1 DUP4 DUP4 PUSH2 0x5EC PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x667 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x687 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 PUSH2 0xF83 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x6A4 CALLER DUP3 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x736 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A4BB3B51994E0CA98A9A569B1B5BAADE9F795A768CE078DFFDB422D1AFEEF4B DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79F DUP3 PUSH2 0xCA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x817 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x864 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x86D PUSH0 PUSH2 0x1027 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8A6 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x900 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95F PUSH2 0x958 PUSH2 0xD5F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x96E DUP5 DUP5 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x97A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1253 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x98B DUP3 PUSH2 0xCA0 JUMP JUMPDEST POP PUSH0 PUSH2 0x995 PUSH2 0x1405 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9DE JUMP JUMPDEST DUP1 PUSH2 0x9BD DUP5 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CE SWAP3 SWAP2 SWAP1 PUSH2 0x257C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xA73 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9F SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAEA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBBB PUSH2 0xF83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0x1027 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCAB DUP4 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x151E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD83 DUP5 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH2 0xDC3 DUP2 DUP5 DUP7 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4F JUMPI PUSH2 0xE03 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECE JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0xD5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA9 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1008 JUMPI PUSH2 0xFCC PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1023 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x17A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13FF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1296 PUSH2 0xD5F JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12F3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F0 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1374 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x136C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1429 DUP5 PUSH2 0x17BB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1479 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14DA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14CF JUMPI PUSH2 0x14CE PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1486 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1556 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1688 JUMPI PUSH0 PUSH2 0x1565 DUP5 PUSH2 0xCA0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15CF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15E2 JUMPI POP PUSH2 0x15E0 DUP2 DUP5 PUSH2 0xB25 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1624 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1686 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16E8 DUP4 DUP4 DUP4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x179B JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1792 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17AA DUP4 DUP4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x17B6 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1253 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1817 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1854 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1883 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18AC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18A2 JUMPI PUSH2 0x18A1 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18D1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18F4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1903 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1984 JUMPI POP PUSH2 0x1983 DUP5 DUP5 PUSH2 0xB25 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19C2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AA DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A48 DUP4 DUP4 PUSH0 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ABA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB1 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B04 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B1F DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3A JUMPI PUSH2 0x1B39 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B47 DUP5 DUP3 DUP6 ADD PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B9F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDF DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BE9 DUP2 DUP6 PUSH2 0x1B8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x1C02 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C25 DUP2 DUP5 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C49 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5A DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB4 DUP3 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDD PUSH0 DUP4 ADD DUP5 PUSH2 0x1CBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D07 DUP2 PUSH2 0x1CE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6F DUP7 DUP3 DUP8 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D80 DUP7 DUP3 DUP8 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D91 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1DD9 DUP3 PUSH2 0x1BC5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DF8 JUMPI PUSH2 0x1DF7 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0A PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 DUP3 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E34 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3E DUP3 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6B PUSH2 0x1E66 DUP5 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E87 JUMPI PUSH2 0x1E86 PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST PUSH2 0x1E92 DUP5 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1D9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EBE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH2 0x1EDD PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1ACC JUMP JUMPDEST JUMPDEST PUSH2 0x1F07 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F18 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F29 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F55 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F67 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8F DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FAA DUP2 PUSH2 0x1F86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x2011 DUP3 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2030 PUSH2 0x202B DUP5 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x204C JUMPI PUSH2 0x204B PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST PUSH2 0x2057 DUP5 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2073 JUMPI PUSH2 0x2072 PUSH2 0x1D9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2083 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B1 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20C2 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x1ACC JUMP JUMPDEST JUMPDEST PUSH2 0x2100 DUP8 DUP3 DUP9 ADD PUSH2 0x205F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2124 DUP2 DUP7 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2133 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2140 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215D PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216B DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217C DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x2186 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2210 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2274 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x227E DUP7 DUP4 PUSH2 0x2239 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22B9 PUSH2 0x22B4 PUSH2 0x22AF DUP5 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D2 DUP4 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x22E6 PUSH2 0x22DE DUP3 PUSH2 0x22C0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2245 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x22FA PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x2305 DUP2 DUP5 DUP5 PUSH2 0x22C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x231D PUSH0 DUP3 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x236D JUMPI PUSH2 0x233E DUP2 PUSH2 0x2218 JUMP JUMPDEST PUSH2 0x2347 DUP5 PUSH2 0x222A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2356 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x236A PUSH2 0x2362 DUP6 PUSH2 0x222A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x230A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2372 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23A5 DUP4 DUP4 PUSH2 0x237E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23BE DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x23E1 DUP3 SLOAD PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x23EC DUP3 DUP3 DUP6 PUSH2 0x232C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x241D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x240B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2415 DUP6 DUP3 PUSH2 0x239A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x247C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x242B DUP7 PUSH2 0x2218 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2452 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x242D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x246F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x246B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x237E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24BB DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24ED JUMPI PUSH2 0x24EC PUSH2 0x2484 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x250B PUSH0 DUP4 ADD DUP8 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x251D DUP2 DUP7 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x252C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2539 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2556 DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2560 DUP2 DUP6 PUSH2 0x2542 JUMP JUMPDEST SWAP4 POP PUSH2 0x2570 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 DUP3 DUP6 PUSH2 0x254C JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 DUP5 PUSH2 0x254C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436861726163746572206E6F74206D696E746564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D3 PUSH1 0x14 DUP4 PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP PUSH2 0x25DE DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2600 DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x262B DUP3 PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2635 DUP2 DUP6 PUSH2 0x2611 JUMP JUMPDEST SWAP4 POP PUSH2 0x2645 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x264E DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x266C PUSH0 DUP4 ADD DUP8 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2679 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2698 DUP2 DUP5 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B1 DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CC JUMPI PUSH2 0x26CB PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D9 DUP5 DUP3 DUP6 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2722 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x272F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xEB SWAP2 0x21 DUP1 0xEE 0x25 0xBF EXP SUB PUSH32 0xDE46A6CE9F407382743E3BD66D3BBA6920FABB136364736F6C63430008160033 ",
							"sourceMap": "274:1973:16:-:0;;;1061:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1177:10;1153:5;1160:7;1455:5:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1215:13:16::2;1200:12;:28;;;;;;:::i;:::-;;1061:175:::0;;;274:1973;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:1182::-;2795:6;2803;2811;2860:2;2848:9;2839:7;2835:23;2831:32;2828:119;;;2866:79;;:::i;:::-;2828:119;3007:1;2996:9;2992:17;2986:24;3037:18;3029:6;3026:30;3023:117;;;3059:79;;:::i;:::-;3023:117;3164:74;3230:7;3221:6;3210:9;3206:22;3164:74;:::i;:::-;3154:84;;2957:291;3308:2;3297:9;3293:18;3287:25;3339:18;3331:6;3328:30;3325:117;;;3361:79;;:::i;:::-;3325:117;3466:74;3532:7;3523:6;3512:9;3508:22;3466:74;:::i;:::-;3456:84;;3258:292;3610:2;3599:9;3595:18;3589:25;3641:18;3633:6;3630:30;3627:117;;;3663:79;;:::i;:::-;3627:117;3768:74;3834:7;3825:6;3814:9;3810:22;3768:74;:::i;:::-;3758:84;;3560:292;2677:1182;;;;;:::o;3865:99::-;3917:6;3951:5;3945:12;3935:22;;3865:99;;;:::o;3970:180::-;4018:77;4015:1;4008:88;4115:4;4112:1;4105:15;4139:4;4136:1;4129:15;4156:320;4200:6;4237:1;4231:4;4227:12;4217:22;;4284:1;4278:4;4274:12;4305:18;4295:81;;4361:4;4353:6;4349:17;4339:27;;4295:81;4423:2;4415:6;4412:14;4392:18;4389:38;4386:84;;4442:18;;:::i;:::-;4386:84;4207:269;4156:320;;;:::o;4482:141::-;4531:4;4554:3;4546:11;;4577:3;4574:1;4567:14;4611:4;4608:1;4598:18;4590:26;;4482:141;;;:::o;4629:93::-;4666:6;4713:2;4708;4701:5;4697:14;4693:23;4683:33;;4629:93;;;:::o;4728:107::-;4772:8;4822:5;4816:4;4812:16;4791:37;;4728:107;;;;:::o;4841:393::-;4910:6;4960:1;4948:10;4944:18;4983:97;5013:66;5002:9;4983:97;:::i;:::-;5101:39;5131:8;5120:9;5101:39;:::i;:::-;5089:51;;5173:4;5169:9;5162:5;5158:21;5149:30;;5222:4;5212:8;5208:19;5201:5;5198:30;5188:40;;4917:317;;4841:393;;;;;:::o;5240:77::-;5277:7;5306:5;5295:16;;5240:77;;;:::o;5323:60::-;5351:3;5372:5;5365:12;;5323:60;;;:::o;5389:142::-;5439:9;5472:53;5490:34;5499:24;5517:5;5499:24;:::i;:::-;5490:34;:::i;:::-;5472:53;:::i;:::-;5459:66;;5389:142;;;:::o;5537:75::-;5580:3;5601:5;5594:12;;5537:75;;;:::o;5618:269::-;5728:39;5759:7;5728:39;:::i;:::-;5789:91;5838:41;5862:16;5838:41;:::i;:::-;5830:6;5823:4;5817:11;5789:91;:::i;:::-;5783:4;5776:105;5694:193;5618:269;;;:::o;5893:73::-;5938:3;5893:73;:::o;5972:189::-;6049:32;;:::i;:::-;6090:65;6148:6;6140;6134:4;6090:65;:::i;:::-;6025:136;5972:189;;:::o;6167:186::-;6227:120;6244:3;6237:5;6234:14;6227:120;;;6298:39;6335:1;6328:5;6298:39;:::i;:::-;6271:1;6264:5;6260:13;6251:22;;6227:120;;;6167:186;;:::o;6359:543::-;6460:2;6455:3;6452:11;6449:446;;;6494:38;6526:5;6494:38;:::i;:::-;6578:29;6596:10;6578:29;:::i;:::-;6568:8;6564:44;6761:2;6749:10;6746:18;6743:49;;;6782:8;6767:23;;6743:49;6805:80;6861:22;6879:3;6861:22;:::i;:::-;6851:8;6847:37;6834:11;6805:80;:::i;:::-;6464:431;;6449:446;6359:543;;;:::o;6908:117::-;6962:8;7012:5;7006:4;7002:16;6981:37;;6908:117;;;;:::o;7031:169::-;7075:6;7108:51;7156:1;7152:6;7144:5;7141:1;7137:13;7108:51;:::i;:::-;7104:56;7189:4;7183;7179:15;7169:25;;7082:118;7031:169;;;;:::o;7205:295::-;7281:4;7427:29;7452:3;7446:4;7427:29;:::i;:::-;7419:37;;7489:3;7486:1;7482:11;7476:4;7473:21;7465:29;;7205:295;;;;:::o;7505:1395::-;7622:37;7655:3;7622:37;:::i;:::-;7724:18;7716:6;7713:30;7710:56;;;7746:18;;:::i;:::-;7710:56;7790:38;7822:4;7816:11;7790:38;:::i;:::-;7875:67;7935:6;7927;7921:4;7875:67;:::i;:::-;7969:1;7993:4;7980:17;;8025:2;8017:6;8014:14;8042:1;8037:618;;;;8699:1;8716:6;8713:77;;;8765:9;8760:3;8756:19;8750:26;8741:35;;8713:77;8816:67;8876:6;8869:5;8816:67;:::i;:::-;8810:4;8803:81;8672:222;8007:887;;8037:618;8089:4;8085:9;8077:6;8073:22;8123:37;8155:4;8123:37;:::i;:::-;8182:1;8196:208;8210:7;8207:1;8204:14;8196:208;;;8289:9;8284:3;8280:19;8274:26;8266:6;8259:42;8340:1;8332:6;8328:14;8318:24;;8387:2;8376:9;8372:18;8359:31;;8233:4;8230:1;8226:12;8221:17;;8196:208;;;8432:6;8423:7;8420:19;8417:179;;;8490:9;8485:3;8481:19;8475:26;8533:48;8575:4;8567:6;8563:17;8552:9;8533:48;:::i;:::-;8525:6;8518:64;8440:156;8417:179;8642:1;8638;8630:6;8626:14;8622:22;8616:4;8609:36;8044:611;;;8007:887;;7597:1303;;;7505:1395;;:::o;8906:126::-;8943:7;8983:42;8976:5;8972:54;8961:65;;8906:126;;;:::o;9038:96::-;9075:7;9104:24;9122:5;9104:24;:::i;:::-;9093:35;;9038:96;;;:::o;9140:118::-;9227:24;9245:5;9227:24;:::i;:::-;9222:3;9215:37;9140:118;;:::o;9264:222::-;9357:4;9395:2;9384:9;9380:18;9372:26;;9408:71;9476:1;9465:9;9461:17;9452:6;9408:71;:::i;:::-;9264:222;;;;:::o;274:1973:16:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 3430,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 5406,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": 5125,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 5853,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 4691,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3971,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3366,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 6412,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 6604,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": 3423,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 5349,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3232,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 4106,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 6048,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 4330,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4135,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3448,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1368,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1958,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1341,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCharacterAttributes_3245": {
									"entryPoint": 2534,
									"id": 3245,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@isApprovedForAll_587": {
									"entryPoint": 2853,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isCharacterMinted_3211": {
									"entryPoint": 2343,
									"id": 3211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2801": {
									"entryPoint": 6075,
									"id": 2801,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintCharacter_3199": {
									"entryPoint": 1676,
									"id": 3199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_467": {
									"entryPoint": 1198,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1941,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2159,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2140,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1645,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2403,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2381,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1914": {
									"entryPoint": 3127,
									"id": 1914,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 973,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2199,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1704": {
									"entryPoint": 5147,
									"id": 1704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 2432,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1390,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2995,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9817,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9004,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23586:17",
										"nodeType": "YulBlock",
										"src": "0:23586:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "378:105:17",
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nativeSrc": "388:89:17",
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:17",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nativeSrc": "399:78:17",
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:17",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:17",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nativeSrc": "531:78:17",
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:17",
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:17",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nativeSrc": "589:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nativeSrc": "589:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:17",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nativeSrc": "561:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nativeSrc": "551:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nativeSrc": "544:42:17",
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nativeSrc": "541:62:17",
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:17",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nativeSrc": "666:86:17",
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nativeSrc": "676:29:17",
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nativeSrc": "685:20:17",
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nativeSrc": "714:32:17",
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nativeSrc": "714:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:17",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:17",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:17",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nativeSrc": "823:262:17",
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:17",
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nativeSrc": "871:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nativeSrc": "871:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:32:17",
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nativeSrc": "833:119:17",
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nativeSrc": "962:116:17",
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nativeSrc": "977:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:17",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:17",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nativeSrc": "1036:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:17",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nativeSrc": "1016:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:17",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:17",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:17",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nativeSrc": "1133:48:17",
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nativeSrc": "1143:32:17",
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nativeSrc": "1161:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nativeSrc": "1154:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:17",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:17",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nativeSrc": "1246:50:17",
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nativeSrc": "1268:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nativeSrc": "1256:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nativeSrc": "1256:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:17",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:17",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nativeSrc": "1394:118:17",
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nativeSrc": "1404:26:17",
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nativeSrc": "1412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nativeSrc": "1487:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nativeSrc": "1440:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nativeSrc": "1440:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:17",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:17",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:17",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nativeSrc": "1577:40:17",
													"nodeType": "YulBlock",
													"src": "1577:40:17",
													"statements": [
														{
															"nativeSrc": "1588:22:17",
															"nodeType": "YulAssignment",
															"src": "1588:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:17"
																},
																"nativeSrc": "1598:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:17",
														"nodeType": "YulTypedName",
														"src": "1560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:17",
														"nodeType": "YulTypedName",
														"src": "1570:6:17",
														"type": ""
													}
												],
												"src": "1518:99:17"
											},
											{
												"body": {
													"nativeSrc": "1719:73:17",
													"nodeType": "YulBlock",
													"src": "1719:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:17"
																},
																"nativeSrc": "1729:19:17",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:17"
															},
															"nativeSrc": "1729:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:17"
														},
														{
															"nativeSrc": "1757:29:17",
															"nodeType": "YulAssignment",
															"src": "1757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:17"
																},
																"nativeSrc": "1772:14:17",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:17",
														"nodeType": "YulTypedName",
														"src": "1691:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:17",
														"nodeType": "YulTypedName",
														"src": "1696:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:17",
														"nodeType": "YulTypedName",
														"src": "1707:11:17",
														"type": ""
													}
												],
												"src": "1623:169:17"
											},
											{
												"body": {
													"nativeSrc": "1860:184:17",
													"nodeType": "YulBlock",
													"src": "1860:184:17",
													"statements": [
														{
															"nativeSrc": "1870:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:17",
																"nodeType": "YulLiteral",
																"src": "1879:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:17",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:17",
																"nodeType": "YulBlock",
																"src": "1939:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:17"
																					},
																					"nativeSrc": "1960:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:17"
																							},
																							"nativeSrc": "1979:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:17"
																					},
																					"nativeSrc": "1973:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:17"
																			},
																			"nativeSrc": "1953:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:17"
																		},
																		"nativeSrc": "1953:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:17"
																},
																"nativeSrc": "1897:13:17",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:17"
															},
															"nativeSrc": "1889:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:17",
																"nodeType": "YulBlock",
																"src": "1911:19:17",
																"statements": [
																	{
																		"nativeSrc": "1913:15:17",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:17",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:17"
																			},
																			"nativeSrc": "1918:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:17",
																"nodeType": "YulBlock",
																"src": "1893:3:17",
																"statements": []
															},
															"src": "1889:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nativeSrc": "2018:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:17"
																},
																"nativeSrc": "2011:27:17",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:17"
															},
															"nativeSrc": "2011:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:17",
														"nodeType": "YulTypedName",
														"src": "1842:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:17",
														"nodeType": "YulTypedName",
														"src": "1847:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:17",
														"nodeType": "YulTypedName",
														"src": "1852:6:17",
														"type": ""
													}
												],
												"src": "1798:246:17"
											},
											{
												"body": {
													"nativeSrc": "2098:54:17",
													"nodeType": "YulBlock",
													"src": "2098:54:17",
													"statements": [
														{
															"nativeSrc": "2108:38:17",
															"nodeType": "YulAssignment",
															"src": "2108:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:17"
																		},
																		"nativeSrc": "2122:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:17"
																		},
																		"nativeSrc": "2138:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:17"
																},
																"nativeSrc": "2118:28:17",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:17",
														"nodeType": "YulTypedName",
														"src": "2081:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:17",
														"nodeType": "YulTypedName",
														"src": "2091:6:17",
														"type": ""
													}
												],
												"src": "2050:102:17"
											},
											{
												"body": {
													"nativeSrc": "2250:285:17",
													"nodeType": "YulBlock",
													"src": "2250:285:17",
													"statements": [
														{
															"nativeSrc": "2260:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:17"
																},
																"nativeSrc": "2274:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:17",
															"nodeType": "YulAssignment",
															"src": "2322:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:17"
																},
																"nativeSrc": "2329:71:17",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:17"
																		},
																		"nativeSrc": "2444:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:17"
																},
																"nativeSrc": "2409:65:17",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:17"
															},
															"nativeSrc": "2409:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:17"
														},
														{
															"nativeSrc": "2483:46:17",
															"nodeType": "YulAssignment",
															"src": "2483:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:17"
																		},
																		"nativeSrc": "2499:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:17"
																},
																"nativeSrc": "2490:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:17",
														"nodeType": "YulTypedName",
														"src": "2231:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:17",
														"nodeType": "YulTypedName",
														"src": "2238:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:17",
														"nodeType": "YulTypedName",
														"src": "2246:3:17",
														"type": ""
													}
												],
												"src": "2158:377:17"
											},
											{
												"body": {
													"nativeSrc": "2659:195:17",
													"nodeType": "YulBlock",
													"src": "2659:195:17",
													"statements": [
														{
															"nativeSrc": "2669:26:17",
															"nodeType": "YulAssignment",
															"src": "2669:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:17"
																},
																"nativeSrc": "2677:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:17"
																		},
																		"nativeSrc": "2712:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nativeSrc": "2731:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:17"
																},
																"nativeSrc": "2705:47:17",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:17"
															},
															"nativeSrc": "2705:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:17"
														},
														{
															"nativeSrc": "2761:86:17",
															"nodeType": "YulAssignment",
															"src": "2761:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:17"
																},
																"nativeSrc": "2769:78:17",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:17",
														"nodeType": "YulTypedName",
														"src": "2631:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:17",
														"nodeType": "YulTypedName",
														"src": "2643:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:17",
														"nodeType": "YulTypedName",
														"src": "2654:4:17",
														"type": ""
													}
												],
												"src": "2541:313:17"
											},
											{
												"body": {
													"nativeSrc": "2905:32:17",
													"nodeType": "YulBlock",
													"src": "2905:32:17",
													"statements": [
														{
															"nativeSrc": "2915:16:17",
															"nodeType": "YulAssignment",
															"src": "2915:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:17",
																"nodeType": "YulIdentifier",
																"src": "2926:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:17",
														"nodeType": "YulTypedName",
														"src": "2887:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:17",
														"nodeType": "YulTypedName",
														"src": "2897:7:17",
														"type": ""
													}
												],
												"src": "2860:77:17"
											},
											{
												"body": {
													"nativeSrc": "2986:79:17",
													"nodeType": "YulBlock",
													"src": "2986:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:17",
																"nodeType": "YulBlock",
																"src": "3043:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:17"
																			},
																			"nativeSrc": "3045:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:17"
																		},
																		"nativeSrc": "3045:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:17"
																				},
																				"nativeSrc": "3016:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:17"
																		},
																		"nativeSrc": "3006:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:17"
																},
																"nativeSrc": "2999:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:17"
															},
															"nativeSrc": "2996:63:17",
															"nodeType": "YulIf",
															"src": "2996:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:17",
														"nodeType": "YulTypedName",
														"src": "2979:5:17",
														"type": ""
													}
												],
												"src": "2943:122:17"
											},
											{
												"body": {
													"nativeSrc": "3123:87:17",
													"nodeType": "YulBlock",
													"src": "3123:87:17",
													"statements": [
														{
															"nativeSrc": "3133:29:17",
															"nodeType": "YulAssignment",
															"src": "3133:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:17"
																},
																"nativeSrc": "3142:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:17"
																},
																"nativeSrc": "3171:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:17"
															},
															"nativeSrc": "3171:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:17",
														"nodeType": "YulTypedName",
														"src": "3101:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:17",
														"nodeType": "YulTypedName",
														"src": "3109:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:17",
														"nodeType": "YulTypedName",
														"src": "3117:5:17",
														"type": ""
													}
												],
												"src": "3071:139:17"
											},
											{
												"body": {
													"nativeSrc": "3282:263:17",
													"nodeType": "YulBlock",
													"src": "3282:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:17",
																"nodeType": "YulBlock",
																"src": "3328:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:17"
																			},
																			"nativeSrc": "3330:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:17"
																		},
																		"nativeSrc": "3330:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:17"
																		},
																		"nativeSrc": "3299:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:17"
																},
																"nativeSrc": "3295:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:17"
															},
															"nativeSrc": "3292:119:17",
															"nodeType": "YulIf",
															"src": "3292:119:17"
														},
														{
															"nativeSrc": "3421:117:17",
															"nodeType": "YulBlock",
															"src": "3421:117:17",
															"statements": [
																{
																	"nativeSrc": "3436:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:17"
																				},
																				"nativeSrc": "3496:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:17"
																		},
																		"nativeSrc": "3475:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:17",
														"nodeType": "YulTypedName",
														"src": "3252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:17",
														"nodeType": "YulTypedName",
														"src": "3263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:17",
														"nodeType": "YulTypedName",
														"src": "3275:6:17",
														"type": ""
													}
												],
												"src": "3216:329:17"
											},
											{
												"body": {
													"nativeSrc": "3596:81:17",
													"nodeType": "YulBlock",
													"src": "3596:81:17",
													"statements": [
														{
															"nativeSrc": "3606:65:17",
															"nodeType": "YulAssignment",
															"src": "3606:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:17",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:17"
																},
																"nativeSrc": "3617:54:17",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:17",
														"nodeType": "YulTypedName",
														"src": "3578:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:17",
														"nodeType": "YulTypedName",
														"src": "3588:7:17",
														"type": ""
													}
												],
												"src": "3551:126:17"
											},
											{
												"body": {
													"nativeSrc": "3728:51:17",
													"nodeType": "YulBlock",
													"src": "3728:51:17",
													"statements": [
														{
															"nativeSrc": "3738:35:17",
															"nodeType": "YulAssignment",
															"src": "3738:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:17"
																},
																"nativeSrc": "3749:24:17",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:17",
														"nodeType": "YulTypedName",
														"src": "3710:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:17",
														"nodeType": "YulTypedName",
														"src": "3720:7:17",
														"type": ""
													}
												],
												"src": "3683:96:17"
											},
											{
												"body": {
													"nativeSrc": "3850:53:17",
													"nodeType": "YulBlock",
													"src": "3850:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:17"
																		},
																		"nativeSrc": "3872:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:17"
																},
																"nativeSrc": "3860:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:17"
															},
															"nativeSrc": "3860:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:17",
														"nodeType": "YulTypedName",
														"src": "3838:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:17",
														"nodeType": "YulTypedName",
														"src": "3845:3:17",
														"type": ""
													}
												],
												"src": "3785:118:17"
											},
											{
												"body": {
													"nativeSrc": "4007:124:17",
													"nodeType": "YulBlock",
													"src": "4007:124:17",
													"statements": [
														{
															"nativeSrc": "4017:26:17",
															"nodeType": "YulAssignment",
															"src": "4017:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:17"
																},
																"nativeSrc": "4025:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:17"
																		},
																		"nativeSrc": "4106:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:17"
																},
																"nativeSrc": "4053:71:17",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:17"
															},
															"nativeSrc": "4053:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:17",
														"nodeType": "YulTypedName",
														"src": "3979:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:17",
														"nodeType": "YulTypedName",
														"src": "3991:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:17",
														"nodeType": "YulTypedName",
														"src": "4002:4:17",
														"type": ""
													}
												],
												"src": "3909:222:17"
											},
											{
												"body": {
													"nativeSrc": "4180:79:17",
													"nodeType": "YulBlock",
													"src": "4180:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:17",
																"nodeType": "YulBlock",
																"src": "4237:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:17"
																			},
																			"nativeSrc": "4239:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:17"
																		},
																		"nativeSrc": "4239:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:17"
																				},
																				"nativeSrc": "4210:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:17"
																		},
																		"nativeSrc": "4200:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:17"
																},
																"nativeSrc": "4193:43:17",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:17"
															},
															"nativeSrc": "4190:63:17",
															"nodeType": "YulIf",
															"src": "4190:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:17",
														"nodeType": "YulTypedName",
														"src": "4173:5:17",
														"type": ""
													}
												],
												"src": "4137:122:17"
											},
											{
												"body": {
													"nativeSrc": "4317:87:17",
													"nodeType": "YulBlock",
													"src": "4317:87:17",
													"statements": [
														{
															"nativeSrc": "4327:29:17",
															"nodeType": "YulAssignment",
															"src": "4327:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:17"
																},
																"nativeSrc": "4336:20:17",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:17"
																},
																"nativeSrc": "4365:33:17",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:17"
															},
															"nativeSrc": "4365:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:17",
														"nodeType": "YulTypedName",
														"src": "4295:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:17",
														"nodeType": "YulTypedName",
														"src": "4303:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:17",
														"nodeType": "YulTypedName",
														"src": "4311:5:17",
														"type": ""
													}
												],
												"src": "4265:139:17"
											},
											{
												"body": {
													"nativeSrc": "4493:391:17",
													"nodeType": "YulBlock",
													"src": "4493:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:17",
																"nodeType": "YulBlock",
																"src": "4539:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:17"
																			},
																			"nativeSrc": "4541:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:17"
																		},
																		"nativeSrc": "4541:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:17"
																		},
																		"nativeSrc": "4510:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:17"
																},
																"nativeSrc": "4506:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:17"
															},
															"nativeSrc": "4503:119:17",
															"nodeType": "YulIf",
															"src": "4503:119:17"
														},
														{
															"nativeSrc": "4632:117:17",
															"nodeType": "YulBlock",
															"src": "4632:117:17",
															"statements": [
																{
																	"nativeSrc": "4647:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:17"
																				},
																				"nativeSrc": "4707:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:17"
																		},
																		"nativeSrc": "4686:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:17",
															"nodeType": "YulBlock",
															"src": "4759:118:17",
															"statements": [
																{
																	"nativeSrc": "4774:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:17"
																				},
																				"nativeSrc": "4835:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:17"
																		},
																		"nativeSrc": "4814:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:17",
														"nodeType": "YulTypedName",
														"src": "4455:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:17",
														"nodeType": "YulTypedName",
														"src": "4466:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:17",
														"nodeType": "YulTypedName",
														"src": "4478:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:17",
														"nodeType": "YulTypedName",
														"src": "4486:6:17",
														"type": ""
													}
												],
												"src": "4410:474:17"
											},
											{
												"body": {
													"nativeSrc": "4990:519:17",
													"nodeType": "YulBlock",
													"src": "4990:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:17",
																"nodeType": "YulBlock",
																"src": "5036:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:17"
																			},
																			"nativeSrc": "5038:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:17"
																		},
																		"nativeSrc": "5038:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:17"
																		},
																		"nativeSrc": "5007:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:17"
																},
																"nativeSrc": "5003:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:17"
															},
															"nativeSrc": "5000:119:17",
															"nodeType": "YulIf",
															"src": "5000:119:17"
														},
														{
															"nativeSrc": "5129:117:17",
															"nodeType": "YulBlock",
															"src": "5129:117:17",
															"statements": [
																{
																	"nativeSrc": "5144:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:17"
																				},
																				"nativeSrc": "5204:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:17"
																		},
																		"nativeSrc": "5183:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:17",
															"nodeType": "YulBlock",
															"src": "5256:118:17",
															"statements": [
																{
																	"nativeSrc": "5271:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:17"
																				},
																				"nativeSrc": "5332:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:17"
																		},
																		"nativeSrc": "5311:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:17",
															"nodeType": "YulBlock",
															"src": "5384:118:17",
															"statements": [
																{
																	"nativeSrc": "5399:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:17"
																				},
																				"nativeSrc": "5460:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:17"
																		},
																		"nativeSrc": "5439:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:17",
														"nodeType": "YulTypedName",
														"src": "4944:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:17",
														"nodeType": "YulTypedName",
														"src": "4955:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:17",
														"nodeType": "YulTypedName",
														"src": "4967:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:17",
														"nodeType": "YulTypedName",
														"src": "4975:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:17",
														"nodeType": "YulTypedName",
														"src": "4983:6:17",
														"type": ""
													}
												],
												"src": "4890:619:17"
											},
											{
												"body": {
													"nativeSrc": "5604:28:17",
													"nodeType": "YulBlock",
													"src": "5604:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5621:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5621:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5624:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5624:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5614:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5614:6:17"
																},
																"nativeSrc": "5614:12:17",
																"nodeType": "YulFunctionCall",
																"src": "5614:12:17"
															},
															"nativeSrc": "5614:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "5614:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5515:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5515:117:17"
											},
											{
												"body": {
													"nativeSrc": "5727:28:17",
													"nodeType": "YulBlock",
													"src": "5727:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5744:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5744:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5747:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5747:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5737:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5737:6:17"
																},
																"nativeSrc": "5737:12:17",
																"nodeType": "YulFunctionCall",
																"src": "5737:12:17"
															},
															"nativeSrc": "5737:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "5737:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5638:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5638:117:17"
											},
											{
												"body": {
													"nativeSrc": "5789:152:17",
													"nodeType": "YulBlock",
													"src": "5789:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5806:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5806:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5809:77:17",
																		"nodeType": "YulLiteral",
																		"src": "5809:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5799:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5799:6:17"
																},
																"nativeSrc": "5799:88:17",
																"nodeType": "YulFunctionCall",
																"src": "5799:88:17"
															},
															"nativeSrc": "5799:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "5799:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5903:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5903:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5906:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5906:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5896:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5896:6:17"
																},
																"nativeSrc": "5896:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5896:15:17"
															},
															"nativeSrc": "5896:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5896:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5927:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5927:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5930:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5930:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5920:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5920:6:17"
																},
																"nativeSrc": "5920:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5920:15:17"
															},
															"nativeSrc": "5920:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5920:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5761:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5761:180:17"
											},
											{
												"body": {
													"nativeSrc": "5990:238:17",
													"nodeType": "YulBlock",
													"src": "5990:238:17",
													"statements": [
														{
															"nativeSrc": "6000:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6000:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6022:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6022:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6052:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "6052:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6030:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "6030:21:17"
																		},
																		"nativeSrc": "6030:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6030:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6018:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6018:3:17"
																},
																"nativeSrc": "6018:40:17",
																"nodeType": "YulFunctionCall",
																"src": "6018:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6004:10:17",
																	"nodeType": "YulTypedName",
																	"src": "6004:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6169:22:17",
																"nodeType": "YulBlock",
																"src": "6169:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6171:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6171:16:17"
																			},
																			"nativeSrc": "6171:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6171:18:17"
																		},
																		"nativeSrc": "6171:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6171:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6112:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6112:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6124:18:17",
																				"nodeType": "YulLiteral",
																				"src": "6124:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6109:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6109:2:17"
																		},
																		"nativeSrc": "6109:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6109:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6148:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "6148:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6160:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6160:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6145:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "6145:2:17"
																		},
																		"nativeSrc": "6145:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6106:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6106:2:17"
																},
																"nativeSrc": "6106:62:17",
																"nodeType": "YulFunctionCall",
																"src": "6106:62:17"
															},
															"nativeSrc": "6103:88:17",
															"nodeType": "YulIf",
															"src": "6103:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6207:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6207:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6211:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "6211:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6200:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6200:6:17"
																},
																"nativeSrc": "6200:22:17",
																"nodeType": "YulFunctionCall",
																"src": "6200:22:17"
															},
															"nativeSrc": "6200:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "6200:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5947:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5976:6:17",
														"nodeType": "YulTypedName",
														"src": "5976:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5984:4:17",
														"nodeType": "YulTypedName",
														"src": "5984:4:17",
														"type": ""
													}
												],
												"src": "5947:281:17"
											},
											{
												"body": {
													"nativeSrc": "6275:88:17",
													"nodeType": "YulBlock",
													"src": "6275:88:17",
													"statements": [
														{
															"nativeSrc": "6285:30:17",
															"nodeType": "YulAssignment",
															"src": "6285:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6295:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "6295:18:17"
																},
																"nativeSrc": "6295:20:17",
																"nodeType": "YulFunctionCall",
																"src": "6295:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6285:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6285:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6344:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6352:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6352:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6324:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "6324:19:17"
																},
																"nativeSrc": "6324:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6324:33:17"
															},
															"nativeSrc": "6324:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6324:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6234:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6259:4:17",
														"nodeType": "YulTypedName",
														"src": "6259:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6268:6:17",
														"nodeType": "YulTypedName",
														"src": "6268:6:17",
														"type": ""
													}
												],
												"src": "6234:129:17"
											},
											{
												"body": {
													"nativeSrc": "6436:241:17",
													"nodeType": "YulBlock",
													"src": "6436:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6541:22:17",
																"nodeType": "YulBlock",
																"src": "6541:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6543:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6543:16:17"
																			},
																			"nativeSrc": "6543:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6543:18:17"
																		},
																		"nativeSrc": "6543:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6543:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6513:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6513:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6521:18:17",
																		"nodeType": "YulLiteral",
																		"src": "6521:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6510:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6510:2:17"
																},
																"nativeSrc": "6510:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6510:30:17"
															},
															"nativeSrc": "6507:56:17",
															"nodeType": "YulIf",
															"src": "6507:56:17"
														},
														{
															"nativeSrc": "6573:37:17",
															"nodeType": "YulAssignment",
															"src": "6573:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6603:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6581:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "6581:21:17"
																},
																"nativeSrc": "6581:29:17",
																"nodeType": "YulFunctionCall",
																"src": "6581:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6573:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6573:4:17"
																}
															]
														},
														{
															"nativeSrc": "6647:23:17",
															"nodeType": "YulAssignment",
															"src": "6647:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6659:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6659:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6665:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6665:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6655:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6655:3:17"
																},
																"nativeSrc": "6655:15:17",
																"nodeType": "YulFunctionCall",
																"src": "6655:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6647:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6647:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6369:308:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6420:6:17",
														"nodeType": "YulTypedName",
														"src": "6420:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6431:4:17",
														"nodeType": "YulTypedName",
														"src": "6431:4:17",
														"type": ""
													}
												],
												"src": "6369:308:17"
											},
											{
												"body": {
													"nativeSrc": "6747:82:17",
													"nodeType": "YulBlock",
													"src": "6747:82:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6770:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6770:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6775:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6775:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6780:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6757:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6757:12:17"
																},
																"nativeSrc": "6757:30:17",
																"nodeType": "YulFunctionCall",
																"src": "6757:30:17"
															},
															"nativeSrc": "6757:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "6757:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6807:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6807:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6812:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6812:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6803:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:17"
																		},
																		"nativeSrc": "6803:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6821:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6821:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6796:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6796:6:17"
																},
																"nativeSrc": "6796:27:17",
																"nodeType": "YulFunctionCall",
																"src": "6796:27:17"
															},
															"nativeSrc": "6796:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "6796:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6683:146:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6729:3:17",
														"nodeType": "YulTypedName",
														"src": "6729:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6734:3:17",
														"nodeType": "YulTypedName",
														"src": "6734:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6739:6:17",
														"nodeType": "YulTypedName",
														"src": "6739:6:17",
														"type": ""
													}
												],
												"src": "6683:146:17"
											},
											{
												"body": {
													"nativeSrc": "6919:341:17",
													"nodeType": "YulBlock",
													"src": "6919:341:17",
													"statements": [
														{
															"nativeSrc": "6929:75:17",
															"nodeType": "YulAssignment",
															"src": "6929:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6996:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6996:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6954:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "6954:41:17"
																		},
																		"nativeSrc": "6954:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6954:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6938:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "6938:15:17"
																},
																"nativeSrc": "6938:66:17",
																"nodeType": "YulFunctionCall",
																"src": "6938:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6929:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "6929:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7020:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7020:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7027:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:17"
																},
																"nativeSrc": "7013:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7013:21:17"
															},
															"nativeSrc": "7013:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "7013:21:17"
														},
														{
															"nativeSrc": "7043:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7043:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7058:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7058:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7065:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7065:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7054:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7054:3:17"
																},
																"nativeSrc": "7054:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7054:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7047:3:17",
																	"nodeType": "YulTypedName",
																	"src": "7047:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7108:83:17",
																"nodeType": "YulBlock",
																"src": "7108:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7110:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7110:77:17"
																			},
																			"nativeSrc": "7110:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:79:17"
																		},
																		"nativeSrc": "7110:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7089:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7089:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7094:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7085:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:17"
																		},
																		"nativeSrc": "7085:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7085:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7103:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7103:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7082:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7082:2:17"
																},
																"nativeSrc": "7082:25:17",
																"nodeType": "YulFunctionCall",
																"src": "7082:25:17"
															},
															"nativeSrc": "7079:112:17",
															"nodeType": "YulIf",
															"src": "7079:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7237:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7237:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7242:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7242:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7247:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7200:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "7200:36:17"
																},
																"nativeSrc": "7200:54:17",
																"nodeType": "YulFunctionCall",
																"src": "7200:54:17"
															},
															"nativeSrc": "7200:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "7200:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6835:425:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6892:3:17",
														"nodeType": "YulTypedName",
														"src": "6892:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6897:6:17",
														"nodeType": "YulTypedName",
														"src": "6897:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6905:3:17",
														"nodeType": "YulTypedName",
														"src": "6905:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6913:5:17",
														"nodeType": "YulTypedName",
														"src": "6913:5:17",
														"type": ""
													}
												],
												"src": "6835:425:17"
											},
											{
												"body": {
													"nativeSrc": "7342:278:17",
													"nodeType": "YulBlock",
													"src": "7342:278:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7391:83:17",
																"nodeType": "YulBlock",
																"src": "7391:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7393:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7393:77:17"
																			},
																			"nativeSrc": "7393:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7393:79:17"
																		},
																		"nativeSrc": "7393:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7393:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7370:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7370:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7378:4:17",
																						"nodeType": "YulLiteral",
																						"src": "7378:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7366:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7366:3:17"
																				},
																				"nativeSrc": "7366:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7366:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7385:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7385:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7362:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7362:3:17"
																		},
																		"nativeSrc": "7362:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7362:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7355:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:17"
																},
																"nativeSrc": "7355:35:17",
																"nodeType": "YulFunctionCall",
																"src": "7355:35:17"
															},
															"nativeSrc": "7352:122:17",
															"nodeType": "YulIf",
															"src": "7352:122:17"
														},
														{
															"nativeSrc": "7483:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7483:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7510:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7510:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7497:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "7497:12:17"
																},
																"nativeSrc": "7497:20:17",
																"nodeType": "YulFunctionCall",
																"src": "7497:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7487:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7487:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7526:88:17",
															"nodeType": "YulAssignment",
															"src": "7526:88:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7587:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7587:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7595:4:17",
																				"nodeType": "YulLiteral",
																				"src": "7595:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7583:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7583:3:17"
																		},
																		"nativeSrc": "7583:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7583:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7602:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7602:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7610:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7610:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7535:47:17",
																	"nodeType": "YulIdentifier",
																	"src": "7535:47:17"
																},
																"nativeSrc": "7535:79:17",
																"nodeType": "YulFunctionCall",
																"src": "7535:79:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7526:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7526:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7280:340:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7320:6:17",
														"nodeType": "YulTypedName",
														"src": "7320:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7328:3:17",
														"nodeType": "YulTypedName",
														"src": "7328:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7336:5:17",
														"nodeType": "YulTypedName",
														"src": "7336:5:17",
														"type": ""
													}
												],
												"src": "7280:340:17"
											},
											{
												"body": {
													"nativeSrc": "7736:689:17",
													"nodeType": "YulBlock",
													"src": "7736:689:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7782:83:17",
																"nodeType": "YulBlock",
																"src": "7782:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7784:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7784:77:17"
																			},
																			"nativeSrc": "7784:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7784:79:17"
																		},
																		"nativeSrc": "7784:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7784:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7757:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7757:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7766:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7753:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7753:3:17"
																		},
																		"nativeSrc": "7753:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7753:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7778:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7778:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7749:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7749:3:17"
																},
																"nativeSrc": "7749:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7749:32:17"
															},
															"nativeSrc": "7746:119:17",
															"nodeType": "YulIf",
															"src": "7746:119:17"
														},
														{
															"nativeSrc": "7875:287:17",
															"nodeType": "YulBlock",
															"src": "7875:287:17",
															"statements": [
																{
																	"nativeSrc": "7890:45:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7890:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7921:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7921:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7932:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7932:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7917:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7917:3:17"
																				},
																				"nativeSrc": "7917:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7917:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7904:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "7904:12:17"
																		},
																		"nativeSrc": "7904:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7904:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7894:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7894:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7982:83:17",
																		"nodeType": "YulBlock",
																		"src": "7982:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7984:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "7984:77:17"
																					},
																					"nativeSrc": "7984:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:79:17"
																				},
																				"nativeSrc": "7984:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "7984:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7954:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7954:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7962:18:17",
																				"nodeType": "YulLiteral",
																				"src": "7962:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7951:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7951:2:17"
																		},
																		"nativeSrc": "7951:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:30:17"
																	},
																	"nativeSrc": "7948:117:17",
																	"nodeType": "YulIf",
																	"src": "7948:117:17"
																},
																{
																	"nativeSrc": "8079:73:17",
																	"nodeType": "YulAssignment",
																	"src": "8079:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8124:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8124:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8135:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8135:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8120:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8120:3:17"
																				},
																				"nativeSrc": "8120:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8120:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8144:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8144:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8089:30:17",
																			"nodeType": "YulIdentifier",
																			"src": "8089:30:17"
																		},
																		"nativeSrc": "8089:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8089:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8079:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8079:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8172:118:17",
															"nodeType": "YulBlock",
															"src": "8172:118:17",
															"statements": [
																{
																	"nativeSrc": "8187:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8187:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8201:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8201:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8191:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8191:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8217:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8217:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8252:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8252:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8263:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8263:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8248:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8248:3:17"
																				},
																				"nativeSrc": "8248:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8248:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8272:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8272:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8227:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8227:20:17"
																		},
																		"nativeSrc": "8227:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8217:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8217:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8300:118:17",
															"nodeType": "YulBlock",
															"src": "8300:118:17",
															"statements": [
																{
																	"nativeSrc": "8315:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8315:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8329:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8329:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8319:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8319:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8345:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8345:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8380:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8380:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8391:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8391:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8376:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8376:3:17"
																				},
																				"nativeSrc": "8376:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8376:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8400:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8400:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8355:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8355:20:17"
																		},
																		"nativeSrc": "8355:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8355:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8345:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8345:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256",
												"nativeSrc": "7626:799:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7690:9:17",
														"nodeType": "YulTypedName",
														"src": "7690:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7701:7:17",
														"nodeType": "YulTypedName",
														"src": "7701:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7713:6:17",
														"nodeType": "YulTypedName",
														"src": "7713:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7721:6:17",
														"nodeType": "YulTypedName",
														"src": "7721:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7729:6:17",
														"nodeType": "YulTypedName",
														"src": "7729:6:17",
														"type": ""
													}
												],
												"src": "7626:799:17"
											},
											{
												"body": {
													"nativeSrc": "8497:263:17",
													"nodeType": "YulBlock",
													"src": "8497:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8543:83:17",
																"nodeType": "YulBlock",
																"src": "8543:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8545:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "8545:77:17"
																			},
																			"nativeSrc": "8545:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8545:79:17"
																		},
																		"nativeSrc": "8545:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8545:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8518:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8518:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8527:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8514:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8514:3:17"
																		},
																		"nativeSrc": "8514:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8514:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8539:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8539:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8510:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8510:3:17"
																},
																"nativeSrc": "8510:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8510:32:17"
															},
															"nativeSrc": "8507:119:17",
															"nodeType": "YulIf",
															"src": "8507:119:17"
														},
														{
															"nativeSrc": "8636:117:17",
															"nodeType": "YulBlock",
															"src": "8636:117:17",
															"statements": [
																{
																	"nativeSrc": "8651:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8651:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8665:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8665:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8655:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8655:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8680:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8680:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8715:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8715:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8726:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8726:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8711:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8711:3:17"
																				},
																				"nativeSrc": "8711:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8711:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8735:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8735:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8690:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8690:20:17"
																		},
																		"nativeSrc": "8690:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8690:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8680:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8680:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8431:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8467:9:17",
														"nodeType": "YulTypedName",
														"src": "8467:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8478:7:17",
														"nodeType": "YulTypedName",
														"src": "8478:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8490:6:17",
														"nodeType": "YulTypedName",
														"src": "8490:6:17",
														"type": ""
													}
												],
												"src": "8431:329:17"
											},
											{
												"body": {
													"nativeSrc": "8831:53:17",
													"nodeType": "YulBlock",
													"src": "8831:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8848:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8848:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8871:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "8871:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8853:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "8853:17:17"
																		},
																		"nativeSrc": "8853:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8853:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8841:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:17"
																},
																"nativeSrc": "8841:37:17",
																"nodeType": "YulFunctionCall",
																"src": "8841:37:17"
															},
															"nativeSrc": "8841:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "8841:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8766:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8819:5:17",
														"nodeType": "YulTypedName",
														"src": "8819:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8826:3:17",
														"nodeType": "YulTypedName",
														"src": "8826:3:17",
														"type": ""
													}
												],
												"src": "8766:118:17"
											},
											{
												"body": {
													"nativeSrc": "8988:124:17",
													"nodeType": "YulBlock",
													"src": "8988:124:17",
													"statements": [
														{
															"nativeSrc": "8998:26:17",
															"nodeType": "YulAssignment",
															"src": "8998:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9010:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9010:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9021:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9021:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9006:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:17"
																},
																"nativeSrc": "9006:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9006:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8998:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8998:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9078:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9078:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9091:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9091:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9102:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9102:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9087:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9087:3:17"
																		},
																		"nativeSrc": "9087:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9087:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9034:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9034:43:17"
																},
																"nativeSrc": "9034:71:17",
																"nodeType": "YulFunctionCall",
																"src": "9034:71:17"
															},
															"nativeSrc": "9034:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "9034:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8890:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8960:9:17",
														"nodeType": "YulTypedName",
														"src": "8960:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8972:6:17",
														"nodeType": "YulTypedName",
														"src": "8972:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8983:4:17",
														"nodeType": "YulTypedName",
														"src": "8983:4:17",
														"type": ""
													}
												],
												"src": "8890:222:17"
											},
											{
												"body": {
													"nativeSrc": "9158:76:17",
													"nodeType": "YulBlock",
													"src": "9158:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9212:16:17",
																"nodeType": "YulBlock",
																"src": "9212:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9221:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9221:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9224:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9224:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9214:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9214:6:17"
																			},
																			"nativeSrc": "9214:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9214:12:17"
																		},
																		"nativeSrc": "9214:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9214:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9181:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9181:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9203:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "9203:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9188:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "9188:14:17"
																				},
																				"nativeSrc": "9188:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9188:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9178:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9178:2:17"
																		},
																		"nativeSrc": "9178:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9178:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9171:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:17"
																},
																"nativeSrc": "9171:40:17",
																"nodeType": "YulFunctionCall",
																"src": "9171:40:17"
															},
															"nativeSrc": "9168:60:17",
															"nodeType": "YulIf",
															"src": "9168:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9118:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9151:5:17",
														"nodeType": "YulTypedName",
														"src": "9151:5:17",
														"type": ""
													}
												],
												"src": "9118:116:17"
											},
											{
												"body": {
													"nativeSrc": "9289:84:17",
													"nodeType": "YulBlock",
													"src": "9289:84:17",
													"statements": [
														{
															"nativeSrc": "9299:29:17",
															"nodeType": "YulAssignment",
															"src": "9299:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9321:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9321:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9308:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9308:12:17"
																},
																"nativeSrc": "9308:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9308:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9299:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9299:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9361:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9361:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9337:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "9337:23:17"
																},
																"nativeSrc": "9337:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9337:30:17"
															},
															"nativeSrc": "9337:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9337:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9240:133:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9267:6:17",
														"nodeType": "YulTypedName",
														"src": "9267:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9275:3:17",
														"nodeType": "YulTypedName",
														"src": "9275:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9283:5:17",
														"nodeType": "YulTypedName",
														"src": "9283:5:17",
														"type": ""
													}
												],
												"src": "9240:133:17"
											},
											{
												"body": {
													"nativeSrc": "9459:388:17",
													"nodeType": "YulBlock",
													"src": "9459:388:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9505:83:17",
																"nodeType": "YulBlock",
																"src": "9505:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9507:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9507:77:17"
																			},
																			"nativeSrc": "9507:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9507:79:17"
																		},
																		"nativeSrc": "9507:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9507:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9480:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9480:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9489:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9489:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9476:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:17"
																		},
																		"nativeSrc": "9476:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9476:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9501:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9501:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9472:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9472:3:17"
																},
																"nativeSrc": "9472:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9472:32:17"
															},
															"nativeSrc": "9469:119:17",
															"nodeType": "YulIf",
															"src": "9469:119:17"
														},
														{
															"nativeSrc": "9598:117:17",
															"nodeType": "YulBlock",
															"src": "9598:117:17",
															"statements": [
																{
																	"nativeSrc": "9613:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9613:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9627:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9617:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9617:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9642:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9642:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9677:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9677:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9688:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9688:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9673:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9673:3:17"
																				},
																				"nativeSrc": "9673:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9673:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9697:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9697:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9652:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9652:20:17"
																		},
																		"nativeSrc": "9652:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9652:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9642:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9642:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9725:115:17",
															"nodeType": "YulBlock",
															"src": "9725:115:17",
															"statements": [
																{
																	"nativeSrc": "9740:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9740:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9754:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9754:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9744:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9744:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9770:60:17",
																	"nodeType": "YulAssignment",
																	"src": "9770:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9802:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9802:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9813:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9813:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9798:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9798:3:17"
																				},
																				"nativeSrc": "9798:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9798:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9822:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9822:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9780:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9780:17:17"
																		},
																		"nativeSrc": "9780:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9780:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9770:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9770:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9379:468:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9421:9:17",
														"nodeType": "YulTypedName",
														"src": "9421:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9432:7:17",
														"nodeType": "YulTypedName",
														"src": "9432:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9444:6:17",
														"nodeType": "YulTypedName",
														"src": "9444:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9452:6:17",
														"nodeType": "YulTypedName",
														"src": "9452:6:17",
														"type": ""
													}
												],
												"src": "9379:468:17"
											},
											{
												"body": {
													"nativeSrc": "9919:241:17",
													"nodeType": "YulBlock",
													"src": "9919:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10024:22:17",
																"nodeType": "YulBlock",
																"src": "10024:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10026:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:17"
																			},
																			"nativeSrc": "10026:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:17"
																		},
																		"nativeSrc": "10026:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9996:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9996:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10004:18:17",
																		"nodeType": "YulLiteral",
																		"src": "10004:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9993:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9993:2:17"
																},
																"nativeSrc": "9993:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9993:30:17"
															},
															"nativeSrc": "9990:56:17",
															"nodeType": "YulIf",
															"src": "9990:56:17"
														},
														{
															"nativeSrc": "10056:37:17",
															"nodeType": "YulAssignment",
															"src": "10056:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10086:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10086:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10064:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "10064:21:17"
																},
																"nativeSrc": "10064:29:17",
																"nodeType": "YulFunctionCall",
																"src": "10064:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10056:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10056:4:17"
																}
															]
														},
														{
															"nativeSrc": "10130:23:17",
															"nodeType": "YulAssignment",
															"src": "10130:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10142:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "10142:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10148:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10148:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10138:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10138:3:17"
																},
																"nativeSrc": "10138:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10138:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10130:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10130:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9853:307:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9903:6:17",
														"nodeType": "YulTypedName",
														"src": "9903:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9914:4:17",
														"nodeType": "YulTypedName",
														"src": "9914:4:17",
														"type": ""
													}
												],
												"src": "9853:307:17"
											},
											{
												"body": {
													"nativeSrc": "10249:340:17",
													"nodeType": "YulBlock",
													"src": "10249:340:17",
													"statements": [
														{
															"nativeSrc": "10259:74:17",
															"nodeType": "YulAssignment",
															"src": "10259:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10325:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10325:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10284:40:17",
																			"nodeType": "YulIdentifier",
																			"src": "10284:40:17"
																		},
																		"nativeSrc": "10284:48:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10284:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10268:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "10268:15:17"
																},
																"nativeSrc": "10268:65:17",
																"nodeType": "YulFunctionCall",
																"src": "10268:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10259:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10259:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10349:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10349:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10356:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10356:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10342:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10342:6:17"
																},
																"nativeSrc": "10342:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10342:21:17"
															},
															"nativeSrc": "10342:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10342:21:17"
														},
														{
															"nativeSrc": "10372:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10372:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10387:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10387:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10394:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10394:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10383:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:17"
																},
																"nativeSrc": "10383:16:17",
																"nodeType": "YulFunctionCall",
																"src": "10383:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10376:3:17",
																	"nodeType": "YulTypedName",
																	"src": "10376:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10437:83:17",
																"nodeType": "YulBlock",
																"src": "10437:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10439:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10439:77:17"
																			},
																			"nativeSrc": "10439:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10439:79:17"
																		},
																		"nativeSrc": "10439:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10439:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10418:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10418:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10423:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10423:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10414:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10414:3:17"
																		},
																		"nativeSrc": "10414:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10414:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10432:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10432:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10411:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10411:2:17"
																},
																"nativeSrc": "10411:25:17",
																"nodeType": "YulFunctionCall",
																"src": "10411:25:17"
															},
															"nativeSrc": "10408:112:17",
															"nodeType": "YulIf",
															"src": "10408:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10566:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10566:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10571:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10571:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10576:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10576:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10529:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "10529:36:17"
																},
																"nativeSrc": "10529:54:17",
																"nodeType": "YulFunctionCall",
																"src": "10529:54:17"
															},
															"nativeSrc": "10529:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "10529:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10166:423:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10222:3:17",
														"nodeType": "YulTypedName",
														"src": "10222:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10227:6:17",
														"nodeType": "YulTypedName",
														"src": "10227:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10235:3:17",
														"nodeType": "YulTypedName",
														"src": "10235:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10243:5:17",
														"nodeType": "YulTypedName",
														"src": "10243:5:17",
														"type": ""
													}
												],
												"src": "10166:423:17"
											},
											{
												"body": {
													"nativeSrc": "10669:277:17",
													"nodeType": "YulBlock",
													"src": "10669:277:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10718:83:17",
																"nodeType": "YulBlock",
																"src": "10718:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10720:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10720:77:17"
																			},
																			"nativeSrc": "10720:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10720:79:17"
																		},
																		"nativeSrc": "10720:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10720:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10697:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10697:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10705:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10705:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10693:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10693:3:17"
																				},
																				"nativeSrc": "10693:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10693:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10712:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10712:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10689:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:17"
																		},
																		"nativeSrc": "10689:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10689:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10682:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:17"
																},
																"nativeSrc": "10682:35:17",
																"nodeType": "YulFunctionCall",
																"src": "10682:35:17"
															},
															"nativeSrc": "10679:122:17",
															"nodeType": "YulIf",
															"src": "10679:122:17"
														},
														{
															"nativeSrc": "10810:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10810:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10837:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10837:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10824:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "10824:12:17"
																},
																"nativeSrc": "10824:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10824:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10814:6:17",
																	"nodeType": "YulTypedName",
																	"src": "10814:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10853:87:17",
															"nodeType": "YulAssignment",
															"src": "10853:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10913:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10913:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10921:4:17",
																				"nodeType": "YulLiteral",
																				"src": "10921:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10909:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10909:3:17"
																		},
																		"nativeSrc": "10909:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10909:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10928:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10936:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10936:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10862:46:17",
																	"nodeType": "YulIdentifier",
																	"src": "10862:46:17"
																},
																"nativeSrc": "10862:78:17",
																"nodeType": "YulFunctionCall",
																"src": "10862:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10853:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10853:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10608:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10647:6:17",
														"nodeType": "YulTypedName",
														"src": "10647:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10655:3:17",
														"nodeType": "YulTypedName",
														"src": "10655:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10663:5:17",
														"nodeType": "YulTypedName",
														"src": "10663:5:17",
														"type": ""
													}
												],
												"src": "10608:338:17"
											},
											{
												"body": {
													"nativeSrc": "11078:817:17",
													"nodeType": "YulBlock",
													"src": "11078:817:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11125:83:17",
																"nodeType": "YulBlock",
																"src": "11125:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11127:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11127:77:17"
																			},
																			"nativeSrc": "11127:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11127:79:17"
																		},
																		"nativeSrc": "11127:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11127:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11099:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11099:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11108:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11108:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11095:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11095:3:17"
																		},
																		"nativeSrc": "11095:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11095:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11120:3:17",
																		"nodeType": "YulLiteral",
																		"src": "11120:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11091:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11091:3:17"
																},
																"nativeSrc": "11091:33:17",
																"nodeType": "YulFunctionCall",
																"src": "11091:33:17"
															},
															"nativeSrc": "11088:120:17",
															"nodeType": "YulIf",
															"src": "11088:120:17"
														},
														{
															"nativeSrc": "11218:117:17",
															"nodeType": "YulBlock",
															"src": "11218:117:17",
															"statements": [
																{
																	"nativeSrc": "11233:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11233:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11247:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11247:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11237:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11237:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11262:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11262:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11297:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11297:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11308:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11308:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11293:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11293:3:17"
																				},
																				"nativeSrc": "11293:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11293:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11317:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11317:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11272:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11272:20:17"
																		},
																		"nativeSrc": "11272:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11272:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11262:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11262:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11345:118:17",
															"nodeType": "YulBlock",
															"src": "11345:118:17",
															"statements": [
																{
																	"nativeSrc": "11360:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11360:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11374:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11374:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11364:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11364:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11390:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11390:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11425:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11425:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11436:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11436:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11421:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11421:3:17"
																				},
																				"nativeSrc": "11421:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11421:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11445:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11445:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11400:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11400:20:17"
																		},
																		"nativeSrc": "11400:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11400:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11390:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11390:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11473:118:17",
															"nodeType": "YulBlock",
															"src": "11473:118:17",
															"statements": [
																{
																	"nativeSrc": "11488:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11488:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11502:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11502:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11492:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11492:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11518:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11518:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11553:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11553:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11564:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11564:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11549:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11549:3:17"
																				},
																				"nativeSrc": "11549:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11549:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11573:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11573:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11528:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11528:20:17"
																		},
																		"nativeSrc": "11528:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11528:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11518:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11518:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11601:287:17",
															"nodeType": "YulBlock",
															"src": "11601:287:17",
															"statements": [
																{
																	"nativeSrc": "11616:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11616:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11647:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11647:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11658:2:17",
																						"nodeType": "YulLiteral",
																						"src": "11658:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11643:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11643:3:17"
																				},
																				"nativeSrc": "11643:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11643:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11630:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "11630:12:17"
																		},
																		"nativeSrc": "11630:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11630:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11620:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11620:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11709:83:17",
																		"nodeType": "YulBlock",
																		"src": "11709:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11711:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "11711:77:17"
																					},
																					"nativeSrc": "11711:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11711:79:17"
																				},
																				"nativeSrc": "11711:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "11711:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11681:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11681:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11689:18:17",
																				"nodeType": "YulLiteral",
																				"src": "11689:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11678:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11678:2:17"
																		},
																		"nativeSrc": "11678:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11678:30:17"
																	},
																	"nativeSrc": "11675:117:17",
																	"nodeType": "YulIf",
																	"src": "11675:117:17"
																},
																{
																	"nativeSrc": "11806:72:17",
																	"nodeType": "YulAssignment",
																	"src": "11806:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11850:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11850:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11861:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11861:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11846:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11846:3:17"
																				},
																				"nativeSrc": "11846:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11846:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11870:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11870:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11816:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "11816:29:17"
																		},
																		"nativeSrc": "11816:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11816:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11806:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11806:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10952:943:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11024:9:17",
														"nodeType": "YulTypedName",
														"src": "11024:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11035:7:17",
														"nodeType": "YulTypedName",
														"src": "11035:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11047:6:17",
														"nodeType": "YulTypedName",
														"src": "11047:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11055:6:17",
														"nodeType": "YulTypedName",
														"src": "11055:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11063:6:17",
														"nodeType": "YulTypedName",
														"src": "11063:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11071:6:17",
														"nodeType": "YulTypedName",
														"src": "11071:6:17",
														"type": ""
													}
												],
												"src": "10952:943:17"
											},
											{
												"body": {
													"nativeSrc": "12075:359:17",
													"nodeType": "YulBlock",
													"src": "12075:359:17",
													"statements": [
														{
															"nativeSrc": "12085:26:17",
															"nodeType": "YulAssignment",
															"src": "12085:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12097:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12097:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12108:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12108:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12093:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:17"
																},
																"nativeSrc": "12093:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12093:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12085:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12085:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12132:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12132:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12143:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12143:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12128:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:17"
																		},
																		"nativeSrc": "12128:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12151:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "12151:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12147:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12147:3:17"
																		},
																		"nativeSrc": "12147:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12147:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12121:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12121:6:17"
																},
																"nativeSrc": "12121:47:17",
																"nodeType": "YulFunctionCall",
																"src": "12121:47:17"
															},
															"nativeSrc": "12121:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "12121:47:17"
														},
														{
															"nativeSrc": "12177:86:17",
															"nodeType": "YulAssignment",
															"src": "12177:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12249:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12249:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12258:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "12258:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12185:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "12185:63:17"
																},
																"nativeSrc": "12185:78:17",
																"nodeType": "YulFunctionCall",
																"src": "12185:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12177:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12177:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12317:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12317:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12330:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12330:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12341:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12341:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12326:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12326:3:17"
																		},
																		"nativeSrc": "12326:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12326:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12273:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "12273:43:17"
																},
																"nativeSrc": "12273:72:17",
																"nodeType": "YulFunctionCall",
																"src": "12273:72:17"
															},
															"nativeSrc": "12273:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "12273:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12399:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12399:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12412:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12412:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12423:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12423:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12408:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12408:3:17"
																		},
																		"nativeSrc": "12408:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12408:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12355:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "12355:43:17"
																},
																"nativeSrc": "12355:72:17",
																"nodeType": "YulFunctionCall",
																"src": "12355:72:17"
															},
															"nativeSrc": "12355:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "12355:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11901:533:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12031:9:17",
														"nodeType": "YulTypedName",
														"src": "12031:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12043:6:17",
														"nodeType": "YulTypedName",
														"src": "12043:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12051:6:17",
														"nodeType": "YulTypedName",
														"src": "12051:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12059:6:17",
														"nodeType": "YulTypedName",
														"src": "12059:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12070:4:17",
														"nodeType": "YulTypedName",
														"src": "12070:4:17",
														"type": ""
													}
												],
												"src": "11901:533:17"
											},
											{
												"body": {
													"nativeSrc": "12523:391:17",
													"nodeType": "YulBlock",
													"src": "12523:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12569:83:17",
																"nodeType": "YulBlock",
																"src": "12569:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12571:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "12571:77:17"
																			},
																			"nativeSrc": "12571:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12571:79:17"
																		},
																		"nativeSrc": "12571:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12571:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12544:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12544:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12553:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12553:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12540:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12540:3:17"
																		},
																		"nativeSrc": "12540:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12540:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12565:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12565:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12536:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12536:3:17"
																},
																"nativeSrc": "12536:32:17",
																"nodeType": "YulFunctionCall",
																"src": "12536:32:17"
															},
															"nativeSrc": "12533:119:17",
															"nodeType": "YulIf",
															"src": "12533:119:17"
														},
														{
															"nativeSrc": "12662:117:17",
															"nodeType": "YulBlock",
															"src": "12662:117:17",
															"statements": [
																{
																	"nativeSrc": "12677:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12677:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12691:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12691:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12681:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12681:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12706:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12706:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12741:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12741:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12752:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12752:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12737:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12737:3:17"
																				},
																				"nativeSrc": "12737:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12737:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12761:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12761:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12716:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12716:20:17"
																		},
																		"nativeSrc": "12716:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12716:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12706:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12706:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12789:118:17",
															"nodeType": "YulBlock",
															"src": "12789:118:17",
															"statements": [
																{
																	"nativeSrc": "12804:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12804:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12818:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12818:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12808:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12808:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12834:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12834:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12869:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12869:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12880:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12880:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12865:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12865:3:17"
																				},
																				"nativeSrc": "12865:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12865:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12889:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12889:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12844:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12844:20:17"
																		},
																		"nativeSrc": "12844:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12844:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12834:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12834:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12440:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12485:9:17",
														"nodeType": "YulTypedName",
														"src": "12485:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12496:7:17",
														"nodeType": "YulTypedName",
														"src": "12496:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12508:6:17",
														"nodeType": "YulTypedName",
														"src": "12508:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12516:6:17",
														"nodeType": "YulTypedName",
														"src": "12516:6:17",
														"type": ""
													}
												],
												"src": "12440:474:17"
											},
											{
												"body": {
													"nativeSrc": "12948:152:17",
													"nodeType": "YulBlock",
													"src": "12948:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12965:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12965:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12968:77:17",
																		"nodeType": "YulLiteral",
																		"src": "12968:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12958:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12958:6:17"
																},
																"nativeSrc": "12958:88:17",
																"nodeType": "YulFunctionCall",
																"src": "12958:88:17"
															},
															"nativeSrc": "12958:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "12958:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13062:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13062:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13065:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13065:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13055:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13055:6:17"
																},
																"nativeSrc": "13055:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13055:15:17"
															},
															"nativeSrc": "13055:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13055:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13086:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13086:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13089:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13089:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13079:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13079:6:17"
																},
																"nativeSrc": "13079:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13079:15:17"
															},
															"nativeSrc": "13079:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13079:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12920:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "12920:180:17"
											},
											{
												"body": {
													"nativeSrc": "13157:269:17",
													"nodeType": "YulBlock",
													"src": "13157:269:17",
													"statements": [
														{
															"nativeSrc": "13167:22:17",
															"nodeType": "YulAssignment",
															"src": "13167:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13181:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13181:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13187:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13187:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13177:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:17"
																},
																"nativeSrc": "13177:12:17",
																"nodeType": "YulFunctionCall",
																"src": "13177:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13167:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:17"
																}
															]
														},
														{
															"nativeSrc": "13198:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13198:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13228:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13228:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13234:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13234:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13224:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13224:3:17"
																},
																"nativeSrc": "13224:12:17",
																"nodeType": "YulFunctionCall",
																"src": "13224:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13202:18:17",
																	"nodeType": "YulTypedName",
																	"src": "13202:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13275:51:17",
																"nodeType": "YulBlock",
																"src": "13275:51:17",
																"statements": [
																	{
																		"nativeSrc": "13289:27:17",
																		"nodeType": "YulAssignment",
																		"src": "13289:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13303:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "13303:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13311:4:17",
																					"nodeType": "YulLiteral",
																					"src": "13311:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13299:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13299:3:17"
																			},
																			"nativeSrc": "13299:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13299:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13289:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13289:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13255:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "13255:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13248:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13248:6:17"
																},
																"nativeSrc": "13248:26:17",
																"nodeType": "YulFunctionCall",
																"src": "13248:26:17"
															},
															"nativeSrc": "13245:81:17",
															"nodeType": "YulIf",
															"src": "13245:81:17"
														},
														{
															"body": {
																"nativeSrc": "13378:42:17",
																"nodeType": "YulBlock",
																"src": "13378:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13392:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "13392:16:17"
																			},
																			"nativeSrc": "13392:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13392:18:17"
																		},
																		"nativeSrc": "13392:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13392:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13342:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "13342:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13365:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13365:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13373:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13373:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13362:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "13362:2:17"
																		},
																		"nativeSrc": "13362:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13362:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13339:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13339:2:17"
																},
																"nativeSrc": "13339:38:17",
																"nodeType": "YulFunctionCall",
																"src": "13339:38:17"
															},
															"nativeSrc": "13336:84:17",
															"nodeType": "YulIf",
															"src": "13336:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13106:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13141:4:17",
														"nodeType": "YulTypedName",
														"src": "13141:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13150:6:17",
														"nodeType": "YulTypedName",
														"src": "13150:6:17",
														"type": ""
													}
												],
												"src": "13106:320:17"
											},
											{
												"body": {
													"nativeSrc": "13586:288:17",
													"nodeType": "YulBlock",
													"src": "13586:288:17",
													"statements": [
														{
															"nativeSrc": "13596:26:17",
															"nodeType": "YulAssignment",
															"src": "13596:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13608:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13608:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13619:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13619:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13604:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13604:3:17"
																},
																"nativeSrc": "13604:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13604:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13596:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13596:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13676:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13676:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13689:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13689:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13700:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13700:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13685:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13685:3:17"
																		},
																		"nativeSrc": "13685:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13685:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13632:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "13632:43:17"
																},
																"nativeSrc": "13632:71:17",
																"nodeType": "YulFunctionCall",
																"src": "13632:71:17"
															},
															"nativeSrc": "13632:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "13632:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13757:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13757:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13770:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13770:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13781:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13781:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13766:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13766:3:17"
																		},
																		"nativeSrc": "13766:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13766:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13713:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "13713:43:17"
																},
																"nativeSrc": "13713:72:17",
																"nodeType": "YulFunctionCall",
																"src": "13713:72:17"
															},
															"nativeSrc": "13713:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "13713:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13839:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13839:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13852:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13852:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13863:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13863:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13848:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13848:3:17"
																		},
																		"nativeSrc": "13848:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13848:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13795:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "13795:43:17"
																},
																"nativeSrc": "13795:72:17",
																"nodeType": "YulFunctionCall",
																"src": "13795:72:17"
															},
															"nativeSrc": "13795:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "13795:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13432:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13542:9:17",
														"nodeType": "YulTypedName",
														"src": "13542:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13554:6:17",
														"nodeType": "YulTypedName",
														"src": "13554:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13562:6:17",
														"nodeType": "YulTypedName",
														"src": "13562:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13570:6:17",
														"nodeType": "YulTypedName",
														"src": "13570:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13581:4:17",
														"nodeType": "YulTypedName",
														"src": "13581:4:17",
														"type": ""
													}
												],
												"src": "13432:442:17"
											},
											{
												"body": {
													"nativeSrc": "13934:87:17",
													"nodeType": "YulBlock",
													"src": "13934:87:17",
													"statements": [
														{
															"nativeSrc": "13944:11:17",
															"nodeType": "YulAssignment",
															"src": "13944:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "13952:3:17",
																"nodeType": "YulIdentifier",
																"src": "13952:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13944:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13944:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13972:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13972:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13975:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13975:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13965:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13965:6:17"
																},
																"nativeSrc": "13965:14:17",
																"nodeType": "YulFunctionCall",
																"src": "13965:14:17"
															},
															"nativeSrc": "13965:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "13965:14:17"
														},
														{
															"nativeSrc": "13988:26:17",
															"nodeType": "YulAssignment",
															"src": "13988:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14006:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14006:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14009:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14009:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13996:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "13996:9:17"
																},
																"nativeSrc": "13996:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13996:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13988:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13988:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13880:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13921:3:17",
														"nodeType": "YulTypedName",
														"src": "13921:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13929:4:17",
														"nodeType": "YulTypedName",
														"src": "13929:4:17",
														"type": ""
													}
												],
												"src": "13880:141:17"
											},
											{
												"body": {
													"nativeSrc": "14071:49:17",
													"nodeType": "YulBlock",
													"src": "14071:49:17",
													"statements": [
														{
															"nativeSrc": "14081:33:17",
															"nodeType": "YulAssignment",
															"src": "14081:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14099:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14099:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14106:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14106:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14095:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14095:3:17"
																		},
																		"nativeSrc": "14095:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14095:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14111:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14111:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14091:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14091:3:17"
																},
																"nativeSrc": "14091:23:17",
																"nodeType": "YulFunctionCall",
																"src": "14091:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14081:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14081:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14027:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14054:5:17",
														"nodeType": "YulTypedName",
														"src": "14054:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14064:6:17",
														"nodeType": "YulTypedName",
														"src": "14064:6:17",
														"type": ""
													}
												],
												"src": "14027:93:17"
											},
											{
												"body": {
													"nativeSrc": "14179:54:17",
													"nodeType": "YulBlock",
													"src": "14179:54:17",
													"statements": [
														{
															"nativeSrc": "14189:37:17",
															"nodeType": "YulAssignment",
															"src": "14189:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14214:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14214:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14220:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14220:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14210:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14210:3:17"
																},
																"nativeSrc": "14210:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14210:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14189:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "14189:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14126:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14154:4:17",
														"nodeType": "YulTypedName",
														"src": "14154:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14160:5:17",
														"nodeType": "YulTypedName",
														"src": "14160:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14170:8:17",
														"nodeType": "YulTypedName",
														"src": "14170:8:17",
														"type": ""
													}
												],
												"src": "14126:107:17"
											},
											{
												"body": {
													"nativeSrc": "14315:317:17",
													"nodeType": "YulBlock",
													"src": "14315:317:17",
													"statements": [
														{
															"nativeSrc": "14325:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14325:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14346:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "14346:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14358:1:17",
																		"nodeType": "YulLiteral",
																		"src": "14358:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14342:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14342:3:17"
																},
																"nativeSrc": "14342:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14342:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14329:9:17",
																	"nodeType": "YulTypedName",
																	"src": "14329:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14369:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14369:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14400:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14400:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14411:66:17",
																		"nodeType": "YulLiteral",
																		"src": "14411:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14381:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "14381:18:17"
																},
																"nativeSrc": "14381:97:17",
																"nodeType": "YulFunctionCall",
																"src": "14381:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14373:4:17",
																	"nodeType": "YulTypedName",
																	"src": "14373:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14487:51:17",
															"nodeType": "YulAssignment",
															"src": "14487:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14518:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14518:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14529:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "14529:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14499:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "14499:18:17"
																},
																"nativeSrc": "14499:39:17",
																"nodeType": "YulFunctionCall",
																"src": "14499:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14487:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "14487:8:17"
																}
															]
														},
														{
															"nativeSrc": "14547:30:17",
															"nodeType": "YulAssignment",
															"src": "14547:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14560:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14560:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14571:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "14571:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14567:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14567:3:17"
																		},
																		"nativeSrc": "14567:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14567:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14556:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14556:3:17"
																},
																"nativeSrc": "14556:21:17",
																"nodeType": "YulFunctionCall",
																"src": "14556:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14547:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14547:5:17"
																}
															]
														},
														{
															"nativeSrc": "14586:40:17",
															"nodeType": "YulAssignment",
															"src": "14586:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14599:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14599:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14610:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "14610:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14620:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "14620:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14606:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14606:3:17"
																		},
																		"nativeSrc": "14606:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14606:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14596:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14596:2:17"
																},
																"nativeSrc": "14596:30:17",
																"nodeType": "YulFunctionCall",
																"src": "14596:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14586:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14239:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14276:5:17",
														"nodeType": "YulTypedName",
														"src": "14276:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14283:10:17",
														"nodeType": "YulTypedName",
														"src": "14283:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14295:8:17",
														"nodeType": "YulTypedName",
														"src": "14295:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14308:6:17",
														"nodeType": "YulTypedName",
														"src": "14308:6:17",
														"type": ""
													}
												],
												"src": "14239:393:17"
											},
											{
												"body": {
													"nativeSrc": "14670:28:17",
													"nodeType": "YulBlock",
													"src": "14670:28:17",
													"statements": [
														{
															"nativeSrc": "14680:12:17",
															"nodeType": "YulAssignment",
															"src": "14680:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "14687:5:17",
																"nodeType": "YulIdentifier",
																"src": "14687:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14680:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14680:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14638:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14656:5:17",
														"nodeType": "YulTypedName",
														"src": "14656:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14666:3:17",
														"nodeType": "YulTypedName",
														"src": "14666:3:17",
														"type": ""
													}
												],
												"src": "14638:60:17"
											},
											{
												"body": {
													"nativeSrc": "14764:82:17",
													"nodeType": "YulBlock",
													"src": "14764:82:17",
													"statements": [
														{
															"nativeSrc": "14774:66:17",
															"nodeType": "YulAssignment",
															"src": "14774:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14832:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "14832:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14814:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "14814:17:17"
																				},
																				"nativeSrc": "14814:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14814:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14805:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "14805:8:17"
																		},
																		"nativeSrc": "14805:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14805:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14787:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "14787:17:17"
																},
																"nativeSrc": "14787:53:17",
																"nodeType": "YulFunctionCall",
																"src": "14787:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14774:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "14774:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14704:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14744:5:17",
														"nodeType": "YulTypedName",
														"src": "14744:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14754:9:17",
														"nodeType": "YulTypedName",
														"src": "14754:9:17",
														"type": ""
													}
												],
												"src": "14704:142:17"
											},
											{
												"body": {
													"nativeSrc": "14899:28:17",
													"nodeType": "YulBlock",
													"src": "14899:28:17",
													"statements": [
														{
															"nativeSrc": "14909:12:17",
															"nodeType": "YulAssignment",
															"src": "14909:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "14916:5:17",
																"nodeType": "YulIdentifier",
																"src": "14916:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14909:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14909:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14852:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14885:5:17",
														"nodeType": "YulTypedName",
														"src": "14885:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14895:3:17",
														"nodeType": "YulTypedName",
														"src": "14895:3:17",
														"type": ""
													}
												],
												"src": "14852:75:17"
											},
											{
												"body": {
													"nativeSrc": "15009:193:17",
													"nodeType": "YulBlock",
													"src": "15009:193:17",
													"statements": [
														{
															"nativeSrc": "15019:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15019:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15074:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "15074:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15043:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "15043:30:17"
																},
																"nativeSrc": "15043:39:17",
																"nodeType": "YulFunctionCall",
																"src": "15043:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15023:16:17",
																	"nodeType": "YulTypedName",
																	"src": "15023:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15098:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "15098:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15138:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "15138:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15132:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "15132:5:17"
																				},
																				"nativeSrc": "15132:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15132:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15145:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15145:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15177:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "15177:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15153:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "15153:23:17"
																				},
																				"nativeSrc": "15153:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15153:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15104:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "15104:27:17"
																		},
																		"nativeSrc": "15104:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15104:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15091:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15091:6:17"
																},
																"nativeSrc": "15091:105:17",
																"nodeType": "YulFunctionCall",
																"src": "15091:105:17"
															},
															"nativeSrc": "15091:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "15091:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14933:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14986:4:17",
														"nodeType": "YulTypedName",
														"src": "14986:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14992:6:17",
														"nodeType": "YulTypedName",
														"src": "14992:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15000:7:17",
														"nodeType": "YulTypedName",
														"src": "15000:7:17",
														"type": ""
													}
												],
												"src": "14933:269:17"
											},
											{
												"body": {
													"nativeSrc": "15257:24:17",
													"nodeType": "YulBlock",
													"src": "15257:24:17",
													"statements": [
														{
															"nativeSrc": "15267:8:17",
															"nodeType": "YulAssignment",
															"src": "15267:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "15274:1:17",
																"nodeType": "YulLiteral",
																"src": "15274:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15267:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15267:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15208:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15253:3:17",
														"nodeType": "YulTypedName",
														"src": "15253:3:17",
														"type": ""
													}
												],
												"src": "15208:73:17"
											},
											{
												"body": {
													"nativeSrc": "15340:136:17",
													"nodeType": "YulBlock",
													"src": "15340:136:17",
													"statements": [
														{
															"nativeSrc": "15350:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15350:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15364:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "15364:30:17"
																},
																"nativeSrc": "15364:32:17",
																"nodeType": "YulFunctionCall",
																"src": "15364:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15354:6:17",
																	"nodeType": "YulTypedName",
																	"src": "15354:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15449:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "15449:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15455:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15455:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15463:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15463:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15405:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "15405:43:17"
																},
																"nativeSrc": "15405:65:17",
																"nodeType": "YulFunctionCall",
																"src": "15405:65:17"
															},
															"nativeSrc": "15405:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "15405:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15287:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15326:4:17",
														"nodeType": "YulTypedName",
														"src": "15326:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15332:6:17",
														"nodeType": "YulTypedName",
														"src": "15332:6:17",
														"type": ""
													}
												],
												"src": "15287:189:17"
											},
											{
												"body": {
													"nativeSrc": "15532:136:17",
													"nodeType": "YulBlock",
													"src": "15532:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15599:63:17",
																"nodeType": "YulBlock",
																"src": "15599:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15643:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "15643:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15650:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15650:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15613:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "15613:29:17"
																			},
																			"nativeSrc": "15613:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15613:39:17"
																		},
																		"nativeSrc": "15613:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15613:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15552:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15552:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15559:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15559:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15549:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15549:2:17"
																},
																"nativeSrc": "15549:14:17",
																"nodeType": "YulFunctionCall",
																"src": "15549:14:17"
															},
															"nativeSrc": "15542:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15564:26:17",
																"nodeType": "YulBlock",
																"src": "15564:26:17",
																"statements": [
																	{
																		"nativeSrc": "15566:22:17",
																		"nodeType": "YulAssignment",
																		"src": "15566:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15579:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "15579:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15586:1:17",
																					"nodeType": "YulLiteral",
																					"src": "15586:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15575:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15575:3:17"
																			},
																			"nativeSrc": "15575:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15575:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15566:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15566:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15546:2:17",
																"nodeType": "YulBlock",
																"src": "15546:2:17",
																"statements": []
															},
															"src": "15542:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15482:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15520:5:17",
														"nodeType": "YulTypedName",
														"src": "15520:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15527:3:17",
														"nodeType": "YulTypedName",
														"src": "15527:3:17",
														"type": ""
													}
												],
												"src": "15482:186:17"
											},
											{
												"body": {
													"nativeSrc": "15753:464:17",
													"nodeType": "YulBlock",
													"src": "15753:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15779:431:17",
																"nodeType": "YulBlock",
																"src": "15779:431:17",
																"statements": [
																	{
																		"nativeSrc": "15793:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15793:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15841:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "15841:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15809:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "15809:31:17"
																			},
																			"nativeSrc": "15809:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15809:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15797:8:17",
																				"nodeType": "YulTypedName",
																				"src": "15797:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15860:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15860:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15883:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "15883:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15911:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "15911:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15893:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "15893:17:17"
																					},
																					"nativeSrc": "15893:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "15893:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15879:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15879:3:17"
																			},
																			"nativeSrc": "15879:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15879:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15864:11:17",
																				"nodeType": "YulTypedName",
																				"src": "15864:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16080:27:17",
																			"nodeType": "YulBlock",
																			"src": "16080:27:17",
																			"statements": [
																				{
																					"nativeSrc": "16082:23:17",
																					"nodeType": "YulAssignment",
																					"src": "16082:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16097:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "16097:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16082:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "16082:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16064:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "16064:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16076:2:17",
																					"nodeType": "YulLiteral",
																					"src": "16076:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16061:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "16061:2:17"
																			},
																			"nativeSrc": "16061:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16061:18:17"
																		},
																		"nativeSrc": "16058:49:17",
																		"nodeType": "YulIf",
																		"src": "16058:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16149:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "16149:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16166:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "16166:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16194:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "16194:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16176:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "16176:17:17"
																							},
																							"nativeSrc": "16176:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "16176:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16162:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "16162:3:17"
																					},
																					"nativeSrc": "16162:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "16162:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16120:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "16120:28:17"
																			},
																			"nativeSrc": "16120:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16120:80:17"
																		},
																		"nativeSrc": "16120:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "16120:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15770:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15770:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15775:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15775:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15767:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "15767:2:17"
																},
																"nativeSrc": "15767:11:17",
																"nodeType": "YulFunctionCall",
																"src": "15767:11:17"
															},
															"nativeSrc": "15764:446:17",
															"nodeType": "YulIf",
															"src": "15764:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15674:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15729:5:17",
														"nodeType": "YulTypedName",
														"src": "15729:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15736:3:17",
														"nodeType": "YulTypedName",
														"src": "15736:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15741:10:17",
														"nodeType": "YulTypedName",
														"src": "15741:10:17",
														"type": ""
													}
												],
												"src": "15674:543:17"
											},
											{
												"body": {
													"nativeSrc": "16286:54:17",
													"nodeType": "YulBlock",
													"src": "16286:54:17",
													"statements": [
														{
															"nativeSrc": "16296:37:17",
															"nodeType": "YulAssignment",
															"src": "16296:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16321:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16321:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16327:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "16327:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16317:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16317:3:17"
																},
																"nativeSrc": "16317:16:17",
																"nodeType": "YulFunctionCall",
																"src": "16317:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16296:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "16296:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16223:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16261:4:17",
														"nodeType": "YulTypedName",
														"src": "16261:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16267:5:17",
														"nodeType": "YulTypedName",
														"src": "16267:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16277:8:17",
														"nodeType": "YulTypedName",
														"src": "16277:8:17",
														"type": ""
													}
												],
												"src": "16223:117:17"
											},
											{
												"body": {
													"nativeSrc": "16397:118:17",
													"nodeType": "YulBlock",
													"src": "16397:118:17",
													"statements": [
														{
															"nativeSrc": "16407:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16407:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16456:1:17",
																						"nodeType": "YulLiteral",
																						"src": "16456:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16459:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "16459:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16452:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16452:3:17"
																				},
																				"nativeSrc": "16452:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16452:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16471:1:17",
																						"nodeType": "YulLiteral",
																						"src": "16471:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16467:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16467:3:17"
																				},
																				"nativeSrc": "16467:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16467:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16423:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "16423:28:17"
																		},
																		"nativeSrc": "16423:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16423:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16419:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16419:3:17"
																},
																"nativeSrc": "16419:56:17",
																"nodeType": "YulFunctionCall",
																"src": "16419:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16411:4:17",
																	"nodeType": "YulTypedName",
																	"src": "16411:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16484:25:17",
															"nodeType": "YulAssignment",
															"src": "16484:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16498:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16498:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16504:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16504:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16494:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16494:3:17"
																},
																"nativeSrc": "16494:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16494:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16484:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16484:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16346:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16374:4:17",
														"nodeType": "YulTypedName",
														"src": "16374:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16380:5:17",
														"nodeType": "YulTypedName",
														"src": "16380:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16390:6:17",
														"nodeType": "YulTypedName",
														"src": "16390:6:17",
														"type": ""
													}
												],
												"src": "16346:169:17"
											},
											{
												"body": {
													"nativeSrc": "16601:214:17",
													"nodeType": "YulBlock",
													"src": "16601:214:17",
													"statements": [
														{
															"nativeSrc": "16734:37:17",
															"nodeType": "YulAssignment",
															"src": "16734:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16761:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16761:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16767:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16767:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16742:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "16742:18:17"
																},
																"nativeSrc": "16742:29:17",
																"nodeType": "YulFunctionCall",
																"src": "16742:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16734:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16734:4:17"
																}
															]
														},
														{
															"nativeSrc": "16780:29:17",
															"nodeType": "YulAssignment",
															"src": "16780:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16791:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16791:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16801:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16801:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16804:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "16804:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16797:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16797:3:17"
																		},
																		"nativeSrc": "16797:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16797:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16788:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "16788:2:17"
																},
																"nativeSrc": "16788:21:17",
																"nodeType": "YulFunctionCall",
																"src": "16788:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16780:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16780:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16520:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16582:4:17",
														"nodeType": "YulTypedName",
														"src": "16582:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16588:3:17",
														"nodeType": "YulTypedName",
														"src": "16588:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16596:4:17",
														"nodeType": "YulTypedName",
														"src": "16596:4:17",
														"type": ""
													}
												],
												"src": "16520:295:17"
											},
											{
												"body": {
													"nativeSrc": "16912:1303:17",
													"nodeType": "YulBlock",
													"src": "16912:1303:17",
													"statements": [
														{
															"nativeSrc": "16923:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16923:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16970:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16970:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16937:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "16937:32:17"
																},
																"nativeSrc": "16937:37:17",
																"nodeType": "YulFunctionCall",
																"src": "16937:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16927:6:17",
																	"nodeType": "YulTypedName",
																	"src": "16927:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17059:22:17",
																"nodeType": "YulBlock",
																"src": "17059:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17061:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17061:16:17"
																			},
																			"nativeSrc": "17061:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17061:18:17"
																		},
																		"nativeSrc": "17061:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17061:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17031:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17031:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17039:18:17",
																		"nodeType": "YulLiteral",
																		"src": "17039:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17028:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17028:2:17"
																},
																"nativeSrc": "17028:30:17",
																"nodeType": "YulFunctionCall",
																"src": "17028:30:17"
															},
															"nativeSrc": "17025:56:17",
															"nodeType": "YulIf",
															"src": "17025:56:17"
														},
														{
															"nativeSrc": "17091:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17091:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17137:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "17137:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17131:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "17131:5:17"
																		},
																		"nativeSrc": "17131:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17131:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17105:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "17105:25:17"
																},
																"nativeSrc": "17105:38:17",
																"nodeType": "YulFunctionCall",
																"src": "17105:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17095:6:17",
																	"nodeType": "YulTypedName",
																	"src": "17095:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17236:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17236:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17242:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17242:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17250:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17250:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17190:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "17190:45:17"
																},
																"nativeSrc": "17190:67:17",
																"nodeType": "YulFunctionCall",
																"src": "17190:67:17"
															},
															"nativeSrc": "17190:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "17190:67:17"
														},
														{
															"nativeSrc": "17267:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17267:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "17284:1:17",
																"nodeType": "YulLiteral",
																"src": "17284:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17271:9:17",
																	"nodeType": "YulTypedName",
																	"src": "17271:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17295:17:17",
															"nodeType": "YulAssignment",
															"src": "17295:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "17308:4:17",
																"nodeType": "YulLiteral",
																"src": "17308:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17295:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "17295:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17359:611:17",
																		"nodeType": "YulBlock",
																		"src": "17359:611:17",
																		"statements": [
																			{
																				"nativeSrc": "17373:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17373:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17392:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "17392:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17404:4:17",
																									"nodeType": "YulLiteral",
																									"src": "17404:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17400:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "17400:3:17"
																							},
																							"nativeSrc": "17400:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "17400:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17388:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "17388:3:17"
																					},
																					"nativeSrc": "17388:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17388:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17377:7:17",
																						"nodeType": "YulTypedName",
																						"src": "17377:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17424:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17424:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17470:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "17470:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17438:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "17438:31:17"
																					},
																					"nativeSrc": "17438:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17438:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17428:6:17",
																						"nodeType": "YulTypedName",
																						"src": "17428:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17488:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17488:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17497:1:17",
																					"nodeType": "YulLiteral",
																					"src": "17497:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17492:1:17",
																						"nodeType": "YulTypedName",
																						"src": "17492:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17556:163:17",
																					"nodeType": "YulBlock",
																					"src": "17556:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17581:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "17581:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17599:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17604:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "17604:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17595:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "17595:3:17"
																												},
																												"nativeSrc": "17595:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "17595:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17589:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "17589:5:17"
																										},
																										"nativeSrc": "17589:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "17589:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17574:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "17574:6:17"
																								},
																								"nativeSrc": "17574:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17574:42:17"
																							},
																							"nativeSrc": "17574:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "17574:42:17"
																						},
																						{
																							"nativeSrc": "17633:24:17",
																							"nodeType": "YulAssignment",
																							"src": "17633:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17647:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "17647:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17655:1:17",
																										"nodeType": "YulLiteral",
																										"src": "17655:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17643:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "17643:3:17"
																								},
																								"nativeSrc": "17643:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17643:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17633:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "17633:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17674:31:17",
																							"nodeType": "YulAssignment",
																							"src": "17674:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17691:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "17691:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17702:2:17",
																										"nodeType": "YulLiteral",
																										"src": "17702:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17687:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "17687:3:17"
																								},
																								"nativeSrc": "17687:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17687:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17674:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "17674:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17522:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "17522:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17525:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "17525:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17519:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "17519:2:17"
																					},
																					"nativeSrc": "17519:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17519:14:17"
																				},
																				"nativeSrc": "17511:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17534:21:17",
																					"nodeType": "YulBlock",
																					"src": "17534:21:17",
																					"statements": [
																						{
																							"nativeSrc": "17536:17:17",
																							"nodeType": "YulAssignment",
																							"src": "17536:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17545:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "17545:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17548:4:17",
																										"nodeType": "YulLiteral",
																										"src": "17548:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17541:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "17541:3:17"
																								},
																								"nativeSrc": "17541:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17541:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17536:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "17536:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17515:3:17",
																					"nodeType": "YulBlock",
																					"src": "17515:3:17",
																					"statements": []
																				},
																				"src": "17511:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "17755:156:17",
																					"nodeType": "YulBlock",
																					"src": "17755:156:17",
																					"statements": [
																						{
																							"nativeSrc": "17773:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17773:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17800:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "17800:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17805:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "17805:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17796:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "17796:3:17"
																										},
																										"nativeSrc": "17796:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "17796:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17790:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "17790:5:17"
																								},
																								"nativeSrc": "17790:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17790:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17777:9:17",
																									"nodeType": "YulTypedName",
																									"src": "17777:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17840:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "17840:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17867:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "17867:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17882:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "17882:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17890:4:17",
																														"nodeType": "YulLiteral",
																														"src": "17890:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17878:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "17878:3:17"
																												},
																												"nativeSrc": "17878:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "17878:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17848:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "17848:18:17"
																										},
																										"nativeSrc": "17848:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "17848:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17833:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "17833:6:17"
																								},
																								"nativeSrc": "17833:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "17833:64:17"
																							},
																							"nativeSrc": "17833:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "17833:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17738:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "17738:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17747:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "17747:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17735:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "17735:2:17"
																					},
																					"nativeSrc": "17735:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17735:19:17"
																				},
																				"nativeSrc": "17732:179:17",
																				"nodeType": "YulIf",
																				"src": "17732:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17931:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "17931:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17945:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "17945:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17953:1:17",
																											"nodeType": "YulLiteral",
																											"src": "17953:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17941:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "17941:3:17"
																									},
																									"nativeSrc": "17941:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "17941:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17957:1:17",
																									"nodeType": "YulLiteral",
																									"src": "17957:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17937:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "17937:3:17"
																							},
																							"nativeSrc": "17937:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "17937:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17924:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "17924:6:17"
																					},
																					"nativeSrc": "17924:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "17924:36:17"
																				},
																				"nativeSrc": "17924:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "17924:36:17"
																			}
																		]
																	},
																	"nativeSrc": "17352:618:17",
																	"nodeType": "YulCase",
																	"src": "17352:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17357:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17357:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17987:222:17",
																		"nodeType": "YulBlock",
																		"src": "17987:222:17",
																		"statements": [
																			{
																				"nativeSrc": "18001:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18001:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18014:1:17",
																					"nodeType": "YulLiteral",
																					"src": "18014:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18005:5:17",
																						"nodeType": "YulTypedName",
																						"src": "18005:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18038:67:17",
																					"nodeType": "YulBlock",
																					"src": "18038:67:17",
																					"statements": [
																						{
																							"nativeSrc": "18056:35:17",
																							"nodeType": "YulAssignment",
																							"src": "18056:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18075:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "18075:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18080:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "18080:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18071:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "18071:3:17"
																										},
																										"nativeSrc": "18071:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "18071:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18065:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "18065:5:17"
																								},
																								"nativeSrc": "18065:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "18065:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18056:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "18056:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18031:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "18031:6:17"
																				},
																				"nativeSrc": "18028:77:17",
																				"nodeType": "YulIf",
																				"src": "18028:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18125:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "18125:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18184:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "18184:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18191:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "18191:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18131:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "18131:52:17"
																							},
																							"nativeSrc": "18131:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "18131:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18118:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "18118:6:17"
																					},
																					"nativeSrc": "18118:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "18118:81:17"
																				},
																				"nativeSrc": "18118:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "18118:81:17"
																			}
																		]
																	},
																	"nativeSrc": "17979:230:17",
																	"nodeType": "YulCase",
																	"src": "17979:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17332:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17332:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17340:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17340:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17329:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17329:2:17"
																},
																"nativeSrc": "17329:14:17",
																"nodeType": "YulFunctionCall",
																"src": "17329:14:17"
															},
															"nativeSrc": "17322:887:17",
															"nodeType": "YulSwitch",
															"src": "17322:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16820:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16901:4:17",
														"nodeType": "YulTypedName",
														"src": "16901:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16907:3:17",
														"nodeType": "YulTypedName",
														"src": "16907:3:17",
														"type": ""
													}
												],
												"src": "16820:1395:17"
											},
											{
												"body": {
													"nativeSrc": "18249:152:17",
													"nodeType": "YulBlock",
													"src": "18249:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18266:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18266:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18269:77:17",
																		"nodeType": "YulLiteral",
																		"src": "18269:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18259:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18259:6:17"
																},
																"nativeSrc": "18259:88:17",
																"nodeType": "YulFunctionCall",
																"src": "18259:88:17"
															},
															"nativeSrc": "18259:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "18259:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18363:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18363:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18366:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18366:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18356:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18356:6:17"
																},
																"nativeSrc": "18356:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18356:15:17"
															},
															"nativeSrc": "18356:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18356:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18387:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18387:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18390:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18390:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18380:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18380:6:17"
																},
																"nativeSrc": "18380:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18380:15:17"
															},
															"nativeSrc": "18380:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18380:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18221:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "18221:180:17"
											},
											{
												"body": {
													"nativeSrc": "18450:190:17",
													"nodeType": "YulBlock",
													"src": "18450:190:17",
													"statements": [
														{
															"nativeSrc": "18460:33:17",
															"nodeType": "YulAssignment",
															"src": "18460:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18487:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "18487:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18469:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "18469:17:17"
																},
																"nativeSrc": "18469:24:17",
																"nodeType": "YulFunctionCall",
																"src": "18469:24:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18460:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "18460:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18583:22:17",
																"nodeType": "YulBlock",
																"src": "18583:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18585:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "18585:16:17"
																			},
																			"nativeSrc": "18585:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "18585:18:17"
																		},
																		"nativeSrc": "18585:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "18585:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18508:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "18508:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18515:66:17",
																		"nodeType": "YulLiteral",
																		"src": "18515:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18505:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "18505:2:17"
																},
																"nativeSrc": "18505:77:17",
																"nodeType": "YulFunctionCall",
																"src": "18505:77:17"
															},
															"nativeSrc": "18502:103:17",
															"nodeType": "YulIf",
															"src": "18502:103:17"
														},
														{
															"nativeSrc": "18614:20:17",
															"nodeType": "YulAssignment",
															"src": "18614:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18625:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "18625:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18632:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18632:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18621:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18621:3:17"
																},
																"nativeSrc": "18621:13:17",
																"nodeType": "YulFunctionCall",
																"src": "18621:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18614:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18614:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18407:233:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18436:5:17",
														"nodeType": "YulTypedName",
														"src": "18436:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18446:3:17",
														"nodeType": "YulTypedName",
														"src": "18446:3:17",
														"type": ""
													}
												],
												"src": "18407:233:17"
											},
											{
												"body": {
													"nativeSrc": "18848:442:17",
													"nodeType": "YulBlock",
													"src": "18848:442:17",
													"statements": [
														{
															"nativeSrc": "18858:27:17",
															"nodeType": "YulAssignment",
															"src": "18858:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18870:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "18870:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18881:3:17",
																		"nodeType": "YulLiteral",
																		"src": "18881:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18866:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18866:3:17"
																},
																"nativeSrc": "18866:19:17",
																"nodeType": "YulFunctionCall",
																"src": "18866:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18858:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18858:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18939:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "18939:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18952:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18952:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18963:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18963:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18948:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18948:3:17"
																		},
																		"nativeSrc": "18948:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18948:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18895:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "18895:43:17"
																},
																"nativeSrc": "18895:71:17",
																"nodeType": "YulFunctionCall",
																"src": "18895:71:17"
															},
															"nativeSrc": "18895:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "18895:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18987:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18987:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18998:2:17",
																				"nodeType": "YulLiteral",
																				"src": "18998:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18983:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18983:3:17"
																		},
																		"nativeSrc": "18983:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18983:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19007:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "19007:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19013:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19013:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19003:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19003:3:17"
																		},
																		"nativeSrc": "19003:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19003:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18976:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18976:6:17"
																},
																"nativeSrc": "18976:48:17",
																"nodeType": "YulFunctionCall",
																"src": "18976:48:17"
															},
															"nativeSrc": "18976:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "18976:48:17"
														},
														{
															"nativeSrc": "19033:86:17",
															"nodeType": "YulAssignment",
															"src": "19033:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19105:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19105:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19114:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "19114:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19041:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "19041:63:17"
																},
																"nativeSrc": "19041:78:17",
																"nodeType": "YulFunctionCall",
																"src": "19041:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19033:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19033:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19173:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19173:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19186:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19186:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19197:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19197:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19182:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19182:3:17"
																		},
																		"nativeSrc": "19182:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19182:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19129:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "19129:43:17"
																},
																"nativeSrc": "19129:72:17",
																"nodeType": "YulFunctionCall",
																"src": "19129:72:17"
															},
															"nativeSrc": "19129:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "19129:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19255:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19255:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19268:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19268:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19279:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19279:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19264:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19264:3:17"
																		},
																		"nativeSrc": "19264:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19264:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19211:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "19211:43:17"
																},
																"nativeSrc": "19211:72:17",
																"nodeType": "YulFunctionCall",
																"src": "19211:72:17"
															},
															"nativeSrc": "19211:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "19211:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18646:644:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18796:9:17",
														"nodeType": "YulTypedName",
														"src": "18796:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18808:6:17",
														"nodeType": "YulTypedName",
														"src": "18808:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18816:6:17",
														"nodeType": "YulTypedName",
														"src": "18816:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18824:6:17",
														"nodeType": "YulTypedName",
														"src": "18824:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18832:6:17",
														"nodeType": "YulTypedName",
														"src": "18832:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18843:4:17",
														"nodeType": "YulTypedName",
														"src": "18843:4:17",
														"type": ""
													}
												],
												"src": "18646:644:17"
											},
											{
												"body": {
													"nativeSrc": "19410:34:17",
													"nodeType": "YulBlock",
													"src": "19410:34:17",
													"statements": [
														{
															"nativeSrc": "19420:18:17",
															"nodeType": "YulAssignment",
															"src": "19420:18:17",
															"value": {
																"name": "pos",
																"nativeSrc": "19435:3:17",
																"nodeType": "YulIdentifier",
																"src": "19435:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19420:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "19420:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19296:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19382:3:17",
														"nodeType": "YulTypedName",
														"src": "19382:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19387:6:17",
														"nodeType": "YulTypedName",
														"src": "19387:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19398:11:17",
														"nodeType": "YulTypedName",
														"src": "19398:11:17",
														"type": ""
													}
												],
												"src": "19296:148:17"
											},
											{
												"body": {
													"nativeSrc": "19560:280:17",
													"nodeType": "YulBlock",
													"src": "19560:280:17",
													"statements": [
														{
															"nativeSrc": "19570:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "19570:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19617:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19617:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19584:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "19584:32:17"
																},
																"nativeSrc": "19584:39:17",
																"nodeType": "YulFunctionCall",
																"src": "19584:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19574:6:17",
																	"nodeType": "YulTypedName",
																	"src": "19574:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19632:96:17",
															"nodeType": "YulAssignment",
															"src": "19632:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19716:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19716:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19721:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19721:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19639:76:17",
																	"nodeType": "YulIdentifier",
																	"src": "19639:76:17"
																},
																"nativeSrc": "19639:89:17",
																"nodeType": "YulFunctionCall",
																"src": "19639:89:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19632:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19632:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19776:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "19776:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19783:4:17",
																				"nodeType": "YulLiteral",
																				"src": "19783:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19772:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19772:3:17"
																		},
																		"nativeSrc": "19772:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19772:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19790:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19790:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19795:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19795:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19737:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "19737:34:17"
																},
																"nativeSrc": "19737:65:17",
																"nodeType": "YulFunctionCall",
																"src": "19737:65:17"
															},
															"nativeSrc": "19737:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "19737:65:17"
														},
														{
															"nativeSrc": "19811:23:17",
															"nodeType": "YulAssignment",
															"src": "19811:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19822:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19822:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19827:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19827:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19818:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19818:3:17"
																},
																"nativeSrc": "19818:16:17",
																"nodeType": "YulFunctionCall",
																"src": "19818:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19811:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19811:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19450:390:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19541:5:17",
														"nodeType": "YulTypedName",
														"src": "19541:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19548:3:17",
														"nodeType": "YulTypedName",
														"src": "19548:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19556:3:17",
														"nodeType": "YulTypedName",
														"src": "19556:3:17",
														"type": ""
													}
												],
												"src": "19450:390:17"
											},
											{
												"body": {
													"nativeSrc": "20030:251:17",
													"nodeType": "YulBlock",
													"src": "20030:251:17",
													"statements": [
														{
															"nativeSrc": "20041:102:17",
															"nodeType": "YulAssignment",
															"src": "20041:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20130:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20130:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20139:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20139:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20048:81:17",
																	"nodeType": "YulIdentifier",
																	"src": "20048:81:17"
																},
																"nativeSrc": "20048:95:17",
																"nodeType": "YulFunctionCall",
																"src": "20048:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20041:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20041:3:17"
																}
															]
														},
														{
															"nativeSrc": "20153:102:17",
															"nodeType": "YulAssignment",
															"src": "20153:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20242:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20242:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20251:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20251:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20160:81:17",
																	"nodeType": "YulIdentifier",
																	"src": "20160:81:17"
																},
																"nativeSrc": "20160:95:17",
																"nodeType": "YulFunctionCall",
																"src": "20160:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20153:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20153:3:17"
																}
															]
														},
														{
															"nativeSrc": "20265:10:17",
															"nodeType": "YulAssignment",
															"src": "20265:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "20272:3:17",
																"nodeType": "YulIdentifier",
																"src": "20272:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20265:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20265:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19846:435:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20001:3:17",
														"nodeType": "YulTypedName",
														"src": "20001:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20007:6:17",
														"nodeType": "YulTypedName",
														"src": "20007:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20015:6:17",
														"nodeType": "YulTypedName",
														"src": "20015:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20026:3:17",
														"nodeType": "YulTypedName",
														"src": "20026:3:17",
														"type": ""
													}
												],
												"src": "19846:435:17"
											},
											{
												"body": {
													"nativeSrc": "20393:64:17",
													"nodeType": "YulBlock",
													"src": "20393:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20415:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20415:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20423:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20423:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20411:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20411:3:17"
																		},
																		"nativeSrc": "20411:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20411:14:17"
																	},
																	{
																		"hexValue": "436861726163746572206e6f74206d696e746564",
																		"kind": "string",
																		"nativeSrc": "20427:22:17",
																		"nodeType": "YulLiteral",
																		"src": "20427:22:17",
																		"type": "",
																		"value": "Character not minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20404:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20404:6:17"
																},
																"nativeSrc": "20404:46:17",
																"nodeType": "YulFunctionCall",
																"src": "20404:46:17"
															},
															"nativeSrc": "20404:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "20404:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8",
												"nativeSrc": "20287:170:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20385:6:17",
														"nodeType": "YulTypedName",
														"src": "20385:6:17",
														"type": ""
													}
												],
												"src": "20287:170:17"
											},
											{
												"body": {
													"nativeSrc": "20609:220:17",
													"nodeType": "YulBlock",
													"src": "20609:220:17",
													"statements": [
														{
															"nativeSrc": "20619:74:17",
															"nodeType": "YulAssignment",
															"src": "20619:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20685:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20685:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20690:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20690:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20626:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "20626:58:17"
																},
																"nativeSrc": "20626:67:17",
																"nodeType": "YulFunctionCall",
																"src": "20626:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20619:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20619:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20791:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20791:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8",
																	"nativeSrc": "20702:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "20702:88:17"
																},
																"nativeSrc": "20702:93:17",
																"nodeType": "YulFunctionCall",
																"src": "20702:93:17"
															},
															"nativeSrc": "20702:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "20702:93:17"
														},
														{
															"nativeSrc": "20804:19:17",
															"nodeType": "YulAssignment",
															"src": "20804:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20815:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20815:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20820:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20820:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20811:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20811:3:17"
																},
																"nativeSrc": "20811:12:17",
																"nodeType": "YulFunctionCall",
																"src": "20811:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20804:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20804:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20463:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20597:3:17",
														"nodeType": "YulTypedName",
														"src": "20597:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20605:3:17",
														"nodeType": "YulTypedName",
														"src": "20605:3:17",
														"type": ""
													}
												],
												"src": "20463:366:17"
											},
											{
												"body": {
													"nativeSrc": "21006:248:17",
													"nodeType": "YulBlock",
													"src": "21006:248:17",
													"statements": [
														{
															"nativeSrc": "21016:26:17",
															"nodeType": "YulAssignment",
															"src": "21016:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21028:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "21028:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21039:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21039:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21024:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21024:3:17"
																},
																"nativeSrc": "21024:18:17",
																"nodeType": "YulFunctionCall",
																"src": "21024:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21016:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21016:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21063:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21063:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21074:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21074:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21059:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21059:3:17"
																		},
																		"nativeSrc": "21059:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21059:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21082:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "21082:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21088:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21088:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21078:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21078:3:17"
																		},
																		"nativeSrc": "21078:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21078:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21052:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21052:6:17"
																},
																"nativeSrc": "21052:47:17",
																"nodeType": "YulFunctionCall",
																"src": "21052:47:17"
															},
															"nativeSrc": "21052:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "21052:47:17"
														},
														{
															"nativeSrc": "21108:139:17",
															"nodeType": "YulAssignment",
															"src": "21108:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21242:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21242:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21116:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "21116:124:17"
																},
																"nativeSrc": "21116:131:17",
																"nodeType": "YulFunctionCall",
																"src": "21116:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21108:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21108:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20835:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20986:9:17",
														"nodeType": "YulTypedName",
														"src": "20986:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21001:4:17",
														"nodeType": "YulTypedName",
														"src": "21001:4:17",
														"type": ""
													}
												],
												"src": "20835:419:17"
											},
											{
												"body": {
													"nativeSrc": "21318:40:17",
													"nodeType": "YulBlock",
													"src": "21318:40:17",
													"statements": [
														{
															"nativeSrc": "21329:22:17",
															"nodeType": "YulAssignment",
															"src": "21329:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21345:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "21345:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21339:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "21339:5:17"
																},
																"nativeSrc": "21339:12:17",
																"nodeType": "YulFunctionCall",
																"src": "21339:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21329:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21329:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21260:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21301:5:17",
														"nodeType": "YulTypedName",
														"src": "21301:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21311:6:17",
														"nodeType": "YulTypedName",
														"src": "21311:6:17",
														"type": ""
													}
												],
												"src": "21260:98:17"
											},
											{
												"body": {
													"nativeSrc": "21459:73:17",
													"nodeType": "YulBlock",
													"src": "21459:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21476:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21476:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21481:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "21481:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21469:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21469:6:17"
																},
																"nativeSrc": "21469:19:17",
																"nodeType": "YulFunctionCall",
																"src": "21469:19:17"
															},
															"nativeSrc": "21469:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "21469:19:17"
														},
														{
															"nativeSrc": "21497:29:17",
															"nodeType": "YulAssignment",
															"src": "21497:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21516:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21516:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21521:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21521:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21512:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21512:3:17"
																},
																"nativeSrc": "21512:14:17",
																"nodeType": "YulFunctionCall",
																"src": "21512:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21497:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "21497:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21364:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21431:3:17",
														"nodeType": "YulTypedName",
														"src": "21431:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21436:6:17",
														"nodeType": "YulTypedName",
														"src": "21436:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21447:11:17",
														"nodeType": "YulTypedName",
														"src": "21447:11:17",
														"type": ""
													}
												],
												"src": "21364:168:17"
											},
											{
												"body": {
													"nativeSrc": "21628:283:17",
													"nodeType": "YulBlock",
													"src": "21628:283:17",
													"statements": [
														{
															"nativeSrc": "21638:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "21638:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21684:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "21684:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21652:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "21652:31:17"
																},
																"nativeSrc": "21652:38:17",
																"nodeType": "YulFunctionCall",
																"src": "21652:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21642:6:17",
																	"nodeType": "YulTypedName",
																	"src": "21642:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21699:77:17",
															"nodeType": "YulAssignment",
															"src": "21699:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21764:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21764:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21769:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "21769:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21706:57:17",
																	"nodeType": "YulIdentifier",
																	"src": "21706:57:17"
																},
																"nativeSrc": "21706:70:17",
																"nodeType": "YulFunctionCall",
																"src": "21706:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21699:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21699:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21824:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "21824:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21831:4:17",
																				"nodeType": "YulLiteral",
																				"src": "21831:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21820:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21820:3:17"
																		},
																		"nativeSrc": "21820:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21820:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21838:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21838:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21843:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "21843:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21785:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "21785:34:17"
																},
																"nativeSrc": "21785:65:17",
																"nodeType": "YulFunctionCall",
																"src": "21785:65:17"
															},
															"nativeSrc": "21785:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "21785:65:17"
														},
														{
															"nativeSrc": "21859:46:17",
															"nodeType": "YulAssignment",
															"src": "21859:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21870:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21870:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21897:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "21897:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21875:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "21875:21:17"
																		},
																		"nativeSrc": "21875:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21875:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21866:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21866:3:17"
																},
																"nativeSrc": "21866:39:17",
																"nodeType": "YulFunctionCall",
																"src": "21866:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21859:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21859:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21538:373:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21609:5:17",
														"nodeType": "YulTypedName",
														"src": "21609:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21616:3:17",
														"nodeType": "YulTypedName",
														"src": "21616:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21624:3:17",
														"nodeType": "YulTypedName",
														"src": "21624:3:17",
														"type": ""
													}
												],
												"src": "21538:373:17"
											},
											{
												"body": {
													"nativeSrc": "22117:440:17",
													"nodeType": "YulBlock",
													"src": "22117:440:17",
													"statements": [
														{
															"nativeSrc": "22127:27:17",
															"nodeType": "YulAssignment",
															"src": "22127:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22139:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22139:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22150:3:17",
																		"nodeType": "YulLiteral",
																		"src": "22150:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22135:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22135:3:17"
																},
																"nativeSrc": "22135:19:17",
																"nodeType": "YulFunctionCall",
																"src": "22135:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22127:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22127:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22208:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22208:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22221:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22221:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22232:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22232:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22217:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22217:3:17"
																		},
																		"nativeSrc": "22217:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22217:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22164:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22164:43:17"
																},
																"nativeSrc": "22164:71:17",
																"nodeType": "YulFunctionCall",
																"src": "22164:71:17"
															},
															"nativeSrc": "22164:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "22164:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22289:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22289:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22302:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22302:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22313:2:17",
																				"nodeType": "YulLiteral",
																				"src": "22313:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22298:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22298:3:17"
																		},
																		"nativeSrc": "22298:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22298:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22245:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22245:43:17"
																},
																"nativeSrc": "22245:72:17",
																"nodeType": "YulFunctionCall",
																"src": "22245:72:17"
															},
															"nativeSrc": "22245:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "22245:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22371:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22371:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22384:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22384:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22395:2:17",
																				"nodeType": "YulLiteral",
																				"src": "22395:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22380:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22380:3:17"
																		},
																		"nativeSrc": "22380:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22380:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22327:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22327:43:17"
																},
																"nativeSrc": "22327:72:17",
																"nodeType": "YulFunctionCall",
																"src": "22327:72:17"
															},
															"nativeSrc": "22327:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "22327:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22420:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22420:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22431:2:17",
																				"nodeType": "YulLiteral",
																				"src": "22431:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22416:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22416:3:17"
																		},
																		"nativeSrc": "22416:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22416:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22440:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22440:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22446:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22446:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22436:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22436:3:17"
																		},
																		"nativeSrc": "22436:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22436:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22409:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22409:6:17"
																},
																"nativeSrc": "22409:48:17",
																"nodeType": "YulFunctionCall",
																"src": "22409:48:17"
															},
															"nativeSrc": "22409:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "22409:48:17"
														},
														{
															"nativeSrc": "22466:84:17",
															"nodeType": "YulAssignment",
															"src": "22466:84:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22536:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22536:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "22545:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22545:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22474:61:17",
																	"nodeType": "YulIdentifier",
																	"src": "22474:61:17"
																},
																"nativeSrc": "22474:76:17",
																"nodeType": "YulFunctionCall",
																"src": "22474:76:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22466:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22466:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21917:640:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22065:9:17",
														"nodeType": "YulTypedName",
														"src": "22065:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22077:6:17",
														"nodeType": "YulTypedName",
														"src": "22077:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22085:6:17",
														"nodeType": "YulTypedName",
														"src": "22085:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22093:6:17",
														"nodeType": "YulTypedName",
														"src": "22093:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22101:6:17",
														"nodeType": "YulTypedName",
														"src": "22101:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22112:4:17",
														"nodeType": "YulTypedName",
														"src": "22112:4:17",
														"type": ""
													}
												],
												"src": "21917:640:17"
											},
											{
												"body": {
													"nativeSrc": "22625:79:17",
													"nodeType": "YulBlock",
													"src": "22625:79:17",
													"statements": [
														{
															"nativeSrc": "22635:22:17",
															"nodeType": "YulAssignment",
															"src": "22635:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22650:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22650:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22644:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "22644:5:17"
																},
																"nativeSrc": "22644:13:17",
																"nodeType": "YulFunctionCall",
																"src": "22644:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22635:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "22635:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22692:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "22692:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "22666:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "22666:25:17"
																},
																"nativeSrc": "22666:32:17",
																"nodeType": "YulFunctionCall",
																"src": "22666:32:17"
															},
															"nativeSrc": "22666:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "22666:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "22563:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22603:6:17",
														"nodeType": "YulTypedName",
														"src": "22603:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22611:3:17",
														"nodeType": "YulTypedName",
														"src": "22611:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22619:5:17",
														"nodeType": "YulTypedName",
														"src": "22619:5:17",
														"type": ""
													}
												],
												"src": "22563:141:17"
											},
											{
												"body": {
													"nativeSrc": "22786:273:17",
													"nodeType": "YulBlock",
													"src": "22786:273:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "22832:83:17",
																"nodeType": "YulBlock",
																"src": "22832:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22834:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "22834:77:17"
																			},
																			"nativeSrc": "22834:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "22834:79:17"
																		},
																		"nativeSrc": "22834:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "22834:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22807:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "22807:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22816:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22816:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22803:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22803:3:17"
																		},
																		"nativeSrc": "22803:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22803:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22828:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22828:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22799:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22799:3:17"
																},
																"nativeSrc": "22799:32:17",
																"nodeType": "YulFunctionCall",
																"src": "22799:32:17"
															},
															"nativeSrc": "22796:119:17",
															"nodeType": "YulIf",
															"src": "22796:119:17"
														},
														{
															"nativeSrc": "22925:127:17",
															"nodeType": "YulBlock",
															"src": "22925:127:17",
															"statements": [
																{
																	"nativeSrc": "22940:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22940:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22954:1:17",
																		"nodeType": "YulLiteral",
																		"src": "22954:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22944:6:17",
																			"nodeType": "YulTypedName",
																			"src": "22944:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22969:73:17",
																	"nodeType": "YulAssignment",
																	"src": "22969:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23014:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "23014:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23025:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "23025:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23010:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "23010:3:17"
																				},
																				"nativeSrc": "23010:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "23010:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23034:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "23034:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22979:30:17",
																			"nodeType": "YulIdentifier",
																			"src": "22979:30:17"
																		},
																		"nativeSrc": "22979:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22979:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22969:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "22969:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "22710:349:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22756:9:17",
														"nodeType": "YulTypedName",
														"src": "22756:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22767:7:17",
														"nodeType": "YulTypedName",
														"src": "22767:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22779:6:17",
														"nodeType": "YulTypedName",
														"src": "22779:6:17",
														"type": ""
													}
												],
												"src": "22710:349:17"
											},
											{
												"body": {
													"nativeSrc": "23093:152:17",
													"nodeType": "YulBlock",
													"src": "23093:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23110:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23110:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23113:77:17",
																		"nodeType": "YulLiteral",
																		"src": "23113:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23103:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23103:6:17"
																},
																"nativeSrc": "23103:88:17",
																"nodeType": "YulFunctionCall",
																"src": "23103:88:17"
															},
															"nativeSrc": "23103:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "23103:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23207:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23207:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23210:4:17",
																		"nodeType": "YulLiteral",
																		"src": "23210:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23200:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23200:6:17"
																},
																"nativeSrc": "23200:15:17",
																"nodeType": "YulFunctionCall",
																"src": "23200:15:17"
															},
															"nativeSrc": "23200:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "23200:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23231:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23231:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23234:4:17",
																		"nodeType": "YulLiteral",
																		"src": "23234:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23224:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23224:6:17"
																},
																"nativeSrc": "23224:15:17",
																"nodeType": "YulFunctionCall",
																"src": "23224:15:17"
															},
															"nativeSrc": "23224:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "23224:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "23065:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "23065:180:17"
											},
											{
												"body": {
													"nativeSrc": "23377:206:17",
													"nodeType": "YulBlock",
													"src": "23377:206:17",
													"statements": [
														{
															"nativeSrc": "23387:26:17",
															"nodeType": "YulAssignment",
															"src": "23387:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23399:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "23399:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23410:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23410:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23395:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23395:3:17"
																},
																"nativeSrc": "23395:18:17",
																"nodeType": "YulFunctionCall",
																"src": "23395:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23387:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "23387:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23467:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23467:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23480:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23480:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23491:1:17",
																				"nodeType": "YulLiteral",
																				"src": "23491:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23476:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23476:3:17"
																		},
																		"nativeSrc": "23476:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23476:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23423:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23423:43:17"
																},
																"nativeSrc": "23423:71:17",
																"nodeType": "YulFunctionCall",
																"src": "23423:71:17"
															},
															"nativeSrc": "23423:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "23423:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23548:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23548:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23561:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23561:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23572:2:17",
																				"nodeType": "YulLiteral",
																				"src": "23572:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23557:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23557:3:17"
																		},
																		"nativeSrc": "23557:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23557:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23504:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23504:43:17"
																},
																"nativeSrc": "23504:72:17",
																"nodeType": "YulFunctionCall",
																"src": "23504:72:17"
															},
															"nativeSrc": "23504:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "23504:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23251:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23341:9:17",
														"nodeType": "YulTypedName",
														"src": "23341:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23353:6:17",
														"nodeType": "YulTypedName",
														"src": "23353:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23361:6:17",
														"nodeType": "YulTypedName",
														"src": "23361:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23372:4:17",
														"nodeType": "YulTypedName",
														"src": "23372:4:17",
														"type": ""
													}
												],
												"src": "23251:332:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Character not minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c8063715018a6116100ab578063b88d4fde1161006f578063b88d4fde14610303578063c87b56dd1461031f578063d0e60cff1461034f578063e985e9c514610381578063f2fde38b146103b15761011f565b8063715018a6146102715780638da5cb5b1461027b57806395d89b41146102995780639756aadd146102b7578063a22cb465146102e75761011f565b806323b872dd116100f257806323b872dd146101bd57806342842e0e146101d95780635091df62146101f55780636352211e1461021157806370a08231146102415761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611b25565b6103cd565b60405161014a9190611b6a565b60405180910390f35b61015b6104ae565b6040516101689190611c0d565b60405180910390f35b61018b60048036038101906101869190611c60565b61053d565b6040516101989190611cca565b60405180910390f35b6101bb60048036038101906101b69190611d0d565b610558565b005b6101d760048036038101906101d29190611d4b565b61056e565b005b6101f360048036038101906101ee9190611d4b565b61066d565b005b61020f600480360381019061020a9190611ec7565b61068c565b005b61022b60048036038101906102269190611c60565b610795565b6040516102389190611cca565b60405180910390f35b61025b60048036038101906102569190611f33565b6107a6565b6040516102689190611f6d565b60405180910390f35b61027961085c565b005b61028361086f565b6040516102909190611cca565b60405180910390f35b6102a1610897565b6040516102ae9190611c0d565b60405180910390f35b6102d160048036038101906102cc9190611c60565b610927565b6040516102de9190611b6a565b60405180910390f35b61030160048036038101906102fc9190611fb0565b61094d565b005b61031d6004803603810190610318919061208c565b610963565b005b61033960048036038101906103349190611c60565b610980565b6040516103469190611c0d565b60405180910390f35b61036960048036038101906103649190611c60565b6109e6565b6040516103789392919061210c565b60405180910390f35b61039b60048036038101906103969190612148565b610b25565b6040516103a89190611b6a565b60405180910390f35b6103cb60048036038101906103c69190611f33565b610bb3565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a757506104a682610c37565b5b9050919050565b60605f80546104bc906121b3565b80601f01602080910402602001604051908101604052809291908181526020018280546104e8906121b3565b80156105335780601f1061050a57610100808354040283529160200191610533565b820191905f5260205f20905b81548152906001019060200180831161051657829003601f168201915b5050505050905090565b5f61054782610ca0565b5061055182610d26565b9050919050565b61056a8282610565610d5f565b610d66565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105de575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d59190611cca565b60405180910390fd5b5f6105f183836105ec610d5f565b610d78565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610667578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065e939291906121e3565b60405180910390fd5b50505050565b61068783838360405180602001604052805f815250610963565b505050565b610694610f83565b5f60085490506106a4338261100a565b600160095f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550604051806060016040528085815260200184815260200183815250600a5f8381526020019081526020015f205f820151815f01908161070c91906123b5565b50602082015181600101556040820151816002015590505060085f815480929190610736906124b1565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f7a4bb3b51994e0ca98a9a569b1b5baade9f795a768ce078dffdb422d1afeef4b8286868660405161078794939291906124f8565b60405180910390a250505050565b5f61079f82610ca0565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610817575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161080e9190611cca565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610864610f83565b61086d5f611027565b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108a6906121b3565b80601f01602080910402602001604051908101604052809291908181526020018280546108d2906121b3565b801561091d5780601f106108f45761010080835404028352916020019161091d565b820191905f5260205f20905b81548152906001019060200180831161090057829003601f168201915b5050505050905090565b5f60095f8381526020019081526020015f205f9054906101000a900460ff169050919050565b61095f610958610d5f565b83836110ea565b5050565b61096e84848461056e565b61097a84848484611253565b50505050565b606061098b82610ca0565b505f610995611405565b90505f8151116109b35760405180602001604052805f8152506109de565b806109bd8461141b565b6040516020016109ce92919061257c565b6040516020818303038152906040525b915050919050565b60605f8060095f8581526020019081526020015f205f9054906101000a900460ff16610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e906125e9565b60405180910390fd5b5f600a5f8681526020019081526020015f206040518060600160405290815f82018054610a73906121b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9f906121b3565b8015610aea5780601f10610ac157610100808354040283529160200191610aea565b820191905f5260205f20905b815481529060010190602001808311610acd57829003601f168201915b50505050508152602001600182015481526020016002820154815250509050805f015181602001518260400151935093509350509193909250565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610bbb610f83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c2b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c229190611cca565b60405180910390fd5b610c3481611027565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610cab836114e5565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1d57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d149190611f6d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d73838383600161151e565b505050565b5f80610d83846114e5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610dc457610dc38184866116dd565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e4f57610e035f855f8061151e565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ece57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f8b610d5f565b73ffffffffffffffffffffffffffffffffffffffff16610fa961086f565b73ffffffffffffffffffffffffffffffffffffffff161461100857610fcc610d5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fff9190611cca565b60405180910390fd5b565b611023828260405180602001604052805f8152506117a0565b5050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115a57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111519190611cca565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112469190611b6a565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156113ff578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611296610d5f565b8685856040518563ffffffff1660e01b81526004016112b89493929190612659565b6020604051808303815f875af19250505080156112f357506040513d601f19601f820116820180604052508101906112f091906126b7565b60015b611374573d805f8114611321576040519150601f19603f3d011682016040523d82523d5f602084013e611326565b606091505b505f81510361136c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113639190611cca565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113fd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113f49190611cca565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611429846117bb565b0190505f8167ffffffffffffffff81111561144757611446611da3565b5b6040519080825280601f01601f1916602001820160405280156114795781602001600182028036833780820191505090505b5090505f82602001820190505b6001156114da578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114cf576114ce6126e2565b5b0494505f8503611486575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061155657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611688575f61156584610ca0565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115cf57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115e257506115e08184610b25565b155b1561162457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161161b9190611cca565b60405180910390fd5b811561168657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116e883838361190c565b61179b575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361175c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117539190611f6d565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161179292919061270f565b60405180910390fd5b505050565b6117aa83836119cc565b6117b65f848484611253565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611817577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161180d5761180c6126e2565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611854576d04ee2d6d415b85acef8100000000838161184a576118496126e2565b5b0492506020810190505b662386f26fc10000831061188357662386f26fc100008381611879576118786126e2565b5b0492506010810190505b6305f5e10083106118ac576305f5e10083816118a2576118a16126e2565b5b0492506008810190505b61271083106118d15761271083816118c7576118c66126e2565b5b0492506004810190505b606483106118f457606483816118ea576118e96126e2565b5b0492506002810190505b600a8310611903576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119c357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061198457506119838484610b25565b5b806119c257508273ffffffffffffffffffffffffffffffffffffffff166119aa83610d26565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a3c575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a339190611cca565b60405180910390fd5b5f611a4883835f610d78565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611aba575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ab19190611cca565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b0481611ad0565b8114611b0e575f80fd5b50565b5f81359050611b1f81611afb565b92915050565b5f60208284031215611b3a57611b39611ac8565b5b5f611b4784828501611b11565b91505092915050565b5f8115159050919050565b611b6481611b50565b82525050565b5f602082019050611b7d5f830184611b5b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611bba578082015181840152602081019050611b9f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611bdf82611b83565b611be98185611b8d565b9350611bf9818560208601611b9d565b611c0281611bc5565b840191505092915050565b5f6020820190508181035f830152611c258184611bd5565b905092915050565b5f819050919050565b611c3f81611c2d565b8114611c49575f80fd5b50565b5f81359050611c5a81611c36565b92915050565b5f60208284031215611c7557611c74611ac8565b5b5f611c8284828501611c4c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611cb482611c8b565b9050919050565b611cc481611caa565b82525050565b5f602082019050611cdd5f830184611cbb565b92915050565b611cec81611caa565b8114611cf6575f80fd5b50565b5f81359050611d0781611ce3565b92915050565b5f8060408385031215611d2357611d22611ac8565b5b5f611d3085828601611cf9565b9250506020611d4185828601611c4c565b9150509250929050565b5f805f60608486031215611d6257611d61611ac8565b5b5f611d6f86828701611cf9565b9350506020611d8086828701611cf9565b9250506040611d9186828701611c4c565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dd982611bc5565b810181811067ffffffffffffffff82111715611df857611df7611da3565b5b80604052505050565b5f611e0a611abf565b9050611e168282611dd0565b919050565b5f67ffffffffffffffff821115611e3557611e34611da3565b5b611e3e82611bc5565b9050602081019050919050565b828183375f83830152505050565b5f611e6b611e6684611e1b565b611e01565b905082815260208101848484011115611e8757611e86611d9f565b5b611e92848285611e4b565b509392505050565b5f82601f830112611eae57611ead611d9b565b5b8135611ebe848260208601611e59565b91505092915050565b5f805f60608486031215611ede57611edd611ac8565b5b5f84013567ffffffffffffffff811115611efb57611efa611acc565b5b611f0786828701611e9a565b9350506020611f1886828701611c4c565b9250506040611f2986828701611c4c565b9150509250925092565b5f60208284031215611f4857611f47611ac8565b5b5f611f5584828501611cf9565b91505092915050565b611f6781611c2d565b82525050565b5f602082019050611f805f830184611f5e565b92915050565b611f8f81611b50565b8114611f99575f80fd5b50565b5f81359050611faa81611f86565b92915050565b5f8060408385031215611fc657611fc5611ac8565b5b5f611fd385828601611cf9565b9250506020611fe485828601611f9c565b9150509250929050565b5f67ffffffffffffffff82111561200857612007611da3565b5b61201182611bc5565b9050602081019050919050565b5f61203061202b84611fee565b611e01565b90508281526020810184848401111561204c5761204b611d9f565b5b612057848285611e4b565b509392505050565b5f82601f83011261207357612072611d9b565b5b813561208384826020860161201e565b91505092915050565b5f805f80608085870312156120a4576120a3611ac8565b5b5f6120b187828801611cf9565b94505060206120c287828801611cf9565b93505060406120d387828801611c4c565b925050606085013567ffffffffffffffff8111156120f4576120f3611acc565b5b6121008782880161205f565b91505092959194509250565b5f6060820190508181035f8301526121248186611bd5565b90506121336020830185611f5e565b6121406040830184611f5e565b949350505050565b5f806040838503121561215e5761215d611ac8565b5b5f61216b85828601611cf9565b925050602061217c85828601611cf9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121ca57607f821691505b6020821081036121dd576121dc612186565b5b50919050565b5f6060820190506121f65f830186611cbb565b6122036020830185611f5e565b6122106040830184611cbb565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612239565b61227e8683612239565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6122b96122b46122af84611c2d565b612296565b611c2d565b9050919050565b5f819050919050565b6122d28361229f565b6122e66122de826122c0565b848454612245565b825550505050565b5f90565b6122fa6122ee565b6123058184846122c9565b505050565b5b818110156123285761231d5f826122f2565b60018101905061230b565b5050565b601f82111561236d5761233e81612218565b6123478461222a565b81016020851015612356578190505b61236a6123628561222a565b83018261230a565b50505b505050565b5f82821c905092915050565b5f61238d5f1984600802612372565b1980831691505092915050565b5f6123a5838361237e565b9150826002028217905092915050565b6123be82611b83565b67ffffffffffffffff8111156123d7576123d6611da3565b5b6123e182546121b3565b6123ec82828561232c565b5f60209050601f83116001811461241d575f841561240b578287015190505b612415858261239a565b86555061247c565b601f19841661242b86612218565b5f5b828110156124525784890151825560018201915060208501945060208101905061242d565b8683101561246f578489015161246b601f89168261237e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6124bb82611c2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124ed576124ec612484565b5b600182019050919050565b5f60808201905061250b5f830187611f5e565b818103602083015261251d8186611bd5565b905061252c6040830185611f5e565b6125396060830184611f5e565b95945050505050565b5f81905092915050565b5f61255682611b83565b6125608185612542565b9350612570818560208601611b9d565b80840191505092915050565b5f612587828561254c565b9150612593828461254c565b91508190509392505050565b7f436861726163746572206e6f74206d696e7465640000000000000000000000005f82015250565b5f6125d3601483611b8d565b91506125de8261259f565b602082019050919050565b5f6020820190508181035f830152612600816125c7565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61262b82612607565b6126358185612611565b9350612645818560208601611b9d565b61264e81611bc5565b840191505092915050565b5f60808201905061266c5f830187611cbb565b6126796020830186611cbb565b6126866040830185611f5e565b81810360608301526126988184612621565b905095945050505050565b5f815190506126b181611afb565b92915050565b5f602082840312156126cc576126cb611ac8565b5b5f6126d9848285016126a3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506127225f830185611cbb565b61272f6020830184611f5e565b939250505056fea2646970667358221220eaeb912180ee25bf0a037fde46a6ce9f407382743e3bd66d3bba6920fabb136364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD0E60CFF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x9756AADD EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x5091DF62 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x241 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x497 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4A7 JUMPI POP PUSH2 0x4A6 DUP3 PUSH2 0xC37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E8 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x533 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x533 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x516 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x547 DUP3 PUSH2 0xCA0 JUMP JUMPDEST POP PUSH2 0x551 DUP3 PUSH2 0xD26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP3 DUP3 PUSH2 0x565 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xD66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F1 DUP4 DUP4 PUSH2 0x5EC PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x667 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x687 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 PUSH2 0xF83 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x6A4 CALLER DUP3 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x736 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A4BB3B51994E0CA98A9A569B1B5BAADE9F795A768CE078DFFDB422D1AFEEF4B DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x787 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79F DUP3 PUSH2 0xCA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x817 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x864 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x86D PUSH0 PUSH2 0x1027 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8A6 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x91D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x91D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x900 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95F PUSH2 0x958 PUSH2 0xD5F JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x96E DUP5 DUP5 DUP5 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x97A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1253 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x98B DUP3 PUSH2 0xCA0 JUMP JUMPDEST POP PUSH0 PUSH2 0x995 PUSH2 0x1405 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9DE JUMP JUMPDEST DUP1 PUSH2 0x9BD DUP5 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CE SWAP3 SWAP2 SWAP1 PUSH2 0x257C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xA73 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA9F SWAP1 PUSH2 0x21B3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAEA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBBB PUSH2 0xF83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0x1027 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCAB DUP4 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x151E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD83 DUP5 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH2 0xDC3 DUP2 DUP5 DUP7 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4F JUMPI PUSH2 0xE03 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x151E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECE JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0xD5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA9 PUSH2 0x86F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1008 JUMPI PUSH2 0xFCC PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1023 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x17A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1246 SWAP2 SWAP1 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13FF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1296 PUSH2 0xD5F JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12F3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F0 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1374 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x136C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1429 DUP5 PUSH2 0x17BB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1479 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14DA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14CF JUMPI PUSH2 0x14CE PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1486 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1556 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1688 JUMPI PUSH0 PUSH2 0x1565 DUP5 PUSH2 0xCA0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15CF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15E2 JUMPI POP PUSH2 0x15E0 DUP2 DUP5 PUSH2 0xB25 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1624 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1686 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16E8 DUP4 DUP4 DUP4 PUSH2 0x190C JUMP JUMPDEST PUSH2 0x179B JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1792 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17AA DUP4 DUP4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x17B6 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1253 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1817 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1854 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1883 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18AC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18A2 JUMPI PUSH2 0x18A1 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18D1 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18F4 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x26E2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1903 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1984 JUMPI POP PUSH2 0x1983 DUP5 DUP5 PUSH2 0xB25 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x19C2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AA DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A48 DUP4 DUP4 PUSH0 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ABA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB1 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B04 DUP2 PUSH2 0x1AD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B1F DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3A JUMPI PUSH2 0x1B39 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B47 DUP5 DUP3 DUP6 ADD PUSH2 0x1B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B9F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDF DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BE9 DUP2 DUP6 PUSH2 0x1B8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x1C02 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C25 DUP2 DUP5 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C49 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5A DUP2 PUSH2 0x1C36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB4 DUP3 PUSH2 0x1C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDD PUSH0 DUP4 ADD DUP5 PUSH2 0x1CBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D07 DUP2 PUSH2 0x1CE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D30 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6F DUP7 DUP3 DUP8 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D80 DUP7 DUP3 DUP8 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D91 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1DD9 DUP3 PUSH2 0x1BC5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DF8 JUMPI PUSH2 0x1DF7 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0A PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 DUP3 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E34 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3E DUP3 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6B PUSH2 0x1E66 DUP5 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E87 JUMPI PUSH2 0x1E86 PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST PUSH2 0x1E92 DUP5 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1D9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EBE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH2 0x1EDD PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EFB JUMPI PUSH2 0x1EFA PUSH2 0x1ACC JUMP JUMPDEST JUMPDEST PUSH2 0x1F07 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F18 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F29 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F55 DUP5 DUP3 DUP6 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F67 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8F DUP2 PUSH2 0x1B50 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FAA DUP2 PUSH2 0x1F86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2008 JUMPI PUSH2 0x2007 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x2011 DUP3 PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2030 PUSH2 0x202B DUP5 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x1E01 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x204C JUMPI PUSH2 0x204B PUSH2 0x1D9F JUMP JUMPDEST JUMPDEST PUSH2 0x2057 DUP5 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2073 JUMPI PUSH2 0x2072 PUSH2 0x1D9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2083 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B1 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20C2 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1C4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x1ACC JUMP JUMPDEST JUMPDEST PUSH2 0x2100 DUP8 DUP3 DUP9 ADD PUSH2 0x205F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2124 DUP2 DUP7 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2133 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2140 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215D PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x216B DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217C DUP6 DUP3 DUP7 ADD PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x2186 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2210 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2274 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x227E DUP7 DUP4 PUSH2 0x2239 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22B9 PUSH2 0x22B4 PUSH2 0x22AF DUP5 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0x2296 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D2 DUP4 PUSH2 0x229F JUMP JUMPDEST PUSH2 0x22E6 PUSH2 0x22DE DUP3 PUSH2 0x22C0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2245 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x22FA PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x2305 DUP2 DUP5 DUP5 PUSH2 0x22C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x231D PUSH0 DUP3 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x236D JUMPI PUSH2 0x233E DUP2 PUSH2 0x2218 JUMP JUMPDEST PUSH2 0x2347 DUP5 PUSH2 0x222A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2356 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x236A PUSH2 0x2362 DUP6 PUSH2 0x222A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x230A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2372 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23A5 DUP4 DUP4 PUSH2 0x237E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23BE DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x1DA3 JUMP JUMPDEST JUMPDEST PUSH2 0x23E1 DUP3 SLOAD PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x23EC DUP3 DUP3 DUP6 PUSH2 0x232C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x241D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x240B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2415 DUP6 DUP3 PUSH2 0x239A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x247C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x242B DUP7 PUSH2 0x2218 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2452 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x242D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x246F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x246B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x237E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24BB DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24ED JUMPI PUSH2 0x24EC PUSH2 0x2484 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x250B PUSH0 DUP4 ADD DUP8 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x251D DUP2 DUP7 PUSH2 0x1BD5 JUMP JUMPDEST SWAP1 POP PUSH2 0x252C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x2539 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2556 DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2560 DUP2 DUP6 PUSH2 0x2542 JUMP JUMPDEST SWAP4 POP PUSH2 0x2570 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 DUP3 DUP6 PUSH2 0x254C JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 DUP5 PUSH2 0x254C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436861726163746572206E6F74206D696E746564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25D3 PUSH1 0x14 DUP4 PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP PUSH2 0x25DE DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2600 DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x262B DUP3 PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2635 DUP2 DUP6 PUSH2 0x2611 JUMP JUMPDEST SWAP4 POP PUSH2 0x2645 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x264E DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x266C PUSH0 DUP4 ADD DUP8 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2679 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2698 DUP2 DUP5 PUSH2 0x2621 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B1 DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CC JUMPI PUSH2 0x26CB PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D9 DUP5 DUP3 DUP6 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2722 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x272F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xEB SWAP2 0x21 DUP1 0xEE 0x25 0xBF EXP SUB PUSH32 0xDE46A6CE9F407382743E3BD66D3BBA6920FABB136364736F6C63430008160033 ",
							"sourceMap": "274:1973:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1278:406:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:123:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1913:331:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3928:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:5;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1278:406:16:-;1531:13:0;:11;:13::i;:::-;1381:15:16::1;1399:14;;1381:32;;1424:30;1434:10;1446:7;1424:9;:30::i;:::-;1492:4;1465:15;:24;1481:7;1465:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1538:39;;;;;;;;1558:4;1538:39;;;;1564:5;1538:39;;;;1571:5;1538:39;;::::0;1507:19:::1;:28;1527:7;1507:28;;;;;;;;;;;:70;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1588:14;;:16;;;;;;;;;:::i;:::-;;;;;;1636:10;1620:56;;;1648:7;1657:4;1663:5;1670;1620:56;;;;;;;;;:::i;:::-;;;;;;;;1370:314;1278:406:::0;;;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;1740:123:16:-;1807:4;1831:15;:24;1847:7;1831:24;;;;;;;;;;;;;;;;;;;;;1824:31;;1740:123;;;:::o;3718:144:5:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;1913:331:16:-;1985:13;2000:7;2009;2037:15;:24;2053:7;2037:24;;;;;;;;;;;;;;;;;;;;;2029:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2097:37;2137:19;:28;2157:7;2137:28;;;;;;;;;;;2097:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:10;:15;;;2201:10;:16;;;2219:10;:16;;;2176:60;;;;;;;1913:331;;;;;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:12:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:5:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10633:100:5:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:11:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:5:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;12214:916:14:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:117::-;5624:1;5621;5614:12;5638:117;5747:1;5744;5737:12;5761:180;5809:77;5806:1;5799:88;5906:4;5903:1;5896:15;5930:4;5927:1;5920:15;5947:281;6030:27;6052:4;6030:27;:::i;:::-;6022:6;6018:40;6160:6;6148:10;6145:22;6124:18;6112:10;6109:34;6106:62;6103:88;;;6171:18;;:::i;:::-;6103:88;6211:10;6207:2;6200:22;5990:238;5947:281;;:::o;6234:129::-;6268:6;6295:20;;:::i;:::-;6285:30;;6324:33;6352:4;6344:6;6324:33;:::i;:::-;6234:129;;;:::o;6369:308::-;6431:4;6521:18;6513:6;6510:30;6507:56;;;6543:18;;:::i;:::-;6507:56;6581:29;6603:6;6581:29;:::i;:::-;6573:37;;6665:4;6659;6655:15;6647:23;;6369:308;;;:::o;6683:146::-;6780:6;6775:3;6770;6757:30;6821:1;6812:6;6807:3;6803:16;6796:27;6683:146;;;:::o;6835:425::-;6913:5;6938:66;6954:49;6996:6;6954:49;:::i;:::-;6938:66;:::i;:::-;6929:75;;7027:6;7020:5;7013:21;7065:4;7058:5;7054:16;7103:3;7094:6;7089:3;7085:16;7082:25;7079:112;;;7110:79;;:::i;:::-;7079:112;7200:54;7247:6;7242:3;7237;7200:54;:::i;:::-;6919:341;6835:425;;;;;:::o;7280:340::-;7336:5;7385:3;7378:4;7370:6;7366:17;7362:27;7352:122;;7393:79;;:::i;:::-;7352:122;7510:6;7497:20;7535:79;7610:3;7602:6;7595:4;7587:6;7583:17;7535:79;:::i;:::-;7526:88;;7342:278;7280:340;;;;:::o;7626:799::-;7713:6;7721;7729;7778:2;7766:9;7757:7;7753:23;7749:32;7746:119;;;7784:79;;:::i;:::-;7746:119;7932:1;7921:9;7917:17;7904:31;7962:18;7954:6;7951:30;7948:117;;;7984:79;;:::i;:::-;7948:117;8089:63;8144:7;8135:6;8124:9;8120:22;8089:63;:::i;:::-;8079:73;;7875:287;8201:2;8227:53;8272:7;8263:6;8252:9;8248:22;8227:53;:::i;:::-;8217:63;;8172:118;8329:2;8355:53;8400:7;8391:6;8380:9;8376:22;8355:53;:::i;:::-;8345:63;;8300:118;7626:799;;;;;:::o;8431:329::-;8490:6;8539:2;8527:9;8518:7;8514:23;8510:32;8507:119;;;8545:79;;:::i;:::-;8507:119;8665:1;8690:53;8735:7;8726:6;8715:9;8711:22;8690:53;:::i;:::-;8680:63;;8636:117;8431:329;;;;:::o;8766:118::-;8853:24;8871:5;8853:24;:::i;:::-;8848:3;8841:37;8766:118;;:::o;8890:222::-;8983:4;9021:2;9010:9;9006:18;8998:26;;9034:71;9102:1;9091:9;9087:17;9078:6;9034:71;:::i;:::-;8890:222;;;;:::o;9118:116::-;9188:21;9203:5;9188:21;:::i;:::-;9181:5;9178:32;9168:60;;9224:1;9221;9214:12;9168:60;9118:116;:::o;9240:133::-;9283:5;9321:6;9308:20;9299:29;;9337:30;9361:5;9337:30;:::i;:::-;9240:133;;;;:::o;9379:468::-;9444:6;9452;9501:2;9489:9;9480:7;9476:23;9472:32;9469:119;;;9507:79;;:::i;:::-;9469:119;9627:1;9652:53;9697:7;9688:6;9677:9;9673:22;9652:53;:::i;:::-;9642:63;;9598:117;9754:2;9780:50;9822:7;9813:6;9802:9;9798:22;9780:50;:::i;:::-;9770:60;;9725:115;9379:468;;;;;:::o;9853:307::-;9914:4;10004:18;9996:6;9993:30;9990:56;;;10026:18;;:::i;:::-;9990:56;10064:29;10086:6;10064:29;:::i;:::-;10056:37;;10148:4;10142;10138:15;10130:23;;9853:307;;;:::o;10166:423::-;10243:5;10268:65;10284:48;10325:6;10284:48;:::i;:::-;10268:65;:::i;:::-;10259:74;;10356:6;10349:5;10342:21;10394:4;10387:5;10383:16;10432:3;10423:6;10418:3;10414:16;10411:25;10408:112;;;10439:79;;:::i;:::-;10408:112;10529:54;10576:6;10571:3;10566;10529:54;:::i;:::-;10249:340;10166:423;;;;;:::o;10608:338::-;10663:5;10712:3;10705:4;10697:6;10693:17;10689:27;10679:122;;10720:79;;:::i;:::-;10679:122;10837:6;10824:20;10862:78;10936:3;10928:6;10921:4;10913:6;10909:17;10862:78;:::i;:::-;10853:87;;10669:277;10608:338;;;;:::o;10952:943::-;11047:6;11055;11063;11071;11120:3;11108:9;11099:7;11095:23;11091:33;11088:120;;;11127:79;;:::i;:::-;11088:120;11247:1;11272:53;11317:7;11308:6;11297:9;11293:22;11272:53;:::i;:::-;11262:63;;11218:117;11374:2;11400:53;11445:7;11436:6;11425:9;11421:22;11400:53;:::i;:::-;11390:63;;11345:118;11502:2;11528:53;11573:7;11564:6;11553:9;11549:22;11528:53;:::i;:::-;11518:63;;11473:118;11658:2;11647:9;11643:18;11630:32;11689:18;11681:6;11678:30;11675:117;;;11711:79;;:::i;:::-;11675:117;11816:62;11870:7;11861:6;11850:9;11846:22;11816:62;:::i;:::-;11806:72;;11601:287;10952:943;;;;;;;:::o;11901:533::-;12070:4;12108:2;12097:9;12093:18;12085:26;;12157:9;12151:4;12147:20;12143:1;12132:9;12128:17;12121:47;12185:78;12258:4;12249:6;12185:78;:::i;:::-;12177:86;;12273:72;12341:2;12330:9;12326:18;12317:6;12273:72;:::i;:::-;12355;12423:2;12412:9;12408:18;12399:6;12355:72;:::i;:::-;11901:533;;;;;;:::o;12440:474::-;12508:6;12516;12565:2;12553:9;12544:7;12540:23;12536:32;12533:119;;;12571:79;;:::i;:::-;12533:119;12691:1;12716:53;12761:7;12752:6;12741:9;12737:22;12716:53;:::i;:::-;12706:63;;12662:117;12818:2;12844:53;12889:7;12880:6;12869:9;12865:22;12844:53;:::i;:::-;12834:63;;12789:118;12440:474;;;;;:::o;12920:180::-;12968:77;12965:1;12958:88;13065:4;13062:1;13055:15;13089:4;13086:1;13079:15;13106:320;13150:6;13187:1;13181:4;13177:12;13167:22;;13234:1;13228:4;13224:12;13255:18;13245:81;;13311:4;13303:6;13299:17;13289:27;;13245:81;13373:2;13365:6;13362:14;13342:18;13339:38;13336:84;;13392:18;;:::i;:::-;13336:84;13157:269;13106:320;;;:::o;13432:442::-;13581:4;13619:2;13608:9;13604:18;13596:26;;13632:71;13700:1;13689:9;13685:17;13676:6;13632:71;:::i;:::-;13713:72;13781:2;13770:9;13766:18;13757:6;13713:72;:::i;:::-;13795;13863:2;13852:9;13848:18;13839:6;13795:72;:::i;:::-;13432:442;;;;;;:::o;13880:141::-;13929:4;13952:3;13944:11;;13975:3;13972:1;13965:14;14009:4;14006:1;13996:18;13988:26;;13880:141;;;:::o;14027:93::-;14064:6;14111:2;14106;14099:5;14095:14;14091:23;14081:33;;14027:93;;;:::o;14126:107::-;14170:8;14220:5;14214:4;14210:16;14189:37;;14126:107;;;;:::o;14239:393::-;14308:6;14358:1;14346:10;14342:18;14381:97;14411:66;14400:9;14381:97;:::i;:::-;14499:39;14529:8;14518:9;14499:39;:::i;:::-;14487:51;;14571:4;14567:9;14560:5;14556:21;14547:30;;14620:4;14610:8;14606:19;14599:5;14596:30;14586:40;;14315:317;;14239:393;;;;;:::o;14638:60::-;14666:3;14687:5;14680:12;;14638:60;;;:::o;14704:142::-;14754:9;14787:53;14805:34;14814:24;14832:5;14814:24;:::i;:::-;14805:34;:::i;:::-;14787:53;:::i;:::-;14774:66;;14704:142;;;:::o;14852:75::-;14895:3;14916:5;14909:12;;14852:75;;;:::o;14933:269::-;15043:39;15074:7;15043:39;:::i;:::-;15104:91;15153:41;15177:16;15153:41;:::i;:::-;15145:6;15138:4;15132:11;15104:91;:::i;:::-;15098:4;15091:105;15009:193;14933:269;;;:::o;15208:73::-;15253:3;15208:73;:::o;15287:189::-;15364:32;;:::i;:::-;15405:65;15463:6;15455;15449:4;15405:65;:::i;:::-;15340:136;15287:189;;:::o;15482:186::-;15542:120;15559:3;15552:5;15549:14;15542:120;;;15613:39;15650:1;15643:5;15613:39;:::i;:::-;15586:1;15579:5;15575:13;15566:22;;15542:120;;;15482:186;;:::o;15674:543::-;15775:2;15770:3;15767:11;15764:446;;;15809:38;15841:5;15809:38;:::i;:::-;15893:29;15911:10;15893:29;:::i;:::-;15883:8;15879:44;16076:2;16064:10;16061:18;16058:49;;;16097:8;16082:23;;16058:49;16120:80;16176:22;16194:3;16176:22;:::i;:::-;16166:8;16162:37;16149:11;16120:80;:::i;:::-;15779:431;;15764:446;15674:543;;;:::o;16223:117::-;16277:8;16327:5;16321:4;16317:16;16296:37;;16223:117;;;;:::o;16346:169::-;16390:6;16423:51;16471:1;16467:6;16459:5;16456:1;16452:13;16423:51;:::i;:::-;16419:56;16504:4;16498;16494:15;16484:25;;16397:118;16346:169;;;;:::o;16520:295::-;16596:4;16742:29;16767:3;16761:4;16742:29;:::i;:::-;16734:37;;16804:3;16801:1;16797:11;16791:4;16788:21;16780:29;;16520:295;;;;:::o;16820:1395::-;16937:37;16970:3;16937:37;:::i;:::-;17039:18;17031:6;17028:30;17025:56;;;17061:18;;:::i;:::-;17025:56;17105:38;17137:4;17131:11;17105:38;:::i;:::-;17190:67;17250:6;17242;17236:4;17190:67;:::i;:::-;17284:1;17308:4;17295:17;;17340:2;17332:6;17329:14;17357:1;17352:618;;;;18014:1;18031:6;18028:77;;;18080:9;18075:3;18071:19;18065:26;18056:35;;18028:77;18131:67;18191:6;18184:5;18131:67;:::i;:::-;18125:4;18118:81;17987:222;17322:887;;17352:618;17404:4;17400:9;17392:6;17388:22;17438:37;17470:4;17438:37;:::i;:::-;17497:1;17511:208;17525:7;17522:1;17519:14;17511:208;;;17604:9;17599:3;17595:19;17589:26;17581:6;17574:42;17655:1;17647:6;17643:14;17633:24;;17702:2;17691:9;17687:18;17674:31;;17548:4;17545:1;17541:12;17536:17;;17511:208;;;17747:6;17738:7;17735:19;17732:179;;;17805:9;17800:3;17796:19;17790:26;17848:48;17890:4;17882:6;17878:17;17867:9;17848:48;:::i;:::-;17840:6;17833:64;17755:156;17732:179;17957:1;17953;17945:6;17941:14;17937:22;17931:4;17924:36;17359:611;;;17322:887;;16912:1303;;;16820:1395;;:::o;18221:180::-;18269:77;18266:1;18259:88;18366:4;18363:1;18356:15;18390:4;18387:1;18380:15;18407:233;18446:3;18469:24;18487:5;18469:24;:::i;:::-;18460:33;;18515:66;18508:5;18505:77;18502:103;;18585:18;;:::i;:::-;18502:103;18632:1;18625:5;18621:13;18614:20;;18407:233;;;:::o;18646:644::-;18843:4;18881:3;18870:9;18866:19;18858:27;;18895:71;18963:1;18952:9;18948:17;18939:6;18895:71;:::i;:::-;19013:9;19007:4;19003:20;18998:2;18987:9;18983:18;18976:48;19041:78;19114:4;19105:6;19041:78;:::i;:::-;19033:86;;19129:72;19197:2;19186:9;19182:18;19173:6;19129:72;:::i;:::-;19211;19279:2;19268:9;19264:18;19255:6;19211:72;:::i;:::-;18646:644;;;;;;;:::o;19296:148::-;19398:11;19435:3;19420:18;;19296:148;;;;:::o;19450:390::-;19556:3;19584:39;19617:5;19584:39;:::i;:::-;19639:89;19721:6;19716:3;19639:89;:::i;:::-;19632:96;;19737:65;19795:6;19790:3;19783:4;19776:5;19772:16;19737:65;:::i;:::-;19827:6;19822:3;19818:16;19811:23;;19560:280;19450:390;;;;:::o;19846:435::-;20026:3;20048:95;20139:3;20130:6;20048:95;:::i;:::-;20041:102;;20160:95;20251:3;20242:6;20160:95;:::i;:::-;20153:102;;20272:3;20265:10;;19846:435;;;;;:::o;20287:170::-;20427:22;20423:1;20415:6;20411:14;20404:46;20287:170;:::o;20463:366::-;20605:3;20626:67;20690:2;20685:3;20626:67;:::i;:::-;20619:74;;20702:93;20791:3;20702:93;:::i;:::-;20820:2;20815:3;20811:12;20804:19;;20463:366;;;:::o;20835:419::-;21001:4;21039:2;21028:9;21024:18;21016:26;;21088:9;21082:4;21078:20;21074:1;21063:9;21059:17;21052:47;21116:131;21242:4;21116:131;:::i;:::-;21108:139;;20835:419;;;:::o;21260:98::-;21311:6;21345:5;21339:12;21329:22;;21260:98;;;:::o;21364:168::-;21447:11;21481:6;21476:3;21469:19;21521:4;21516:3;21512:14;21497:29;;21364:168;;;;:::o;21538:373::-;21624:3;21652:38;21684:5;21652:38;:::i;:::-;21706:70;21769:6;21764:3;21706:70;:::i;:::-;21699:77;;21785:65;21843:6;21838:3;21831:4;21824:5;21820:16;21785:65;:::i;:::-;21875:29;21897:6;21875:29;:::i;:::-;21870:3;21866:39;21859:46;;21628:283;21538:373;;;;:::o;21917:640::-;22112:4;22150:3;22139:9;22135:19;22127:27;;22164:71;22232:1;22221:9;22217:17;22208:6;22164:71;:::i;:::-;22245:72;22313:2;22302:9;22298:18;22289:6;22245:72;:::i;:::-;22327;22395:2;22384:9;22380:18;22371:6;22327:72;:::i;:::-;22446:9;22440:4;22436:20;22431:2;22420:9;22416:18;22409:48;22474:76;22545:4;22536:6;22474:76;:::i;:::-;22466:84;;21917:640;;;;;;;:::o;22563:141::-;22619:5;22650:6;22644:13;22635:22;;22666:32;22692:5;22666:32;:::i;:::-;22563:141;;;;:::o;22710:349::-;22779:6;22828:2;22816:9;22807:7;22803:23;22799:32;22796:119;;;22834:79;;:::i;:::-;22796:119;22954:1;22979:63;23034:7;23025:6;23014:9;23010:22;22979:63;:::i;:::-;22969:73;;22925:127;22710:349;;;;:::o;23065:180::-;23113:77;23110:1;23103:88;23210:4;23207:1;23200:15;23234:4;23231:1;23224:15;23251:332;23372:4;23410:2;23399:9;23395:18;23387:26;;23423:71;23491:1;23480:9;23476:17;23467:6;23423:71;:::i;:::-;23504:72;23572:2;23561:9;23557:18;23548:6;23504:72;:::i;:::-;23251:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2018400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getCharacterAttributes(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"isCharacterMinted(uint256)": "2899",
								"mintCharacter(string,uint256,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1061,
									"end": 1236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1177,
									"end": 1187,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1153,
									"end": 1158,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1215,
									"end": 1228,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1212,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 1200,
									"end": 1228,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1200,
									"end": 1228,
									"modifierDepth": 2,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1236,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2803,
									"end": 2809,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2811,
									"end": 2817,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2860,
									"end": 2862,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2839,
									"end": 2846,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2835,
									"end": 2858,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 2831,
									"end": 2863,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 2828,
									"end": 2947,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2828,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "90"
								},
								{
									"begin": 2828,
									"end": 2947,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2866,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 2866,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 2866,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2866,
									"end": 2945,
									"name": "tag",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 2866,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2828,
									"end": 2947,
									"name": "tag",
									"source": 17,
									"value": "90"
								},
								{
									"begin": 2828,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3007,
									"end": 3008,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2996,
									"end": 3005,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2992,
									"end": 3009,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2986,
									"end": 3010,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3037,
									"end": 3055,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3029,
									"end": 3035,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3026,
									"end": 3056,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3023,
									"end": 3140,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3023,
									"end": 3140,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "92"
								},
								{
									"begin": 3023,
									"end": 3140,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3059,
									"end": 3138,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3059,
									"end": 3138,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 3059,
									"end": 3138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3059,
									"end": 3138,
									"name": "tag",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3059,
									"end": 3138,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3023,
									"end": 3140,
									"name": "tag",
									"source": 17,
									"value": "92"
								},
								{
									"begin": 3023,
									"end": 3140,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3164,
									"end": 3238,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "94"
								},
								{
									"begin": 3230,
									"end": 3237,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3221,
									"end": 3227,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3210,
									"end": 3219,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3206,
									"end": 3228,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3164,
									"end": 3238,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3164,
									"end": 3238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3164,
									"end": 3238,
									"name": "tag",
									"source": 17,
									"value": "94"
								},
								{
									"begin": 3164,
									"end": 3238,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3154,
									"end": 3238,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 3154,
									"end": 3238,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2957,
									"end": 3248,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3308,
									"end": 3310,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3297,
									"end": 3306,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3293,
									"end": 3311,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3287,
									"end": 3312,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3339,
									"end": 3357,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3331,
									"end": 3337,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3328,
									"end": 3358,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3325,
									"end": 3442,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3325,
									"end": 3442,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3325,
									"end": 3442,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 3361,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 3361,
									"end": 3440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3440,
									"name": "tag",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 3361,
									"end": 3440,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3325,
									"end": 3442,
									"name": "tag",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3325,
									"end": 3442,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3466,
									"end": 3540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 3532,
									"end": 3539,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3523,
									"end": 3529,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3512,
									"end": 3521,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3508,
									"end": 3530,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3466,
									"end": 3540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3466,
									"end": 3540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3466,
									"end": 3540,
									"name": "tag",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 3466,
									"end": 3540,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3456,
									"end": 3540,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3456,
									"end": 3540,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3258,
									"end": 3550,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3610,
									"end": 3612,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 3599,
									"end": 3608,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3595,
									"end": 3613,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3589,
									"end": 3614,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3641,
									"end": 3659,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3630,
									"end": 3660,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3627,
									"end": 3744,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3627,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3627,
									"end": 3744,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3663,
									"end": 3742,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 3663,
									"end": 3742,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 3663,
									"end": 3742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3663,
									"end": 3742,
									"name": "tag",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 3663,
									"end": 3742,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3627,
									"end": 3744,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3627,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3768,
									"end": 3842,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 3834,
									"end": 3841,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3825,
									"end": 3831,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3814,
									"end": 3823,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3810,
									"end": 3832,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3768,
									"end": 3842,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3768,
									"end": 3842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3768,
									"end": 3842,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 3768,
									"end": 3842,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3758,
									"end": 3842,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3758,
									"end": 3842,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3560,
									"end": 3852,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2677,
									"end": 3859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3865,
									"end": 3964,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 3865,
									"end": 3964,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3951,
									"end": 3956,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3935,
									"end": 3957,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3935,
									"end": 3957,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3865,
									"end": 3964,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3865,
									"end": 3964,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3865,
									"end": 3964,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3865,
									"end": 3964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3970,
									"end": 4150,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 3970,
									"end": 4150,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4018,
									"end": 4095,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4015,
									"end": 4016,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4008,
									"end": 4096,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4115,
									"end": 4119,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 4112,
									"end": 4113,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 4105,
									"end": 4120,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4139,
									"end": 4143,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 4136,
									"end": 4137,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4129,
									"end": 4144,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4476,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 4156,
									"end": 4476,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4200,
									"end": 4206,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4237,
									"end": 4238,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 4231,
									"end": 4235,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4227,
									"end": 4239,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 4217,
									"end": 4239,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4217,
									"end": 4239,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4284,
									"end": 4285,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4274,
									"end": 4286,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4305,
									"end": 4323,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 4295,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 4295,
									"end": 4376,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4361,
									"end": 4365,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 4353,
									"end": 4359,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4349,
									"end": 4366,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4339,
									"end": 4366,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4339,
									"end": 4366,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4295,
									"end": 4376,
									"name": "tag",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 4295,
									"end": 4376,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4423,
									"end": 4425,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4415,
									"end": 4421,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4412,
									"end": 4426,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4389,
									"end": 4427,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 4386,
									"end": 4470,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 4386,
									"end": 4470,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4442,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 4442,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 4442,
									"end": 4460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4442,
									"end": 4460,
									"name": "tag",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 4442,
									"end": 4460,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4386,
									"end": 4470,
									"name": "tag",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 4386,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4207,
									"end": 4476,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4476,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4476,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4476,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4156,
									"end": 4476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4482,
									"end": 4623,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 4482,
									"end": 4623,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4531,
									"end": 4535,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4554,
									"end": 4557,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4546,
									"end": 4557,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4546,
									"end": 4557,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4577,
									"end": 4580,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4574,
									"end": 4575,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4567,
									"end": 4581,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4611,
									"end": 4615,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4608,
									"end": 4609,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4598,
									"end": 4616,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 4590,
									"end": 4616,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4590,
									"end": 4616,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4482,
									"end": 4623,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4482,
									"end": 4623,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4482,
									"end": 4623,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4482,
									"end": 4623,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4629,
									"end": 4722,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 4629,
									"end": 4722,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4666,
									"end": 4672,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4713,
									"end": 4715,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4708,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4701,
									"end": 4706,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4697,
									"end": 4711,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4693,
									"end": 4716,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 4683,
									"end": 4716,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4683,
									"end": 4716,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4629,
									"end": 4722,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4629,
									"end": 4722,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4629,
									"end": 4722,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4629,
									"end": 4722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4772,
									"end": 4780,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4822,
									"end": 4827,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4816,
									"end": 4820,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4812,
									"end": 4828,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 4791,
									"end": 4828,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4791,
									"end": 4828,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 4835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4960,
									"end": 4961,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 4948,
									"end": 4958,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4944,
									"end": 4962,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4983,
									"end": 5080,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 5013,
									"end": 5079,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5002,
									"end": 5011,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4983,
									"end": 5080,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 4983,
									"end": 5080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4983,
									"end": 5080,
									"name": "tag",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 4983,
									"end": 5080,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5101,
									"end": 5140,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5131,
									"end": 5139,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 5129,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5101,
									"end": 5140,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 5101,
									"end": 5140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5101,
									"end": 5140,
									"name": "tag",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5101,
									"end": 5140,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5089,
									"end": 5140,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 5089,
									"end": 5140,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5173,
									"end": 5177,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 5169,
									"end": 5178,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 5162,
									"end": 5167,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5158,
									"end": 5179,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5149,
									"end": 5179,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 5149,
									"end": 5179,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5222,
									"end": 5226,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 5212,
									"end": 5220,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5208,
									"end": 5227,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5201,
									"end": 5206,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5198,
									"end": 5228,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 5188,
									"end": 5228,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 5188,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4917,
									"end": 5234,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4917,
									"end": 5234,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 5234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5240,
									"end": 5317,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 5240,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5277,
									"end": 5284,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5306,
									"end": 5311,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5295,
									"end": 5311,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5295,
									"end": 5311,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5240,
									"end": 5317,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5240,
									"end": 5317,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5240,
									"end": 5317,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5240,
									"end": 5317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5323,
									"end": 5383,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 5323,
									"end": 5383,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5351,
									"end": 5354,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5372,
									"end": 5377,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5365,
									"end": 5377,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5365,
									"end": 5377,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5323,
									"end": 5383,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5323,
									"end": 5383,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5323,
									"end": 5383,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5323,
									"end": 5383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5531,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 5389,
									"end": 5531,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5439,
									"end": 5448,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5472,
									"end": 5525,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5490,
									"end": 5524,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 5499,
									"end": 5523,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 5517,
									"end": 5522,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5499,
									"end": 5523,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 5499,
									"end": 5523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5499,
									"end": 5523,
									"name": "tag",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 5499,
									"end": 5523,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5490,
									"end": 5524,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 5490,
									"end": 5524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5490,
									"end": 5524,
									"name": "tag",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 5490,
									"end": 5524,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5472,
									"end": 5525,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 5472,
									"end": 5525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5472,
									"end": 5525,
									"name": "tag",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5472,
									"end": 5525,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5459,
									"end": 5525,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5459,
									"end": 5525,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5531,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5531,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5531,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5531,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5612,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 5537,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5580,
									"end": 5583,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5601,
									"end": 5606,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5594,
									"end": 5606,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5594,
									"end": 5606,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5612,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5612,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5612,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5618,
									"end": 5887,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 5618,
									"end": 5887,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5728,
									"end": 5767,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 5759,
									"end": 5766,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5728,
									"end": 5767,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 5728,
									"end": 5767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5728,
									"end": 5767,
									"name": "tag",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 5728,
									"end": 5767,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5880,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5838,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 5862,
									"end": 5878,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5838,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 5838,
									"end": 5879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5838,
									"end": 5879,
									"name": "tag",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 5838,
									"end": 5879,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5830,
									"end": 5836,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5823,
									"end": 5827,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5817,
									"end": 5828,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5880,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 5789,
									"end": 5880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5880,
									"name": "tag",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5789,
									"end": 5880,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5783,
									"end": 5787,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5776,
									"end": 5881,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5694,
									"end": 5887,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5618,
									"end": 5887,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5618,
									"end": 5887,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5618,
									"end": 5887,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5618,
									"end": 5887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5893,
									"end": 5966,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 5893,
									"end": 5966,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5938,
									"end": 5941,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5893,
									"end": 5966,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5893,
									"end": 5966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5972,
									"end": 6161,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 5972,
									"end": 6161,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6049,
									"end": 6081,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6049,
									"end": 6081,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 6049,
									"end": 6081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6049,
									"end": 6081,
									"name": "tag",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6049,
									"end": 6081,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6090,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "127"
								},
								{
									"begin": 6148,
									"end": 6154,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6140,
									"end": 6146,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6134,
									"end": 6138,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6090,
									"end": 6155,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 6090,
									"end": 6155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6090,
									"end": 6155,
									"name": "tag",
									"source": 17,
									"value": "127"
								},
								{
									"begin": 6090,
									"end": 6155,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6025,
									"end": 6161,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5972,
									"end": 6161,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5972,
									"end": 6161,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5972,
									"end": 6161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6167,
									"end": 6353,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 6167,
									"end": 6353,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "tag",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6244,
									"end": 6247,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6237,
									"end": 6242,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6234,
									"end": 6248,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6298,
									"end": 6337,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 6335,
									"end": 6336,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6328,
									"end": 6333,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6298,
									"end": 6337,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 6298,
									"end": 6337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6298,
									"end": 6337,
									"name": "tag",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 6298,
									"end": 6337,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6271,
									"end": 6272,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 6264,
									"end": 6269,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6260,
									"end": 6273,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6251,
									"end": 6273,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "tag",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 6227,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6167,
									"end": 6353,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6167,
									"end": 6353,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6167,
									"end": 6353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6359,
									"end": 6902,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 6359,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6460,
									"end": 6462,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 6455,
									"end": 6458,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6452,
									"end": 6463,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 6449,
									"end": 6895,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6449,
									"end": 6895,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "134"
								},
								{
									"begin": 6449,
									"end": 6895,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6494,
									"end": 6532,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 6526,
									"end": 6531,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6494,
									"end": 6532,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 6494,
									"end": 6532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6494,
									"end": 6532,
									"name": "tag",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 6494,
									"end": 6532,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6578,
									"end": 6607,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 6596,
									"end": 6606,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6578,
									"end": 6607,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 6578,
									"end": 6607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6578,
									"end": 6607,
									"name": "tag",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 6578,
									"end": 6607,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6568,
									"end": 6576,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6564,
									"end": 6608,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6761,
									"end": 6763,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6749,
									"end": 6759,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6746,
									"end": 6764,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 6743,
									"end": 6792,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6743,
									"end": 6792,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "137"
								},
								{
									"begin": 6743,
									"end": 6792,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6782,
									"end": 6790,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6767,
									"end": 6790,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6767,
									"end": 6790,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6743,
									"end": 6792,
									"name": "tag",
									"source": 17,
									"value": "137"
								},
								{
									"begin": 6743,
									"end": 6792,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6805,
									"end": 6885,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "138"
								},
								{
									"begin": 6861,
									"end": 6883,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "139"
								},
								{
									"begin": 6879,
									"end": 6882,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6861,
									"end": 6883,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 6861,
									"end": 6883,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6861,
									"end": 6883,
									"name": "tag",
									"source": 17,
									"value": "139"
								},
								{
									"begin": 6861,
									"end": 6883,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6851,
									"end": 6859,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6847,
									"end": 6884,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6834,
									"end": 6845,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6805,
									"end": 6885,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 6805,
									"end": 6885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6805,
									"end": 6885,
									"name": "tag",
									"source": 17,
									"value": "138"
								},
								{
									"begin": 6805,
									"end": 6885,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6464,
									"end": 6895,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6464,
									"end": 6895,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6449,
									"end": 6895,
									"name": "tag",
									"source": 17,
									"value": "134"
								},
								{
									"begin": 6449,
									"end": 6895,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6359,
									"end": 6902,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6359,
									"end": 6902,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6359,
									"end": 6902,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6359,
									"end": 6902,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6962,
									"end": 6970,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7017,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7006,
									"end": 7010,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7002,
									"end": 7018,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 6981,
									"end": 7018,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6981,
									"end": 7018,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6908,
									"end": 7025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7075,
									"end": 7081,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7108,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 7156,
									"end": 7157,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7152,
									"end": 7158,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 7144,
									"end": 7149,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 7141,
									"end": 7142,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 7137,
									"end": 7150,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 7108,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 7108,
									"end": 7159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7108,
									"end": 7159,
									"name": "tag",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 7108,
									"end": 7159,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7104,
									"end": 7160,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 7189,
									"end": 7193,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 7183,
									"end": 7187,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7179,
									"end": 7194,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 7169,
									"end": 7194,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7169,
									"end": 7194,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7082,
									"end": 7200,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7031,
									"end": 7200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "tag",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7281,
									"end": 7285,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7427,
									"end": 7456,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "144"
								},
								{
									"begin": 7452,
									"end": 7455,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7446,
									"end": 7450,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7427,
									"end": 7456,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 7427,
									"end": 7456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7427,
									"end": 7456,
									"name": "tag",
									"source": 17,
									"value": "144"
								},
								{
									"begin": 7427,
									"end": 7456,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7419,
									"end": 7456,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7419,
									"end": 7456,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7489,
									"end": 7492,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7486,
									"end": 7487,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 7482,
									"end": 7493,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 7476,
									"end": 7480,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7473,
									"end": 7494,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 7465,
									"end": 7494,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7465,
									"end": 7494,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7205,
									"end": 7500,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7505,
									"end": 8900,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 7505,
									"end": 8900,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7622,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "146"
								},
								{
									"begin": 7655,
									"end": 7658,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7622,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 7622,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7622,
									"end": 7659,
									"name": "tag",
									"source": 17,
									"value": "146"
								},
								{
									"begin": 7622,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7724,
									"end": 7742,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7716,
									"end": 7722,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 7713,
									"end": 7743,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 7710,
									"end": 7766,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 7710,
									"end": 7766,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 7710,
									"end": 7766,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 7746,
									"end": 7764,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 7746,
									"end": 7764,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 7746,
									"end": 7764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7746,
									"end": 7764,
									"name": "tag",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 7746,
									"end": 7764,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7710,
									"end": 7766,
									"name": "tag",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 7710,
									"end": 7766,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7790,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "149"
								},
								{
									"begin": 7822,
									"end": 7826,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7816,
									"end": 7827,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 7790,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 7790,
									"end": 7828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7790,
									"end": 7828,
									"name": "tag",
									"source": 17,
									"value": "149"
								},
								{
									"begin": 7790,
									"end": 7828,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7875,
									"end": 7942,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "150"
								},
								{
									"begin": 7935,
									"end": 7941,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7927,
									"end": 7933,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7921,
									"end": 7925,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 7875,
									"end": 7942,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 7875,
									"end": 7942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7875,
									"end": 7942,
									"name": "tag",
									"source": 17,
									"value": "150"
								},
								{
									"begin": 7875,
									"end": 7942,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7969,
									"end": 7970,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7993,
									"end": 7997,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 7980,
									"end": 7997,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7980,
									"end": 7997,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8025,
									"end": 8027,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8017,
									"end": 8023,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8014,
									"end": 8028,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 8042,
									"end": 8043,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8699,
									"end": 8700,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8716,
									"end": 8722,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8713,
									"end": 8790,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8713,
									"end": 8790,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "153"
								},
								{
									"begin": 8713,
									"end": 8790,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8765,
									"end": 8774,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8760,
									"end": 8763,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 8756,
									"end": 8775,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8750,
									"end": 8776,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8741,
									"end": 8776,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8741,
									"end": 8776,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8713,
									"end": 8790,
									"name": "tag",
									"source": 17,
									"value": "153"
								},
								{
									"begin": 8713,
									"end": 8790,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8816,
									"end": 8883,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 8876,
									"end": 8882,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 8869,
									"end": 8874,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8816,
									"end": 8883,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 8816,
									"end": 8883,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8816,
									"end": 8883,
									"name": "tag",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 8816,
									"end": 8883,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8810,
									"end": 8814,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 8803,
									"end": 8884,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8672,
									"end": 8894,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8007,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "151"
								},
								{
									"begin": 8007,
									"end": 8894,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "tag",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 8037,
									"end": 8655,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8089,
									"end": 8093,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8085,
									"end": 8094,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 8077,
									"end": 8083,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8073,
									"end": 8095,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 8123,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "155"
								},
								{
									"begin": 8155,
									"end": 8159,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 8123,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 8123,
									"end": 8160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8123,
									"end": 8160,
									"name": "tag",
									"source": 17,
									"value": "155"
								},
								{
									"begin": 8123,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8182,
									"end": 8183,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "tag",
									"source": 17,
									"value": "156"
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8210,
									"end": 8217,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8207,
									"end": 8208,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8204,
									"end": 8218,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8289,
									"end": 8298,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8284,
									"end": 8287,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8280,
									"end": 8299,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8274,
									"end": 8300,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8266,
									"end": 8272,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8259,
									"end": 8301,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8340,
									"end": 8341,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8332,
									"end": 8338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8328,
									"end": 8342,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8318,
									"end": 8342,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 8318,
									"end": 8342,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8387,
									"end": 8389,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 8376,
									"end": 8385,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 8372,
									"end": 8390,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8359,
									"end": 8390,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 8359,
									"end": 8390,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8233,
									"end": 8237,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 8230,
									"end": 8231,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8226,
									"end": 8238,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8221,
									"end": 8238,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8221,
									"end": 8238,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "156"
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "tag",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 8196,
									"end": 8404,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8432,
									"end": 8438,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 8423,
									"end": 8430,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8420,
									"end": 8439,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 8417,
									"end": 8596,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8417,
									"end": 8596,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "159"
								},
								{
									"begin": 8417,
									"end": 8596,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8490,
									"end": 8499,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8485,
									"end": 8488,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8481,
									"end": 8500,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8475,
									"end": 8501,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8533,
									"end": 8581,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "160"
								},
								{
									"begin": 8575,
									"end": 8579,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8567,
									"end": 8573,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8563,
									"end": 8580,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 8552,
									"end": 8561,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8533,
									"end": 8581,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 8533,
									"end": 8581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8533,
									"end": 8581,
									"name": "tag",
									"source": 17,
									"value": "160"
								},
								{
									"begin": 8533,
									"end": 8581,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8525,
									"end": 8531,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8518,
									"end": 8582,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8440,
									"end": 8596,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8417,
									"end": 8596,
									"name": "tag",
									"source": 17,
									"value": "159"
								},
								{
									"begin": 8417,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8642,
									"end": 8643,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8638,
									"end": 8639,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 8630,
									"end": 8636,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 8626,
									"end": 8640,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 8622,
									"end": 8644,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8616,
									"end": 8620,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 8609,
									"end": 8645,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8044,
									"end": 8655,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8044,
									"end": 8655,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8044,
									"end": 8655,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8007,
									"end": 8894,
									"name": "tag",
									"source": 17,
									"value": "151"
								},
								{
									"begin": 8007,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8007,
									"end": 8894,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7597,
									"end": 8900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7597,
									"end": 8900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7597,
									"end": 8900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7505,
									"end": 8900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7505,
									"end": 8900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7505,
									"end": 8900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8906,
									"end": 9032,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 8906,
									"end": 9032,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8943,
									"end": 8950,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8983,
									"end": 9025,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8976,
									"end": 8981,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8972,
									"end": 9026,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 8961,
									"end": 9026,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8961,
									"end": 9026,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8906,
									"end": 9032,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 8906,
									"end": 9032,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8906,
									"end": 9032,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8906,
									"end": 9032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9038,
									"end": 9134,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 9038,
									"end": 9134,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9075,
									"end": 9082,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9128,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "163"
								},
								{
									"begin": 9122,
									"end": 9127,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9104,
									"end": 9128,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 9104,
									"end": 9128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9104,
									"end": 9128,
									"name": "tag",
									"source": 17,
									"value": "163"
								},
								{
									"begin": 9104,
									"end": 9128,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9093,
									"end": 9128,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9093,
									"end": 9128,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9038,
									"end": 9134,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 9038,
									"end": 9134,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9038,
									"end": 9134,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9038,
									"end": 9134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9140,
									"end": 9258,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 9140,
									"end": 9258,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9227,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "165"
								},
								{
									"begin": 9245,
									"end": 9250,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 9227,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 9227,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9227,
									"end": 9251,
									"name": "tag",
									"source": 17,
									"value": "165"
								},
								{
									"begin": 9227,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9222,
									"end": 9225,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9215,
									"end": 9252,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 9140,
									"end": 9258,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9140,
									"end": 9258,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9140,
									"end": 9258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "tag",
									"source": 17,
									"value": "14"
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9357,
									"end": 9361,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9395,
									"end": 9397,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 9384,
									"end": 9393,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9380,
									"end": 9398,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 9372,
									"end": 9398,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9372,
									"end": 9398,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9408,
									"end": 9479,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "167"
								},
								{
									"begin": 9476,
									"end": 9477,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9465,
									"end": 9474,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 9461,
									"end": 9478,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 9452,
									"end": 9458,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 9408,
									"end": 9479,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 9408,
									"end": 9479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9408,
									"end": 9479,
									"name": "tag",
									"source": 17,
									"value": "167"
								},
								{
									"begin": 9408,
									"end": 9479,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9264,
									"end": 9486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 2247,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eaeb912180ee25bf0a037fde46a6ce9f407382743e3bd66d3bba6920fabb136364736f6c63430008160033",
									".code": [
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "D0E60CFF"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "9756AADD"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "5091DF62"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 274,
											"end": 2247,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 1278,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1278,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 1740,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1740,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1740,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 1913,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 1913,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "90"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 1913,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1399,
											"end": 1413,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1381,
											"end": 1413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1381,
											"end": 1413,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1434,
											"end": 1444,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1453,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1424,
											"end": 1454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1424,
											"end": 1454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1492,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1465,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1488,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1558,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1571,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1538,
											"end": 1577,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1534,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1507,
											"end": 1577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1588,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 1588,
											"end": 1604,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1604,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1636,
											"end": 1646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "7A4BB3B51994E0CA98A9A569B1B5BAADE9F795A768CE078DFFDB422D1AFEEF4B"
										},
										{
											"begin": 1648,
											"end": 1655,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1657,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1670,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 1620,
											"end": 1676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1676,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 1370,
											"end": 1684,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1278,
											"end": 1684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1846,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1831,
											"end": 1855,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1740,
											"end": 1863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2052,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 2029,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 2029,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2134,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2156,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2164,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 2097,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 2097,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "tag",
											"source": 16,
											"value": "189"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "tag",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2097,
											"end": 2165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2184,
											"end": 2199,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2201,
											"end": 2211,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2219,
											"end": 2235,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 11,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "399"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "399"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5632,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 5515,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5761,
											"end": 5941,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 5761,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5809,
											"end": 5886,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5806,
											"end": 5807,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5887,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5906,
											"end": 5910,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5935,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5947,
											"end": 6228,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 5947,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 6052,
											"end": 6056,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 6030,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6148,
											"end": 6158,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6145,
											"end": 6167,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6112,
											"end": 6122,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6109,
											"end": 6143,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6106,
											"end": 6168,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6103,
											"end": 6191,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6103,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 6103,
											"end": 6191,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 6171,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6103,
											"end": 6191,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 6103,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6211,
											"end": 6221,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6200,
											"end": 6222,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5990,
											"end": 6228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5947,
											"end": 6228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5947,
											"end": 6228,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5947,
											"end": 6228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6363,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 6234,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6268,
											"end": 6274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 6295,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6315,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6352,
											"end": 6356,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 6324,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6357,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6324,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6363,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6363,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6234,
											"end": 6363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6677,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 6369,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6540,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6507,
											"end": 6563,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6507,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6507,
											"end": 6563,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 6543,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 6543,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6507,
											"end": 6563,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6507,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 6581,
											"end": 6610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 6581,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6573,
											"end": 6610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6573,
											"end": 6610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6659,
											"end": 6663,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6655,
											"end": 6670,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6647,
											"end": 6670,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6647,
											"end": 6670,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6677,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6683,
											"end": 6829,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 6683,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6770,
											"end": 6773,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6757,
											"end": 6787,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6803,
											"end": 6819,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6796,
											"end": 6823,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6683,
											"end": 6829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6683,
											"end": 6829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6683,
											"end": 6829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6683,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6913,
											"end": 6918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 6954,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6954,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 6954,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6954,
											"end": 7003,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 6954,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6938,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 6938,
											"end": 7004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6938,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 6938,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6929,
											"end": 7004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6929,
											"end": 7004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7020,
											"end": 7025,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7013,
											"end": 7034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7058,
											"end": 7063,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7054,
											"end": 7070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7089,
											"end": 7092,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7085,
											"end": 7101,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7082,
											"end": 7107,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7079,
											"end": 7191,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7079,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 7079,
											"end": 7191,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 7110,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 7110,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7079,
											"end": 7191,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 7079,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7237,
											"end": 7240,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 7200,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7254,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 7200,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6919,
											"end": 7260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6835,
											"end": 7260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7336,
											"end": 7341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7388,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7370,
											"end": 7376,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7366,
											"end": 7383,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7362,
											"end": 7389,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7352,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 7352,
											"end": 7474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7393,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7393,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 7393,
											"end": 7472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7393,
											"end": 7472,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7393,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7352,
											"end": 7474,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 7352,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7510,
											"end": 7516,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7497,
											"end": 7517,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 7610,
											"end": 7613,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7602,
											"end": 7608,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7595,
											"end": 7599,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 7535,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7526,
											"end": 7614,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7526,
											"end": 7614,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7342,
											"end": 7620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7280,
											"end": 7620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7713,
											"end": 7719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7729,
											"end": 7735,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7780,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7766,
											"end": 7775,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7753,
											"end": 7776,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7749,
											"end": 7781,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7865,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 7746,
											"end": 7865,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 7784,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 7784,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7863,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 7784,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7865,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 7746,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7930,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7904,
											"end": 7935,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7951,
											"end": 7981,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7948,
											"end": 8065,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7948,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 7948,
											"end": 8065,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7984,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 7984,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 7984,
											"end": 8063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7984,
											"end": 8063,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 7984,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7948,
											"end": 8065,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 7948,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8089,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8144,
											"end": 8151,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8135,
											"end": 8141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8124,
											"end": 8133,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8120,
											"end": 8142,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8089,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 8089,
											"end": 8152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8089,
											"end": 8152,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8089,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8079,
											"end": 8152,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8079,
											"end": 8152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7875,
											"end": 8162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8201,
											"end": 8203,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 8272,
											"end": 8279,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8263,
											"end": 8269,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8248,
											"end": 8270,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8227,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 8227,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8227,
											"end": 8280,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 8227,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8217,
											"end": 8280,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8217,
											"end": 8280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8172,
											"end": 8290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8329,
											"end": 8331,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8391,
											"end": 8397,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8376,
											"end": 8398,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 8355,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 8355,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8345,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8300,
											"end": 8418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8490,
											"end": 8496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8541,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8518,
											"end": 8525,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8514,
											"end": 8537,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8510,
											"end": 8542,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8626,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8507,
											"end": 8626,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 8545,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8626,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8507,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 8735,
											"end": 8742,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8726,
											"end": 8732,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8715,
											"end": 8724,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8711,
											"end": 8733,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 8690,
											"end": 8743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8743,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 8690,
											"end": 8743,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8680,
											"end": 8743,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8680,
											"end": 8743,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8636,
											"end": 8753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8431,
											"end": 8760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8766,
											"end": 8884,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 8766,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 8871,
											"end": 8876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 8853,
											"end": 8877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 8853,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8841,
											"end": 8878,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8766,
											"end": 8884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8766,
											"end": 8884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8766,
											"end": 8884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8983,
											"end": 8987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9023,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8998,
											"end": 9024,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8998,
											"end": 9024,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9034,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 9102,
											"end": 9103,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9091,
											"end": 9100,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9087,
											"end": 9104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9078,
											"end": 9084,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9034,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 9034,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9034,
											"end": 9105,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 9034,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8890,
											"end": 9112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9118,
											"end": 9234,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 9118,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9188,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9188,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 9188,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9188,
											"end": 9209,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 9188,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9181,
											"end": 9186,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9210,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9168,
											"end": 9228,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 9168,
											"end": 9228,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9214,
											"end": 9226,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9168,
											"end": 9228,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 9168,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9118,
											"end": 9234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9118,
											"end": 9234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9283,
											"end": 9288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9327,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9328,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9299,
											"end": 9328,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9299,
											"end": 9328,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 9361,
											"end": 9366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 9337,
											"end": 9367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 9337,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9240,
											"end": 9373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9444,
											"end": 9450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9501,
											"end": 9503,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9487,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9472,
											"end": 9504,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9469,
											"end": 9588,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9469,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 9469,
											"end": 9588,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 9507,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 9507,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9586,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 9507,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9469,
											"end": 9588,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 9469,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9697,
											"end": 9704,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9677,
											"end": 9686,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9673,
											"end": 9695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9652,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 9652,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9652,
											"end": 9705,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9652,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 9705,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9642,
											"end": 9705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9598,
											"end": 9715,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 9822,
											"end": 9829,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9813,
											"end": 9819,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9802,
											"end": 9811,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9798,
											"end": 9820,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9780,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 9780,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9780,
											"end": 9830,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 9780,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 9830,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9770,
											"end": 9830,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9725,
											"end": 9840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9853,
											"end": 10160,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 9853,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9914,
											"end": 9918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9996,
											"end": 10002,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10023,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9990,
											"end": 10046,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9990,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 9990,
											"end": 10046,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 10026,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9990,
											"end": 10046,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 9990,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10064,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10064,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 10064,
											"end": 10093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10064,
											"end": 10093,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 10064,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10056,
											"end": 10093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10056,
											"end": 10093,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10148,
											"end": 10152,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10146,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10138,
											"end": 10153,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10130,
											"end": 10153,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10130,
											"end": 10153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9853,
											"end": 10160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9853,
											"end": 10160,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9853,
											"end": 10160,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9853,
											"end": 10160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10243,
											"end": 10248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10268,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 10284,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 10325,
											"end": 10331,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10284,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 10284,
											"end": 10332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10284,
											"end": 10332,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 10284,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 10268,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10268,
											"end": 10333,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 10268,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10259,
											"end": 10333,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10259,
											"end": 10333,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10356,
											"end": 10362,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10349,
											"end": 10354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10342,
											"end": 10363,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10394,
											"end": 10398,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10392,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10383,
											"end": 10399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10432,
											"end": 10435,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10414,
											"end": 10430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10411,
											"end": 10436,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10408,
											"end": 10520,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10408,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 10408,
											"end": 10520,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10439,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 10439,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 10439,
											"end": 10518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10439,
											"end": 10518,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 10439,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10408,
											"end": 10520,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 10408,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10529,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 10576,
											"end": 10582,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10571,
											"end": 10574,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10566,
											"end": 10569,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10529,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 10529,
											"end": 10583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10529,
											"end": 10583,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 10529,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10249,
											"end": 10589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10166,
											"end": 10589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10663,
											"end": 10668,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10689,
											"end": 10716,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10679,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 10679,
											"end": 10801,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 10720,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 10720,
											"end": 10799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10799,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 10720,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10679,
											"end": 10801,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 10679,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10837,
											"end": 10843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10824,
											"end": 10844,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 10862,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 10936,
											"end": 10939,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10921,
											"end": 10925,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10909,
											"end": 10926,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10862,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 10862,
											"end": 10940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10862,
											"end": 10940,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 10862,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10853,
											"end": 10940,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10853,
											"end": 10940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10669,
											"end": 10946,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10608,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11061,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11063,
											"end": 11069,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11120,
											"end": 11123,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 11108,
											"end": 11117,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11099,
											"end": 11106,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11095,
											"end": 11118,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11091,
											"end": 11124,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11208,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 11088,
											"end": 11208,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11127,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 11127,
											"end": 11206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 11127,
											"end": 11206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11127,
											"end": 11206,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 11127,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11208,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 11088,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11247,
											"end": 11248,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 11317,
											"end": 11324,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11308,
											"end": 11314,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11297,
											"end": 11306,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11293,
											"end": 11315,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 11272,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 11272,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11262,
											"end": 11325,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11262,
											"end": 11325,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11374,
											"end": 11376,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 11445,
											"end": 11452,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11436,
											"end": 11442,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11421,
											"end": 11443,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11400,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 11400,
											"end": 11453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11400,
											"end": 11453,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 11400,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11390,
											"end": 11453,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11390,
											"end": 11453,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11345,
											"end": 11463,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11504,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 11573,
											"end": 11580,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11564,
											"end": 11570,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11553,
											"end": 11562,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11549,
											"end": 11571,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 11528,
											"end": 11581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 11528,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11518,
											"end": 11581,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11518,
											"end": 11581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11473,
											"end": 11591,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11658,
											"end": 11660,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11643,
											"end": 11661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11630,
											"end": 11662,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11681,
											"end": 11687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11678,
											"end": 11708,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11675,
											"end": 11792,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11675,
											"end": 11792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11675,
											"end": 11792,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11711,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11711,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 11711,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11711,
											"end": 11790,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11711,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11675,
											"end": 11792,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11675,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 11870,
											"end": 11877,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11861,
											"end": 11867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11850,
											"end": 11859,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 11846,
											"end": 11868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 11816,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11878,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 11816,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11806,
											"end": 11878,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11806,
											"end": 11878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11601,
											"end": 11888,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10952,
											"end": 11895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12070,
											"end": 12074,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12085,
											"end": 12111,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12085,
											"end": 12111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12157,
											"end": 12166,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12151,
											"end": 12155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12167,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12144,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12132,
											"end": 12141,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12128,
											"end": 12145,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12121,
											"end": 12168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12185,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 12258,
											"end": 12262,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12249,
											"end": 12255,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12185,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 12185,
											"end": 12263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12185,
											"end": 12263,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 12185,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12177,
											"end": 12263,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12177,
											"end": 12263,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12273,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 12341,
											"end": 12343,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12330,
											"end": 12339,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12317,
											"end": 12323,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12273,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 12273,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12273,
											"end": 12345,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 12273,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12355,
											"end": 12427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12412,
											"end": 12421,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12399,
											"end": 12405,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12355,
											"end": 12427,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 12355,
											"end": 12427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12355,
											"end": 12427,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12355,
											"end": 12427,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12508,
											"end": 12514,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12516,
											"end": 12522,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12565,
											"end": 12567,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12553,
											"end": 12562,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12544,
											"end": 12551,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12540,
											"end": 12563,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12536,
											"end": 12568,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12533,
											"end": 12652,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12533,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 12533,
											"end": 12652,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12571,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12571,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 12571,
											"end": 12650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12571,
											"end": 12650,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12571,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12533,
											"end": 12652,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 12533,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12691,
											"end": 12692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 12761,
											"end": 12768,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12752,
											"end": 12758,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12737,
											"end": 12759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 12716,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12662,
											"end": 12779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12818,
											"end": 12820,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12844,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12889,
											"end": 12896,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12880,
											"end": 12886,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12869,
											"end": 12878,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12865,
											"end": 12887,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12844,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 12844,
											"end": 12897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12844,
											"end": 12897,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12844,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12834,
											"end": 12897,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12834,
											"end": 12897,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12789,
											"end": 12907,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12440,
											"end": 12914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12920,
											"end": 13100,
											"name": "tag",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 12920,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12968,
											"end": 13045,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12965,
											"end": 12966,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 13046,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 13062,
											"end": 13063,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13055,
											"end": 13070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13089,
											"end": 13093,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13094,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13106,
											"end": 13426,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 13106,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13150,
											"end": 13156,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 13181,
											"end": 13185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13177,
											"end": 13189,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 13167,
											"end": 13189,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13167,
											"end": 13189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13234,
											"end": 13235,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 13228,
											"end": 13232,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13224,
											"end": 13236,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13255,
											"end": 13273,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13245,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13245,
											"end": 13326,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 13303,
											"end": 13309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13299,
											"end": 13316,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13289,
											"end": 13316,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13289,
											"end": 13316,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13245,
											"end": 13326,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13245,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13373,
											"end": 13375,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13371,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13362,
											"end": 13376,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 13342,
											"end": 13360,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13339,
											"end": 13377,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13336,
											"end": 13420,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13392,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 13392,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 13392,
											"end": 13410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13392,
											"end": 13410,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 13392,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13420,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13336,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13157,
											"end": 13426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13106,
											"end": 13426,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13106,
											"end": 13426,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13106,
											"end": 13426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13106,
											"end": 13426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13581,
											"end": 13585,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13619,
											"end": 13621,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13608,
											"end": 13617,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13596,
											"end": 13622,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13596,
											"end": 13622,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13632,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13698,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13685,
											"end": 13702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13632,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 13632,
											"end": 13703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13632,
											"end": 13703,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 13632,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13713,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13781,
											"end": 13783,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13770,
											"end": 13779,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13757,
											"end": 13763,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13713,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 13713,
											"end": 13785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13713,
											"end": 13785,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13713,
											"end": 13785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 13863,
											"end": 13865,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13852,
											"end": 13861,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13848,
											"end": 13866,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 13795,
											"end": 13867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13867,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 13795,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 14021,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 13880,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13952,
											"end": 13955,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13944,
											"end": 13955,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13944,
											"end": 13955,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13975,
											"end": 13978,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13972,
											"end": 13973,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13965,
											"end": 13979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14009,
											"end": 14013,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 14014,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 13988,
											"end": 14014,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13988,
											"end": 14014,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 14021,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 14021,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 14021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13880,
											"end": 14021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14064,
											"end": 14070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14113,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14106,
											"end": 14108,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 14099,
											"end": 14104,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14095,
											"end": 14109,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14091,
											"end": 14114,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 14081,
											"end": 14114,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14081,
											"end": 14114,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14027,
											"end": 14120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14027,
											"end": 14120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14170,
											"end": 14178,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14214,
											"end": 14218,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14210,
											"end": 14226,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14226,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14126,
											"end": 14233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14358,
											"end": 14359,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 14346,
											"end": 14356,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 14381,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 14411,
											"end": 14477,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14400,
											"end": 14409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14381,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 14381,
											"end": 14478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14381,
											"end": 14478,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 14381,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14538,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 14529,
											"end": 14537,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14518,
											"end": 14527,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14538,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 14499,
											"end": 14538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14499,
											"end": 14538,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 14499,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14487,
											"end": 14538,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 14487,
											"end": 14538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14571,
											"end": 14575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14567,
											"end": 14576,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14556,
											"end": 14577,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14547,
											"end": 14577,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14547,
											"end": 14577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14610,
											"end": 14618,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14599,
											"end": 14604,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14596,
											"end": 14626,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 14586,
											"end": 14626,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14586,
											"end": 14626,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14315,
											"end": 14632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14315,
											"end": 14632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14239,
											"end": 14632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14687,
											"end": 14692,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14638,
											"end": 14698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14638,
											"end": 14698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14704,
											"end": 14846,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 14704,
											"end": 14846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14754,
											"end": 14763,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14787,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 14805,
											"end": 14839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14832,
											"end": 14837,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 14814,
											"end": 14838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14814,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14805,
											"end": 14839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 14805,
											"end": 14839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14805,
											"end": 14839,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 14805,
											"end": 14839,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14787,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 14787,
											"end": 14840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14787,
											"end": 14840,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 14787,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14774,
											"end": 14840,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14774,
											"end": 14840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14704,
											"end": 14846,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14704,
											"end": 14846,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14704,
											"end": 14846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14704,
											"end": 14846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14852,
											"end": 14927,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 14852,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14895,
											"end": 14898,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14909,
											"end": 14921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14852,
											"end": 14927,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14852,
											"end": 14927,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14852,
											"end": 14927,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14852,
											"end": 14927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14933,
											"end": 15202,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 14933,
											"end": 15202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15043,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 15074,
											"end": 15081,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15043,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 15043,
											"end": 15082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15043,
											"end": 15082,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 15043,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15104,
											"end": 15195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 15153,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 15177,
											"end": 15193,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15153,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 15153,
											"end": 15194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15153,
											"end": 15194,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 15153,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15145,
											"end": 15151,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15138,
											"end": 15142,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15132,
											"end": 15143,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 15104,
											"end": 15195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 15104,
											"end": 15195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15104,
											"end": 15195,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 15104,
											"end": 15195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15102,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15091,
											"end": 15196,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 15009,
											"end": 15202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14933,
											"end": 15202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14933,
											"end": 15202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14933,
											"end": 15202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14933,
											"end": 15202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15208,
											"end": 15281,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 15208,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15253,
											"end": 15256,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15208,
											"end": 15281,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15208,
											"end": 15281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15287,
											"end": 15476,
											"name": "tag",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 15287,
											"end": 15476,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15364,
											"end": 15396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 15364,
											"end": 15396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 15364,
											"end": 15396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15364,
											"end": 15396,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 15364,
											"end": 15396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15405,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 15463,
											"end": 15469,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15455,
											"end": 15461,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15449,
											"end": 15453,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15405,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 15405,
											"end": 15470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15405,
											"end": 15470,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 15405,
											"end": 15470,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15340,
											"end": 15476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15287,
											"end": 15476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15287,
											"end": 15476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15287,
											"end": 15476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15668,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 15482,
											"end": 15668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15559,
											"end": 15562,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15552,
											"end": 15557,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15549,
											"end": 15563,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15613,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 15650,
											"end": 15651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15648,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15613,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 15613,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15613,
											"end": 15652,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 15613,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15586,
											"end": 15587,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 15579,
											"end": 15584,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15575,
											"end": 15588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15566,
											"end": 15588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15566,
											"end": 15588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 15542,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15674,
											"end": 16217,
											"name": "tag",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 15674,
											"end": 16217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15775,
											"end": 15777,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 15770,
											"end": 15773,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15767,
											"end": 15778,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15764,
											"end": 16210,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15764,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 15764,
											"end": 16210,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 15841,
											"end": 15846,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 15809,
											"end": 15847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15847,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 15809,
											"end": 15847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15893,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 15911,
											"end": 15921,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15893,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 15893,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15893,
											"end": 15922,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 15893,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15883,
											"end": 15891,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15879,
											"end": 15923,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16076,
											"end": 16078,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16064,
											"end": 16074,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16061,
											"end": 16079,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 16058,
											"end": 16107,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16058,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 16058,
											"end": 16107,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16097,
											"end": 16105,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16105,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16058,
											"end": 16107,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 16058,
											"end": 16107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16120,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 16194,
											"end": 16197,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 16176,
											"end": 16198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16166,
											"end": 16174,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16162,
											"end": 16199,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16149,
											"end": 16160,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16120,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 16120,
											"end": 16200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16120,
											"end": 16200,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 16120,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15779,
											"end": 16210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15779,
											"end": 16210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15764,
											"end": 16210,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 15764,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15674,
											"end": 16217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15674,
											"end": 16217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15674,
											"end": 16217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15674,
											"end": 16217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16277,
											"end": 16285,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16327,
											"end": 16332,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16317,
											"end": 16333,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 16296,
											"end": 16333,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16296,
											"end": 16333,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16223,
											"end": 16340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16390,
											"end": 16396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16423,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 16471,
											"end": 16472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16467,
											"end": 16473,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 16459,
											"end": 16464,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16456,
											"end": 16457,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 16452,
											"end": 16465,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 16423,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 16423,
											"end": 16474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16423,
											"end": 16474,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 16423,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16475,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 16504,
											"end": 16508,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16484,
											"end": 16509,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16484,
											"end": 16509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16397,
											"end": 16515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16346,
											"end": 16515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "tag",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16596,
											"end": 16600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16742,
											"end": 16771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 16767,
											"end": 16770,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16761,
											"end": 16765,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16742,
											"end": 16771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 16742,
											"end": 16771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16742,
											"end": 16771,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 16742,
											"end": 16771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16734,
											"end": 16771,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16804,
											"end": 16807,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16801,
											"end": 16802,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 16797,
											"end": 16808,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 16791,
											"end": 16795,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16788,
											"end": 16809,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 16780,
											"end": 16809,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16780,
											"end": 16809,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16520,
											"end": 16815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 18215,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 16820,
											"end": 18215,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 16970,
											"end": 16973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 16937,
											"end": 16974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 16974,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 16937,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17039,
											"end": 17057,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17031,
											"end": 17037,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17028,
											"end": 17058,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 17025,
											"end": 17081,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17025,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 17025,
											"end": 17081,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17061,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17061,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 17061,
											"end": 17079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17061,
											"end": 17079,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17061,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17025,
											"end": 17081,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 17025,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17105,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 17137,
											"end": 17141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17131,
											"end": 17142,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 17105,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 17105,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17105,
											"end": 17143,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 17105,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17250,
											"end": 17256,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17242,
											"end": 17248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17236,
											"end": 17240,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 17190,
											"end": 17257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17257,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17190,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17284,
											"end": 17285,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17312,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17295,
											"end": 17312,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17295,
											"end": 17312,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17340,
											"end": 17342,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 17332,
											"end": 17338,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17329,
											"end": 17343,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 17357,
											"end": 17358,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18014,
											"end": 18015,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18031,
											"end": 18037,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18028,
											"end": 18105,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18028,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 18028,
											"end": 18105,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18080,
											"end": 18089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18075,
											"end": 18078,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 18071,
											"end": 18090,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18065,
											"end": 18091,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 18056,
											"end": 18091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18056,
											"end": 18091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18028,
											"end": 18105,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 18028,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18131,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 18191,
											"end": 18197,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18184,
											"end": 18189,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18131,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 18131,
											"end": 18198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18131,
											"end": 18198,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 18131,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 18118,
											"end": 18199,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 17987,
											"end": 18209,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17322,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 17322,
											"end": 18209,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 17352,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17404,
											"end": 17408,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 17400,
											"end": 17409,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 17392,
											"end": 17398,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17388,
											"end": 17410,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17438,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 17470,
											"end": 17474,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 17438,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 17438,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17438,
											"end": 17475,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 17438,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17525,
											"end": 17532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17522,
											"end": 17523,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17519,
											"end": 17533,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17604,
											"end": 17613,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17599,
											"end": 17602,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 17595,
											"end": 17614,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17589,
											"end": 17615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17581,
											"end": 17587,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17574,
											"end": 17616,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 17655,
											"end": 17656,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17647,
											"end": 17653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17643,
											"end": 17657,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17702,
											"end": 17704,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17691,
											"end": 17700,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17687,
											"end": 17705,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17674,
											"end": 17705,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 17674,
											"end": 17705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17548,
											"end": 17552,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17545,
											"end": 17546,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17541,
											"end": 17553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17536,
											"end": 17553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17536,
											"end": 17553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 17511,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17747,
											"end": 17753,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 17738,
											"end": 17745,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17735,
											"end": 17754,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17732,
											"end": 17911,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17732,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 17732,
											"end": 17911,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17805,
											"end": 17814,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17800,
											"end": 17803,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 17796,
											"end": 17815,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17790,
											"end": 17816,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 17882,
											"end": 17888,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 17848,
											"end": 17896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17840,
											"end": 17846,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17833,
											"end": 17897,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 17755,
											"end": 17911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17732,
											"end": 17911,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 17732,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17953,
											"end": 17954,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 17941,
											"end": 17955,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 17937,
											"end": 17959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 17935,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 17924,
											"end": 17960,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 17359,
											"end": 17970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17359,
											"end": 17970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17359,
											"end": 17970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17322,
											"end": 18209,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 17322,
											"end": 18209,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17322,
											"end": 18209,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 18215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 18215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16912,
											"end": 18215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 18215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 18215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16820,
											"end": 18215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18221,
											"end": 18401,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 18221,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18269,
											"end": 18346,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18266,
											"end": 18267,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18259,
											"end": 18347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18366,
											"end": 18370,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 18363,
											"end": 18364,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 18356,
											"end": 18371,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18390,
											"end": 18394,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18387,
											"end": 18388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18380,
											"end": 18395,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 18407,
											"end": 18640,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 18407,
											"end": 18640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18446,
											"end": 18449,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18469,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 18487,
											"end": 18492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18469,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 18469,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18469,
											"end": 18493,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 18469,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18460,
											"end": 18493,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18460,
											"end": 18493,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18515,
											"end": 18581,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18508,
											"end": 18513,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18505,
											"end": 18582,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18502,
											"end": 18605,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 18502,
											"end": 18605,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18585,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 18585,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 18585,
											"end": 18603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18585,
											"end": 18603,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 18585,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18502,
											"end": 18605,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 18502,
											"end": 18605,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18632,
											"end": 18633,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 18625,
											"end": 18630,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18621,
											"end": 18634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18614,
											"end": 18634,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18614,
											"end": 18634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18407,
											"end": 18640,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18407,
											"end": 18640,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18407,
											"end": 18640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18407,
											"end": 18640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18843,
											"end": 18847,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18884,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 18870,
											"end": 18879,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18866,
											"end": 18885,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18858,
											"end": 18885,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18858,
											"end": 18885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18895,
											"end": 18966,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 18963,
											"end": 18964,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18952,
											"end": 18961,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18948,
											"end": 18965,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18939,
											"end": 18945,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 18895,
											"end": 18966,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 18895,
											"end": 18966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18895,
											"end": 18966,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 18895,
											"end": 18966,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 19022,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19007,
											"end": 19011,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19003,
											"end": 19023,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18998,
											"end": 19000,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18987,
											"end": 18996,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18983,
											"end": 19001,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18976,
											"end": 19024,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19041,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 19114,
											"end": 19118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19105,
											"end": 19111,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19041,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 19041,
											"end": 19119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19041,
											"end": 19119,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 19041,
											"end": 19119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19033,
											"end": 19119,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19033,
											"end": 19119,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19129,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 19197,
											"end": 19199,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19186,
											"end": 19195,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19182,
											"end": 19200,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19173,
											"end": 19179,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19129,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 19129,
											"end": 19201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19129,
											"end": 19201,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 19129,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 19279,
											"end": 19281,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 19268,
											"end": 19277,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19264,
											"end": 19282,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19255,
											"end": 19261,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 19211,
											"end": 19283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18646,
											"end": 19290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "tag",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19398,
											"end": 19409,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19435,
											"end": 19438,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19420,
											"end": 19438,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19420,
											"end": 19438,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19556,
											"end": 19559,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19584,
											"end": 19623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 19617,
											"end": 19622,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19584,
											"end": 19623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 19584,
											"end": 19623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19584,
											"end": 19623,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 19584,
											"end": 19623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19639,
											"end": 19728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 19721,
											"end": 19727,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19716,
											"end": 19719,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19639,
											"end": 19728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 19639,
											"end": 19728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19639,
											"end": 19728,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 19639,
											"end": 19728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19632,
											"end": 19728,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19632,
											"end": 19728,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19737,
											"end": 19802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 19795,
											"end": 19801,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19790,
											"end": 19793,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19783,
											"end": 19787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19776,
											"end": 19781,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19772,
											"end": 19788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19737,
											"end": 19802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 19737,
											"end": 19802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19737,
											"end": 19802,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 19737,
											"end": 19802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19827,
											"end": 19833,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19822,
											"end": 19825,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19818,
											"end": 19834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19811,
											"end": 19834,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19811,
											"end": 19834,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19560,
											"end": 19840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19450,
											"end": 19840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20026,
											"end": 20029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20048,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 20139,
											"end": 20142,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20130,
											"end": 20136,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20048,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 20048,
											"end": 20143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20048,
											"end": 20143,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 20048,
											"end": 20143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20041,
											"end": 20143,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20041,
											"end": 20143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20160,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 20251,
											"end": 20254,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20242,
											"end": 20248,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20160,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 20160,
											"end": 20255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20160,
											"end": 20255,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 20160,
											"end": 20255,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20153,
											"end": 20255,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20153,
											"end": 20255,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20272,
											"end": 20275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20265,
											"end": 20275,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20265,
											"end": 20275,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 20281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20287,
											"end": 20457,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 20287,
											"end": 20457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20427,
											"end": 20449,
											"name": "PUSH",
											"source": 17,
											"value": "436861726163746572206E6F74206D696E746564000000000000000000000000"
										},
										{
											"begin": 20423,
											"end": 20424,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20415,
											"end": 20421,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20411,
											"end": 20425,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20404,
											"end": 20450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20287,
											"end": 20457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20287,
											"end": 20457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20463,
											"end": 20829,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 20463,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20605,
											"end": 20608,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 20690,
											"end": 20692,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 20685,
											"end": 20688,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20626,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 20626,
											"end": 20693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20626,
											"end": 20693,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 20626,
											"end": 20693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20619,
											"end": 20693,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20619,
											"end": 20693,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20702,
											"end": 20795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 20791,
											"end": 20794,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20702,
											"end": 20795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 20702,
											"end": 20795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20702,
											"end": 20795,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 20702,
											"end": 20795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20820,
											"end": 20822,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20815,
											"end": 20818,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20811,
											"end": 20823,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20804,
											"end": 20823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20804,
											"end": 20823,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20463,
											"end": 20829,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20463,
											"end": 20829,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20463,
											"end": 20829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20463,
											"end": 20829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20835,
											"end": 21254,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 20835,
											"end": 21254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21001,
											"end": 21005,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21039,
											"end": 21041,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21028,
											"end": 21037,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21024,
											"end": 21042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21016,
											"end": 21042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21016,
											"end": 21042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21088,
											"end": 21097,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21086,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21078,
											"end": 21098,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21074,
											"end": 21075,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21063,
											"end": 21072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21059,
											"end": 21076,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21052,
											"end": 21099,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21116,
											"end": 21247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 21242,
											"end": 21246,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21116,
											"end": 21247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 21116,
											"end": 21247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21116,
											"end": 21247,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 21116,
											"end": 21247,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21108,
											"end": 21247,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21108,
											"end": 21247,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20835,
											"end": 21254,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20835,
											"end": 21254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20835,
											"end": 21254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20835,
											"end": 21254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21260,
											"end": 21358,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 21260,
											"end": 21358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21311,
											"end": 21317,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21345,
											"end": 21350,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21339,
											"end": 21351,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 21329,
											"end": 21351,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21329,
											"end": 21351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21260,
											"end": 21358,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21260,
											"end": 21358,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21260,
											"end": 21358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21260,
											"end": 21358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21447,
											"end": 21458,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21481,
											"end": 21487,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21476,
											"end": 21479,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21469,
											"end": 21488,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21521,
											"end": 21525,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21516,
											"end": 21519,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21512,
											"end": 21526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21497,
											"end": 21526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21497,
											"end": 21526,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21364,
											"end": 21532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21624,
											"end": 21627,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21652,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 21684,
											"end": 21689,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21652,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 21652,
											"end": 21690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21652,
											"end": 21690,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 21652,
											"end": 21690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21706,
											"end": 21776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 21769,
											"end": 21775,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21764,
											"end": 21767,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21706,
											"end": 21776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 21706,
											"end": 21776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21706,
											"end": 21776,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 21706,
											"end": 21776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21699,
											"end": 21776,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 21699,
											"end": 21776,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21785,
											"end": 21850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 21843,
											"end": 21849,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21838,
											"end": 21841,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 21831,
											"end": 21835,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21824,
											"end": 21829,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 21820,
											"end": 21836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21785,
											"end": 21850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 21785,
											"end": 21850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21785,
											"end": 21850,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 21785,
											"end": 21850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21875,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 21897,
											"end": 21903,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21875,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 21875,
											"end": 21904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21875,
											"end": 21904,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 21875,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21870,
											"end": 21873,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21866,
											"end": 21905,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21859,
											"end": 21905,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21859,
											"end": 21905,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21628,
											"end": 21911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22112,
											"end": 22116,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22150,
											"end": 22153,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 22139,
											"end": 22148,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22135,
											"end": 22154,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22127,
											"end": 22154,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22127,
											"end": 22154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22164,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 22232,
											"end": 22233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22221,
											"end": 22230,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22217,
											"end": 22234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22208,
											"end": 22214,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 22164,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 22164,
											"end": 22235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22164,
											"end": 22235,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 22164,
											"end": 22235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22245,
											"end": 22317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 22313,
											"end": 22315,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22302,
											"end": 22311,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22298,
											"end": 22316,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22289,
											"end": 22295,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22245,
											"end": 22317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 22245,
											"end": 22317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22245,
											"end": 22317,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 22245,
											"end": 22317,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22327,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 22395,
											"end": 22397,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 22384,
											"end": 22393,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22380,
											"end": 22398,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22371,
											"end": 22377,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 22327,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 22327,
											"end": 22399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22327,
											"end": 22399,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 22327,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22446,
											"end": 22455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22440,
											"end": 22444,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22436,
											"end": 22456,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22431,
											"end": 22433,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 22420,
											"end": 22429,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22416,
											"end": 22434,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22409,
											"end": 22457,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22474,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 22545,
											"end": 22549,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22536,
											"end": 22542,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22474,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 22474,
											"end": 22550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22474,
											"end": 22550,
											"name": "tag",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 22474,
											"end": 22550,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22466,
											"end": 22550,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22466,
											"end": 22550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21917,
											"end": 22557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "tag",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22619,
											"end": 22624,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22650,
											"end": 22656,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22644,
											"end": 22657,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 22635,
											"end": 22657,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22635,
											"end": 22657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22666,
											"end": 22698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 22692,
											"end": 22697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22666,
											"end": 22698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 22666,
											"end": 22698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22666,
											"end": 22698,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 22666,
											"end": 22698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22563,
											"end": 22704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22779,
											"end": 22785,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22828,
											"end": 22830,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22816,
											"end": 22825,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22807,
											"end": 22814,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22803,
											"end": 22826,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22799,
											"end": 22831,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 22796,
											"end": 22915,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22796,
											"end": 22915,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 22796,
											"end": 22915,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22834,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 22834,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 22834,
											"end": 22913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22834,
											"end": 22913,
											"name": "tag",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 22834,
											"end": 22913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22796,
											"end": 22915,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 22796,
											"end": 22915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22954,
											"end": 22955,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22979,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 23034,
											"end": 23041,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23025,
											"end": 23031,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23014,
											"end": 23023,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23010,
											"end": 23032,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22979,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 22979,
											"end": 23042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22979,
											"end": 23042,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 22979,
											"end": 23042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 23042,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 23042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22925,
											"end": 23052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22710,
											"end": 23059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23065,
											"end": 23245,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 23065,
											"end": 23245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23113,
											"end": 23190,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23110,
											"end": 23111,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23103,
											"end": 23191,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23210,
											"end": 23214,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 23207,
											"end": 23208,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 23200,
											"end": 23215,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23234,
											"end": 23238,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 23231,
											"end": 23232,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23224,
											"end": 23239,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23372,
											"end": 23376,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23410,
											"end": 23412,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 23399,
											"end": 23408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23395,
											"end": 23413,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23387,
											"end": 23413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23387,
											"end": 23413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23423,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 23491,
											"end": 23492,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23480,
											"end": 23489,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23476,
											"end": 23493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23467,
											"end": 23473,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23423,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 23423,
											"end": 23494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23423,
											"end": 23494,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 23423,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 23572,
											"end": 23574,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23561,
											"end": 23570,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23557,
											"end": 23575,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23548,
											"end": 23554,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 23504,
											"end": 23576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23504,
											"end": 23576,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 23504,
											"end": 23576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23251,
											"end": 23583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
								"nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getCharacterAttributes(uint256)": "d0e60cff",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isCharacterMinted(uint256)": "9756aadd",
							"mintCharacter(string,uint256,uint256)": "5091df62",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"CharacterMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCharacterAttributes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isCharacterMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"mintCharacter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft.sol\":\"GameCharacterNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.0/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"nft.sol\":{\"keccak256\":\"0x4a3793aad27247516990d9e8f082237d4dce1a2c6cb9dc3642b259a0d08bcce2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a7813d1defc2e53c41c33d83caa1bcb0aa48f3318b5f474528762b20085244e\",\"dweb:/ipfs/QmRr4c1f5VPT2WdRSchsR5xsimiVCzGZQd2aR6HrapChaM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3109,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 3111,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "tokenIdCounter",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3115,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "characterMinted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 3120,
								"contract": "nft.sol:GameCharacterNFT",
								"label": "characterAttributes",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(CharacterAttributes)3127_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(CharacterAttributes)3127_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GameCharacterNFT.CharacterAttributes)",
								"numberOfBytes": "32",
								"value": "t_struct(CharacterAttributes)3127_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CharacterAttributes)3127_storage": {
								"encoding": "inplace",
								"label": "struct GameCharacterNFT.CharacterAttributes",
								"members": [
									{
										"astId": 3122,
										"contract": "nft.sol:GameCharacterNFT",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 3124,
										"contract": "nft.sol:GameCharacterNFT",
										"label": "level",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3126,
										"contract": "nft.sol:GameCharacterNFT",
										"label": "power",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1637,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1636,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1636
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1927
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1928,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1927
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1927,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								1927
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"ERC165": [
							1915
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							1927
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1891
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1637,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1636,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1892,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1891,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1916,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1915,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1915,
								1927,
								1636
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1891,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1914,
										1926
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1914,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1915,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1704,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1927
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 1928,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1927,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								1927
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							1927
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1891
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1892,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1891,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1915,
								1927,
								1636
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1891,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										1926
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1927,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1586,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1586,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1586,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "431:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								1927
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1614,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1614,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1614,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1636
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1636,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1636,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1637,
							"src": "624:235:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.0.0/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2981
						],
						"SignedMath": [
							3086
						],
						"Strings": [
							1891
						]
					},
					"id": 1892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 2982,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1639,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2981,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 3087,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1641,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3086,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1643,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1891,
							"linearizedBaseContracts": [
								1891
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1646,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "273:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1644,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1649,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "335:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1647,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1648,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1656,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "505:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:11"
									},
									"src": "470:66:11"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "708:627:11",
										"statements": [
											{
												"id": 1702,
												"nodeType": "UncheckedBlock",
												"src": "718:611:11",
												"statements": [
													{
														"assignments": [
															1665
														],
														"declarations": [
															{
																"constant": false,
																"id": 1665,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1702,
																"src": "742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1664,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1672,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1668,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1659,
																		"src": "770:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1666,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2981,
																		"src": "759:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2981_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2801,
																	"src": "759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:11"
													},
													{
														"assignments": [
															1674
														],
														"declarations": [
															{
																"constant": false,
																"id": 1674,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1702,
																"src": "794:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1673,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1679,
														"initialValue": {
															"arguments": [
																{
																	"id": 1677,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1675,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:11"
													},
													{
														"assignments": [
															1681
														],
														"declarations": [
															{
																"constant": false,
																"id": 1681,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1702,
																"src": "849:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1682,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:11"
													},
													{
														"AST": {
															"nativeSrc": "930:67:11",
															"nodeType": "YulBlock",
															"src": "930:67:11",
															"statements": [
																{
																	"nativeSrc": "948:35:11",
																	"nodeType": "YulAssignment",
																	"src": "948:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:11",
																						"nodeType": "YulLiteral",
																						"src": "971:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:11"
																				},
																				"nativeSrc": "967:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1674,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1665,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1681,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:11",
																"valueSize": 1
															}
														],
														"id": 1683,
														"nodeType": "InlineAssembly",
														"src": "921:76:11"
													},
													{
														"body": {
															"id": 1698,
															"nodeType": "Block",
															"src": "1023:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:11",
																		"subExpression": {
																			"id": 1685,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1681,
																			"src": "1041:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:11",
																		"nodeType": "YulBlock",
																		"src": "1124:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:11"
																									},
																									"nativeSrc": "1164:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:11"
																							},
																							"nativeSrc": "1159:32:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:11"
																					},
																					"nativeSrc": "1146:46:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:11"
																				},
																				"nativeSrc": "1146:46:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1646,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1681,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1659,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1688,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:11"
																},
																{
																	"expression": {
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1689,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "1227:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1692,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "1260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1697,
																	"nodeType": "IfStatement",
																	"src": "1256:21:11",
																	"trueBody": {
																		"id": 1696,
																		"nodeType": "Break",
																		"src": "1272:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1699,
														"nodeType": "WhileStatement",
														"src": "1010:282:11"
													},
													{
														"expression": {
															"id": 1700,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1663,
														"id": 1701,
														"nodeType": "Return",
														"src": "1305:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "655:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:11"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:11"
									},
									"scope": 1891,
									"src": "637:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "1511:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1715,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "1542:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "1588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1722,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3086,
																			"src": "1573:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3086_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3085,
																		"src": "1573:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1721,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "1564:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1712,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1728,
												"nodeType": "Return",
												"src": "1521:75:11"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "1459:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:11"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "1496:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:11"
									},
									"scope": 1891,
									"src": "1435:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "1782:100:11",
										"statements": [
											{
												"id": 1748,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "1835:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1742,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1733,
																				"src": "1854:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1740,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2981,
																				"src": "1842:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2981_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2923,
																			"src": "1842:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1738,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1750,
																	1833,
																	1853
																],
																"referencedDeclaration": 1833,
																"src": "1823:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1737,
														"id": 1747,
														"nodeType": "Return",
														"src": "1816:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1729:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:11"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1767:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:11"
									},
									"scope": 1891,
									"src": "1708:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "2095:435:11",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "2105:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"id": 1762,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1753,
													"src": "2126:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:11"
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "2141:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1769,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "2177:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1766,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:11"
											},
											{
												"expression": {
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1775,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2198:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1777,
														"indexExpression": {
															"hexValue": "30",
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:11"
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1781,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2223:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1783,
														"indexExpression": {
															"hexValue": "31",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:11"
											},
											{
												"body": {
													"id": 1815,
													"nodeType": "Block",
													"src": "2293:95:11",
													"statements": [
														{
															"expression": {
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1801,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "2307:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1803,
																	"indexExpression": {
																		"id": 1802,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "2314:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1804,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "2319:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1808,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1805,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1761,
																			"src": "2330:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1810,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:11"
														},
														{
															"expression": {
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1811,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "2361:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1814,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "2281:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1816,
												"initializationExpression": {
													"assignments": [
														1788
													],
													"declarations": [
														{
															"constant": false,
															"id": 1788,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1816,
															"src": "2253:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1787,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1794,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1790,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1755,
																"src": "2269:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:11",
														"subExpression": {
															"id": 1798,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "2290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1800,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1817,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "2401:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "2397:96:11",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "2418:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1821,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1753,
																		"src": "2468:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1822,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "2475:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1820,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "2439:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1824,
															"nodeType": "RevertStatement",
															"src": "2432:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1829,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "2516:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1827,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1759,
												"id": 1831,
												"nodeType": "Return",
												"src": "2502:21:11"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2026:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2041:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:11"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "2080:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:11"
									},
									"scope": 1891,
									"src": "2005:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "2762:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1846,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "2807:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1844,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1842,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1849,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "2815:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1841,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1750,
															1833,
															1853
														],
														"referencedDeclaration": 1833,
														"src": "2779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1851,
												"nodeType": "Return",
												"src": "2772:58:11"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2710:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:11"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2747:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1838,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:11"
									},
									"scope": 1891,
									"src": "2689:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "2992:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "3015:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1863,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1870,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "3034:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1868,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1877,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1856,
																			"src": "3063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1875,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1874,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1883,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1858,
																			"src": "3086:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1881,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1880,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1888,
												"nodeType": "Return",
												"src": "3002:87:11"
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2929:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2946:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:11"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2986:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:11"
									},
									"scope": 1891,
									"src": "2914:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1892,
							"src": "251:2847:11",
							"usedErrors": [
								1656
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1915
						],
						"IERC165": [
							1927
						]
					},
					"id": 1916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1916,
							"sourceUnit": 1928,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1894,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1927,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1897,
										"name": "IERC165",
										"nameLocations": [
											"687:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1927,
										"src": "687:7:12"
									},
									"id": 1898,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1896,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915,
								1927
							],
							"name": "ERC165",
							"nameLocation": "677:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "844:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "861:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1908,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1927_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1927_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1907,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1927",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1912,
												"nodeType": "Return",
												"src": "854:47:12"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "789:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:12"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "838:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:12"
									},
									"scope": 1915,
									"src": "762:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1916,
							"src": "659:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1927
						]
					},
					"id": 1928,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1918,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1927,
							"linearizedBaseContracts": [
								1927
							],
							"name": "IERC165",
							"nameLocation": "431:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "817:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:13"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "860:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:13"
									},
									"scope": 1927,
									"src": "790:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1928,
							"src": "421:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts@5.0.0/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2981
						]
					},
					"id": 2982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1929,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2981,
							"linearizedBaseContracts": [
								2981
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1933,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1938,
									"members": [
										{
											"id": 1934,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 1935,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 1936,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 1937,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 1968,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															1951
														],
														"declarations": [
															{
																"constant": false,
																"id": 1951,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1955,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1953,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1956,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1957,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1963,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1949,
															"id": 1962,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1965,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1966,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1949,
														"id": 1967,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 2981,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 1996,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1983,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1989,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1981,
															"id": 1988,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1991,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1992,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1981,
														"id": 1995,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 2981,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 2038,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2010,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2017,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2015,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2016,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															2019
														],
														"declarations": [
															{
																"constant": false,
																"id": 2019,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2038,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2023,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2021,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2024,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2025,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2027,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2033,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2032,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2035,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2036,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2009,
														"id": 2037,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 2981,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 2066,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2052,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2059,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2057,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2051,
															"id": 2058,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2061,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2043,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2062,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2045,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2064,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2051,
														"id": 2065,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 2981,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2085,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2079,
															"id": 2086,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2089,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2090,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2092,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2079,
														"id": 2093,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 2981,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2106,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2107,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2101,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2110,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 2109,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2112,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 2981,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2124,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2125,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2128,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2127,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2130,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 2981,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2142,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2143,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2146,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2147,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2149,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2153,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 2981,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2160,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2173,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2172,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2169,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2160,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2164,
															"id": 2171,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2174,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2178,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2158,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2164,
												"id": 2187,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 2981,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "3901:4018:14",
										"statements": [
											{
												"id": 2313,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:14",
												"statements": [
													{
														"assignments": [
															2202
														],
														"declarations": [
															{
																"constant": false,
																"id": 2202,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "4232:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2201,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2206,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2203,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "4248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2204,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2194,
																"src": "4252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:14"
													},
													{
														"assignments": [
															2208
														],
														"declarations": [
															{
																"constant": false,
																"id": 2208,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "4312:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2207,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2209,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:14",
															"nodeType": "YulBlock",
															"src": "4392:122:14",
															"statements": [
																{
																	"nativeSrc": "4410:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:14"
																				},
																				"nativeSrc": "4433:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:14"
																		},
																		"nativeSrc": "4420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:14"
																				},
																				"nativeSrc": "4470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:14"
																				},
																				"nativeSrc": "4486:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:14"
																		},
																		"nativeSrc": "4466:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2208,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2194,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:14",
																"valueSize": 1
															}
														],
														"id": 2210,
														"nodeType": "InlineAssembly",
														"src": "4383:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2211,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "4595:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "4591:368:14",
														"trueBody": {
															"id": 2218,
															"nodeType": "Block",
															"src": "4607:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2214,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "4925:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2215,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "4933:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2200,
																	"id": 2217,
																	"nodeType": "Return",
																	"src": "4918:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2220,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "5065:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2221,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "5080:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2227,
														"nodeType": "IfStatement",
														"src": "5061:88:14",
														"trueBody": {
															"id": 2226,
															"nodeType": "Block",
															"src": "5087:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2223,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1933,
																			"src": "5112:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2225,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2229
														],
														"declarations": [
															{
																"constant": false,
																"id": 2229,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "5404:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2228,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2230,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:14",
															"nodeType": "YulBlock",
															"src": "5444:291:14",
															"statements": [
																{
																	"nativeSrc": "5513:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:14"
																		},
																		"nativeSrc": "5526:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:14"
																				},
																				"nativeSrc": "5653:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:14"
																		},
																		"nativeSrc": "5642:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:14"
																		},
																		"nativeSrc": "5700:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2208,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2208,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2229,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2229,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2229,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2192,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2194,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:14",
																"valueSize": 1
															}
														],
														"id": 2231,
														"nodeType": "InlineAssembly",
														"src": "5435:300:14"
													},
													{
														"assignments": [
															2233
														],
														"declarations": [
															{
																"constant": false,
																"id": 2233,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "5939:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2240,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2234,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "5954:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2236,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "5973:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:14",
															"nodeType": "YulBlock",
															"src": "6008:362:14",
															"statements": [
																{
																	"nativeSrc": "6073:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:14"
																		},
																		"nativeSrc": "6088:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nativeSrc": "6186:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:14"
																						},
																						"nativeSrc": "6333:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:14"
																				},
																				"nativeSrc": "6329:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:14"
																		},
																		"nativeSrc": "6325:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2233,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2233,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2233,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2233,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2233,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:14",
																"valueSize": 1
															}
														],
														"id": 2241,
														"nodeType": "InlineAssembly",
														"src": "5999:371:14"
													},
													{
														"expression": {
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2242,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "6436:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2243,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "6445:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2244,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "6453:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2247,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:14"
													},
													{
														"assignments": [
															2249
														],
														"declarations": [
															{
																"constant": false,
																"id": 2249,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "6775:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2248,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2256,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2251,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "6798:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:14"
													},
													{
														"expression": {
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2257,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7031:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2259,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7046:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2260,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7060:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2264,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:14"
													},
													{
														"expression": {
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7100:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7115:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2268,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7129:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2272,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:14"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2273,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7170:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2275,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7185:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2276,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7199:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:14"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2283,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7255:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2284,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7269:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:14"
													},
													{
														"expression": {
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7310:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2291,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7325:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2292,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7339:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2296,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:14"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2297,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "7381:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2299,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7396:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2300,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "7410:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:14"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2305,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "7851:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2306,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "7860:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2307,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "7868:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:14"
													},
													{
														"expression": {
															"id": 2311,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "7896:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2200,
														"id": 2312,
														"nodeType": "Return",
														"src": "7889:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "3819:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "3830:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "3841:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:14"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "3885:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:14"
									},
									"scope": 2981,
									"src": "3803:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "8161:192:14",
										"statements": [
											{
												"assignments": [
													2331
												],
												"declarations": [
													{
														"constant": false,
														"id": 2331,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "8171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2337,
												"initialValue": {
													"arguments": [
														{
															"id": 2333,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "8195:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2334,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "8198:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2335,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "8201:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2332,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2315,
															2358
														],
														"referencedDeclaration": 2315,
														"src": "8188:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2339,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "8244:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1938",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1938",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2338,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "8227:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1938_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2342,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "8264:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2343,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "8267:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2344,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "8270:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2341,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2354,
												"nodeType": "IfStatement",
												"src": "8223:101:14",
												"trueBody": {
													"id": 2353,
													"nodeType": "Block",
													"src": "8288:36:14",
													"statements": [
														{
															"expression": {
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2349,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "8302:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2352,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2355,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2331,
													"src": "8340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2356,
												"nodeType": "Return",
												"src": "8333:13:14"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8067:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8078:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8089:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8110:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2323,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "8110:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "8110:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:14"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8152:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:14"
									},
									"scope": 2981,
									"src": "8051:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "8644:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2366,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "8658:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2372,
												"nodeType": "IfStatement",
												"src": "8654:45:14",
												"trueBody": {
													"id": 2371,
													"nodeType": "Block",
													"src": "8666:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2365,
															"id": 2370,
															"nodeType": "Return",
															"src": "8680:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2469,
														"src": "9378:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2383,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2377,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2361,
																			"src": "9406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2376,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2637,
																			2672
																		],
																		"referencedDeclaration": 2637,
																		"src": "9401:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2381,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:14"
											},
											{
												"id": 2468,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:14",
												"statements": [
													{
														"expression": {
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2384,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "9839:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2385,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "9849:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2386,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "9858:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2387,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "9862:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2394,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:14"
													},
													{
														"expression": {
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2395,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "9888:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2396,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "9898:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2397,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "9907:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2398,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "9911:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2405,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:14"
													},
													{
														"expression": {
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2406,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "9937:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2407,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "9947:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2408,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "9956:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2409,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "9960:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2412,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2416,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:14"
													},
													{
														"expression": {
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2417,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "9986:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2418,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "9996:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2419,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "10005:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2420,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "10009:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2423,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2427,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:14"
													},
													{
														"expression": {
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2428,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "10035:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2429,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "10045:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2430,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "10054:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2431,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "10058:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2438,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:14"
													},
													{
														"expression": {
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2439,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "10084:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2440,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "10094:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2441,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "10103:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2442,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "10107:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2445,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2449,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:14"
													},
													{
														"expression": {
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2450,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "10133:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2451,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2374,
																				"src": "10143:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2452,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "10152:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2453,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "10156:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2456,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2460,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2462,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "10193:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2463,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2361,
																		"src": "10201:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2464,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "10205:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2461,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "10189:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2365,
														"id": 2467,
														"nodeType": "Return",
														"src": "10182:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "8601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:14"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "8635:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:14"
									},
									"scope": 2981,
									"src": "8587:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "10405:164:14",
										"statements": [
											{
												"id": 2503,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:14",
												"statements": [
													{
														"assignments": [
															2482
														],
														"declarations": [
															{
																"constant": false,
																"id": 2482,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2503,
																"src": "10439:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2481,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2486,
														"initialValue": {
															"arguments": [
																{
																	"id": 2484,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "10461:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2483,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2470,
																	2505
																],
																"referencedDeclaration": 2470,
																"src": "10456:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "10484:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2489,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2476,
																						"src": "10511:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2488,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2980,
																					"src": "10494:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1938_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2491,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2482,
																						"src": "10524:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2492,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2482,
																						"src": "10533:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2494,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2473,
																					"src": "10542:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2480,
														"id": 2502,
														"nodeType": "Return",
														"src": "10477:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "10343:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "10354:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2474,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "10354:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "10354:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:14"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "10396:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:14"
									},
									"scope": 2981,
									"src": "10329:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2636,
										"nodeType": "Block",
										"src": "10760:922:14",
										"statements": [
											{
												"assignments": [
													2514
												],
												"declarations": [
													{
														"constant": false,
														"id": 2514,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2636,
														"src": "10770:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2516,
												"initialValue": {
													"hexValue": "30",
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:14"
											},
											{
												"id": 2633,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "10826:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2531,
														"nodeType": "IfStatement",
														"src": "10822:99:14",
														"trueBody": {
															"id": 2530,
															"nodeType": "Block",
															"src": "10844:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2522,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "10862:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:14"
																},
																{
																	"expression": {
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2526,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "10893:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2529,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "10938:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2546,
														"nodeType": "IfStatement",
														"src": "10934:96:14",
														"trueBody": {
															"id": 2545,
															"nodeType": "Block",
															"src": "10955:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "10973:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:14"
																},
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11003:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2547,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11047:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "11043:96:14",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "11064:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2552,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11082:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:14"
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11112:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11156:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2576,
														"nodeType": "IfStatement",
														"src": "11152:96:14",
														"trueBody": {
															"id": 2575,
															"nodeType": "Block",
															"src": "11173:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11191:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:14"
																},
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11221:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11265:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "11261:93:14",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "11281:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11299:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:14"
																},
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11328:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11371:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2606,
														"nodeType": "IfStatement",
														"src": "11367:93:14",
														"trueBody": {
															"id": 2605,
															"nodeType": "Block",
															"src": "11387:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2597,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11405:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2600,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:14"
																},
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2601,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11434:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11477:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2621,
														"nodeType": "IfStatement",
														"src": "11473:93:14",
														"trueBody": {
															"id": 2620,
															"nodeType": "Block",
															"src": "11493:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11511:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2615,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:14"
																},
																{
																	"expression": {
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2616,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11540:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "11583:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2632,
														"nodeType": "IfStatement",
														"src": "11579:64:14",
														"trueBody": {
															"id": 2631,
															"nodeType": "Block",
															"src": "11599:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2627,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "11617:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2634,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2514,
													"src": "11669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2512,
												"id": 2635,
												"nodeType": "Return",
												"src": "11662:13:14"
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "10713:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:14"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "10751:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:14"
									},
									"scope": 2981,
									"src": "10699:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "11915:168:14",
										"statements": [
											{
												"id": 2670,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:14",
												"statements": [
													{
														"assignments": [
															2649
														],
														"declarations": [
															{
																"constant": false,
																"id": 2649,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2670,
																"src": "11949:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2648,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2653,
														"initialValue": {
															"arguments": [
																{
																	"id": 2651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2640,
																	"src": "11971:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2650,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2637,
																	2672
																],
																"referencedDeclaration": 2637,
																"src": "11966:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2654,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "11998:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2656,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2643,
																						"src": "12025:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2655,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2980,
																					"src": "12008:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1938_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2660,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2659,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2649,
																						"src": "12043:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2661,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "12052:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2667,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2647,
														"id": 2669,
														"nodeType": "Return",
														"src": "11991:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2638,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "11849:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "11864:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2641,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "11864:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "11864:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:14"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "11906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:14"
									},
									"scope": 2981,
									"src": "11835:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2800,
										"nodeType": "Block",
										"src": "12276:854:14",
										"statements": [
											{
												"assignments": [
													2681
												],
												"declarations": [
													{
														"constant": false,
														"id": 2681,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2800,
														"src": "12286:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2683,
												"initialValue": {
													"hexValue": "30",
													"id": 2682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:14"
											},
											{
												"id": 2797,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2700,
														"nodeType": "IfStatement",
														"src": "12338:103:14",
														"trueBody": {
															"id": 2699,
															"nodeType": "Block",
															"src": "12361:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12379:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2694,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:14"
																},
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12414:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2701,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12458:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2717,
														"nodeType": "IfStatement",
														"src": "12454:103:14",
														"trueBody": {
															"id": 2716,
															"nodeType": "Block",
															"src": "12477:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12495:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2711,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:14"
																},
																{
																	"expression": {
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2712,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12530:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2715,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2718,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12574:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2734,
														"nodeType": "IfStatement",
														"src": "12570:103:14",
														"trueBody": {
															"id": 2733,
															"nodeType": "Block",
															"src": "12593:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2723,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12611:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:14"
																},
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12646:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2735,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12690:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2751,
														"nodeType": "IfStatement",
														"src": "12686:100:14",
														"trueBody": {
															"id": 2750,
															"nodeType": "Block",
															"src": "12708:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12726:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2745,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:14"
																},
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12760:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12803:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "12799:100:14",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "12821:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12839:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:14"
																},
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12873:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2769,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "12916:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2785,
														"nodeType": "IfStatement",
														"src": "12912:100:14",
														"trueBody": {
															"id": 2784,
															"nodeType": "Block",
															"src": "12934:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2774,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12952:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:14"
																},
																{
																	"expression": {
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2780,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "12986:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2783,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "13029:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "13025:66:14",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "13047:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "13065:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2798,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2681,
													"src": "13117:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2679,
												"id": 2799,
												"nodeType": "Return",
												"src": "13110:13:14"
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "12229:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:14"
									},
									"returnParameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "12267:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:14"
									},
									"scope": 2981,
									"src": "12214:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2835,
										"nodeType": "Block",
										"src": "13365:170:14",
										"statements": [
											{
												"id": 2834,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:14",
												"statements": [
													{
														"assignments": [
															2813
														],
														"declarations": [
															{
																"constant": false,
																"id": 2813,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2834,
																"src": "13399:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2812,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2817,
														"initialValue": {
															"arguments": [
																{
																	"id": 2815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "13422:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2814,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2801,
																	2836
																],
																"referencedDeclaration": 2801,
																"src": "13416:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2818,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2813,
																"src": "13449:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2820,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "13476:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2819,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2980,
																					"src": "13459:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1938_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2822,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2823,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2813,
																						"src": "13495:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2825,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2804,
																					"src": "13504:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2811,
														"id": 2833,
														"nodeType": "Return",
														"src": "13442:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2802,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "13299:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "13314:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2805,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "13314:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "13314:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:14"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "13356:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:14"
									},
									"scope": 2981,
									"src": "13284:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2922,
										"nodeType": "Block",
										"src": "13855:600:14",
										"statements": [
											{
												"assignments": [
													2845
												],
												"declarations": [
													{
														"constant": false,
														"id": 2845,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2922,
														"src": "13865:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2847,
												"initialValue": {
													"hexValue": "30",
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:14"
											},
											{
												"id": 2919,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "13921:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2862,
														"nodeType": "IfStatement",
														"src": "13917:98:14",
														"trueBody": {
															"id": 2861,
															"nodeType": "Block",
															"src": "13939:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "13957:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2856,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:14"
																},
																{
																	"expression": {
																		"id": 2859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2857,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2845,
																			"src": "13988:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2860,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "14032:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "14028:95:14",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "14049:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2868,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14067:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:14"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2845,
																			"src": "14097:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2878,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "14140:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2892,
														"nodeType": "IfStatement",
														"src": "14136:95:14",
														"trueBody": {
															"id": 2891,
															"nodeType": "Block",
															"src": "14157:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14175:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:14"
																},
																{
																	"expression": {
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2845,
																			"src": "14205:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2890,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2893,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "14248:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2907,
														"nodeType": "IfStatement",
														"src": "14244:95:14",
														"trueBody": {
															"id": 2906,
															"nodeType": "Block",
															"src": "14265:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14283:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:14"
																},
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2902,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2845,
																			"src": "14313:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2908,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "14356:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2918,
														"nodeType": "IfStatement",
														"src": "14352:64:14",
														"trueBody": {
															"id": 2917,
															"nodeType": "Block",
															"src": "14372:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2845,
																			"src": "14390:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2916,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2920,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2845,
													"src": "14442:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2843,
												"id": 2921,
												"nodeType": "Return",
												"src": "14435:13:14"
											}
										]
									},
									"documentation": {
										"id": 2837,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "13808:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:14"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "13846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:14"
									},
									"scope": 2981,
									"src": "13792:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "14692:177:14",
										"statements": [
											{
												"id": 2959,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:14",
												"statements": [
													{
														"assignments": [
															2935
														],
														"declarations": [
															{
																"constant": false,
																"id": 2935,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2959,
																"src": "14726:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2934,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2939,
														"initialValue": {
															"arguments": [
																{
																	"id": 2937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2926,
																	"src": "14750:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2936,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2923,
																	2961
																],
																"referencedDeclaration": 2923,
																"src": "14743:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2940,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2935,
																"src": "14777:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2942,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2929,
																						"src": "14804:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1938",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2941,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2980,
																					"src": "14787:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1938_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2949,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2944,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2947,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2945,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2935,
																									"src": "14823:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2946,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2948,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2950,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "14838:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2956,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2933,
														"id": 2958,
														"nodeType": "Return",
														"src": "14770:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2924,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "14626:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "14641:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2927,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "14641:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "14641:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:14"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "14683:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:14"
									},
									"scope": 2981,
									"src": "14610:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2979,
										"nodeType": "Block",
										"src": "15067:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2972,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2965,
																	"src": "15090:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1938",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1938",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2970,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2969,
												"id": 2978,
												"nodeType": "Return",
												"src": "15077:31:14"
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2980,
												"src": "15019:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1938",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2963,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1938,
														"src": "15019:8:14"
													},
													"referencedDeclaration": 1938,
													"src": "15019:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1938",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:14"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2980,
												"src": "15061:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:14"
									},
									"scope": 2981,
									"src": "14993:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2982,
							"src": "203:14914:14",
							"usedErrors": [
								1933
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3086
						]
					},
					"id": 3087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2983,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2984,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3086,
							"linearizedBaseContracts": [
								3086
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2994,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2987,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2995,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2989,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2998,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 2997,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2987,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2993,
												"id": 3000,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 2985,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2986,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2988,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2991,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 3086,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3012,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3013,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3016,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3007,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 3015,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3011,
												"id": 3018,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 3003,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3004,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3006,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3009,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 3086,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3063,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													3031
												],
												"declarations": [
													{
														"constant": false,
														"id": 3031,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 3063,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3030,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3044,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3032,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3023,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3033,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3035,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3036,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3023,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3037,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3025,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3039,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3042,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3045,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3050,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3031,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3049,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3048,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3046,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3055,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3023,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3056,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3025,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3058,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3060,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3062,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3022,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3024,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3027,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 3086,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 3083,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3074,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3067,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 3078,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3067,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 3077,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3067,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3072,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3071,
														"id": 3082,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3066,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 3086,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3087,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			},
			"nft.sol": {
				"ast": {
					"absolutePath": "nft.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"ERC165": [
							1915
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"GameCharacterNFT": [
							3246
						],
						"IERC165": [
							1927
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Ownable": [
							147
						],
						"Strings": [
							1891
						]
					},
					"id": 3247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol",
							"id": 3089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3247,
							"sourceUnit": 1326,
							"src": "61:63:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3247,
							"sourceUnit": 1587,
							"src": "126:84:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"id": 3091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3247,
							"sourceUnit": 148,
							"src": "212:58:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3092,
										"name": "ERC721",
										"nameLocations": [
											"303:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "303:6:16"
									},
									"id": 3093,
									"nodeType": "InheritanceSpecifier",
									"src": "303:6:16"
								},
								{
									"baseName": {
										"id": 3094,
										"name": "Ownable",
										"nameLocations": [
											"311:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "311:7:16"
									},
									"id": 3095,
									"nodeType": "InheritanceSpecifier",
									"src": "311:7:16"
								}
							],
							"canonicalName": "GameCharacterNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3246,
							"linearizedBaseContracts": [
								3246,
								147,
								1325,
								269,
								1614,
								1442,
								1915,
								1927,
								1636
							],
							"name": "GameCharacterNFT",
							"nameLocation": "283:16:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7a4bb3b51994e0ca98a9a569b1b5baade9f795a768ce078dffdb422d1afeef4b",
									"id": 3107,
									"name": "CharacterMinted",
									"nameLocation": "387:15:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "419:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "403:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "434:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "426:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "450:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "443:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "443:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "464:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "456:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"indexed": false,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "479:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "471:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:83:16"
									},
									"src": "381:105:16"
								},
								{
									"constant": false,
									"id": 3109,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "539:12:16",
									"nodeType": "VariableDeclaration",
									"scope": 3246,
									"src": "524:27:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3108,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "524:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3111,
									"mutability": "mutable",
									"name": "tokenIdCounter",
									"nameLocation": "604:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 3246,
									"src": "588:30:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "588:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3115,
									"mutability": "mutable",
									"name": "characterMinted",
									"nameLocation": "735:15:16",
									"nodeType": "VariableDeclaration",
									"scope": 3246,
									"src": "702:48:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 3114,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3112,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "710:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "702:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3113,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "721:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3120,
									"mutability": "mutable",
									"name": "characterAttributes",
									"nameLocation": "855:19:16",
									"nodeType": "VariableDeclaration",
									"scope": 3246,
									"src": "807:67:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CharacterAttributes_$3127_storage_$",
										"typeString": "mapping(uint256 => struct GameCharacterNFT.CharacterAttributes)"
									},
									"typeName": {
										"id": 3119,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "815:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "807:39:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CharacterAttributes_$3127_storage_$",
											"typeString": "mapping(uint256 => struct GameCharacterNFT.CharacterAttributes)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3118,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3117,
												"name": "CharacterAttributes",
												"nameLocations": [
													"826:19:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3127,
												"src": "826:19:16"
											},
											"referencedDeclaration": 3127,
											"src": "826:19:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CharacterAttributes_$3127_storage_ptr",
												"typeString": "struct GameCharacterNFT.CharacterAttributes"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "GameCharacterNFT.CharacterAttributes",
									"id": 3127,
									"members": [
										{
											"constant": false,
											"id": 3122,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "973:4:16",
											"nodeType": "VariableDeclaration",
											"scope": 3127,
											"src": "966:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3121,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "966:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3124,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "996:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 3127,
											"src": "988:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3126,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "1020:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 3127,
											"src": "1012:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3125,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1012:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CharacterAttributes",
									"nameLocation": "935:19:16",
									"nodeType": "StructDefinition",
									"scope": 3246,
									"src": "928:105:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3148,
										"nodeType": "Block",
										"src": "1189:47:16",
										"statements": [
											{
												"expression": {
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3144,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3109,
														"src": "1200:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3145,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "1215:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1200:28:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3147,
												"nodeType": "ExpressionStatement",
												"src": "1200:28:16"
											}
										]
									},
									"id": 3149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3136,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3129,
													"src": "1153:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3137,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3131,
													"src": "1160:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3138,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3135,
												"name": "ERC721",
												"nameLocations": [
													"1146:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1146:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1146:22:16"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1177:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1181:6:16",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1177:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3142,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3139,
												"name": "Ownable",
												"nameLocations": [
													"1169:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1169:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1169:19:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1087:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "1073:19:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1073:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1108:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "1094:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "_baseTokenURI",
												"nameLocation": "1131:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "1117:27:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:73:16"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1189:0:16"
									},
									"scope": 3246,
									"src": "1061:175:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "1370:314:16",
										"statements": [
											{
												"assignments": [
													3161
												],
												"declarations": [
													{
														"constant": false,
														"id": 3161,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1389:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3198,
														"src": "1381:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1381:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3163,
												"initialValue": {
													"id": 3162,
													"name": "tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3111,
													"src": "1399:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1381:32:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1434:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1438:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1434:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3167,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "1446:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3164,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "1424:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3169,
												"nodeType": "ExpressionStatement",
												"src": "1424:30:16"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3170,
															"name": "characterMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3115,
															"src": "1465:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3172,
														"indexExpression": {
															"id": 3171,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "1481:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1465:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1492:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1465:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "1465:31:16"
											},
											{
												"expression": {
													"id": 3184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3176,
															"name": "characterAttributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "1507:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CharacterAttributes_$3127_storage_$",
																"typeString": "mapping(uint256 => struct GameCharacterNFT.CharacterAttributes storage ref)"
															}
														},
														"id": 3178,
														"indexExpression": {
															"id": 3177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "1527:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1507:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CharacterAttributes_$3127_storage",
															"typeString": "struct GameCharacterNFT.CharacterAttributes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3180,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "1558:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 3181,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3153,
																"src": "1564:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3182,
																"name": "power",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3155,
																"src": "1571:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3179,
															"name": "CharacterAttributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3127,
															"src": "1538:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CharacterAttributes_$3127_storage_ptr_$",
																"typeString": "type(struct GameCharacterNFT.CharacterAttributes storage pointer)"
															}
														},
														"id": 3183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1538:39:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CharacterAttributes_$3127_memory_ptr",
															"typeString": "struct GameCharacterNFT.CharacterAttributes memory"
														}
													},
													"src": "1507:70:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CharacterAttributes_$3127_storage",
														"typeString": "struct GameCharacterNFT.CharacterAttributes storage ref"
													}
												},
												"id": 3185,
												"nodeType": "ExpressionStatement",
												"src": "1507:70:16"
											},
											{
												"expression": {
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1588:16:16",
													"subExpression": {
														"id": 3186,
														"name": "tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3111,
														"src": "1588:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "1588:16:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1636:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1640:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1636:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "1648:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3193,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "1657:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3194,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "1663:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3195,
															"name": "power",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "1670:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3189,
														"name": "CharacterMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3107,
														"src": "1620:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,string memory,uint256,uint256)"
														}
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:56:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3197,
												"nodeType": "EmitStatement",
												"src": "1615:61:16"
											}
										]
									},
									"functionSelector": "5091df62",
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3157,
												"name": "onlyOwner",
												"nameLocations": [
													"1360:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1360:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1360:9:16"
										}
									],
									"name": "mintCharacter",
									"nameLocation": "1287:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1315:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "1301:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1301:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "1329:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "1321:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "1344:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "1336:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:50:16"
									},
									"returnParameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:0:16"
									},
									"scope": 3246,
									"src": "1278:406:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3210,
										"nodeType": "Block",
										"src": "1813:50:16",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3206,
														"name": "characterMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "1831:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3208,
													"indexExpression": {
														"id": 3207,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3201,
														"src": "1847:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1831:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3205,
												"id": 3209,
												"nodeType": "Return",
												"src": "1824:31:16"
											}
										]
									},
									"functionSelector": "9756aadd",
									"id": 3211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCharacterMinted",
									"nameLocation": "1749:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1775:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "1767:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:17:16"
									},
									"returnParameters": {
										"id": 3205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "1807:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1807:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:6:16"
									},
									"scope": 3246,
									"src": "1740:123:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "2018:226:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3223,
																"name": "characterMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "2037:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 3225,
															"indexExpression": {
																"id": 3224,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3213,
																"src": "2053:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2037:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861726163746572206e6f74206d696e746564",
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2063:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8",
																"typeString": "literal_string \"Character not minted\""
															},
															"value": "Character not minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b823b8b1cd3fe392bd566dfbfbab9369eedafab4426ba4c310360a4ec4904d8",
																"typeString": "literal_string \"Character not minted\""
															}
														],
														"id": 3222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2029:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2029:57:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3228,
												"nodeType": "ExpressionStatement",
												"src": "2029:57:16"
											},
											{
												"assignments": [
													3231
												],
												"declarations": [
													{
														"constant": false,
														"id": 3231,
														"mutability": "mutable",
														"name": "attributes",
														"nameLocation": "2124:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 3244,
														"src": "2097:37:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CharacterAttributes_$3127_memory_ptr",
															"typeString": "struct GameCharacterNFT.CharacterAttributes"
														},
														"typeName": {
															"id": 3230,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3229,
																"name": "CharacterAttributes",
																"nameLocations": [
																	"2097:19:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3127,
																"src": "2097:19:16"
															},
															"referencedDeclaration": 3127,
															"src": "2097:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CharacterAttributes_$3127_storage_ptr",
																"typeString": "struct GameCharacterNFT.CharacterAttributes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3235,
												"initialValue": {
													"baseExpression": {
														"id": 3232,
														"name": "characterAttributes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3120,
														"src": "2137:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CharacterAttributes_$3127_storage_$",
															"typeString": "mapping(uint256 => struct GameCharacterNFT.CharacterAttributes storage ref)"
														}
													},
													"id": 3234,
													"indexExpression": {
														"id": 3233,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3213,
														"src": "2157:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2137:28:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CharacterAttributes_$3127_storage",
														"typeString": "struct GameCharacterNFT.CharacterAttributes storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2097:68:16"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 3236,
																"name": "attributes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3231,
																"src": "2184:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CharacterAttributes_$3127_memory_ptr",
																	"typeString": "struct GameCharacterNFT.CharacterAttributes memory"
																}
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2195:4:16",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3122,
															"src": "2184:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 3238,
																"name": "attributes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3231,
																"src": "2201:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CharacterAttributes_$3127_memory_ptr",
																	"typeString": "struct GameCharacterNFT.CharacterAttributes memory"
																}
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2212:5:16",
															"memberName": "level",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3124,
															"src": "2201:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3240,
																"name": "attributes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3231,
																"src": "2219:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CharacterAttributes_$3127_memory_ptr",
																	"typeString": "struct GameCharacterNFT.CharacterAttributes memory"
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2230:5:16",
															"memberName": "power",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3126,
															"src": "2219:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3242,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2183:53:16",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(string memory,uint256,uint256)"
													}
												},
												"functionReturnParameters": 3221,
												"id": 3243,
												"nodeType": "Return",
												"src": "2176:60:16"
											}
										]
									},
									"functionSelector": "d0e60cff",
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCharacterAttributes",
									"nameLocation": "1922:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1953:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1945:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:17:16"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1985:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "2000:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "2009:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:33:16"
									},
									"scope": 3246,
									"src": "1913:331:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3247,
							"src": "274:1973:16",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								1341,
								1350,
								1359,
								3107
							]
						}
					],
					"src": "33:2214:16"
				},
				"id": 16
			}
		}
	}
}